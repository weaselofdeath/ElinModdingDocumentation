.TH "LayerDragGrid" 3 "Elin Modding Docs Doc" \" -*- nroff -*-
.ad l
.nh
.SH NAME
LayerDragGrid
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBLayerBaseCraft\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "void \fBOnOpen\fP ()"
.br
.ti -1c
.RI "\fBLayerDragGrid\fP \fBSetInv\fP (\fBInvOwnerDraglet\fP owner, bool refuelFromLayerDragGrid=false)"
.br
.ti -1c
.RI "int \fBGetPrice\fP ()"
.br
.ti -1c
.RI "void \fBRefreshCost\fP ()"
.br
.ti -1c
.RI "bool \fBIsAllGridSet\fP ()"
.br
.ti -1c
.RI "override void \fBClearButtons\fP ()"
.br
.ti -1c
.RI "override void \fBRefreshCurrentGrid\fP ()"
.br
.ti -1c
.RI "override List< \fBThing\fP > \fBGetTargets\fP ()"
.br
.ti -1c
.RI "void \fBValidate\fP ()"
.br
.ti -1c
.RI "void \fBRedraw\fP ()"
.br
.ti -1c
.RI "override void \fBOnKill\fP ()"
.br
.ti -1c
.RI "override void \fBOnUpdateInput\fP ()"
.br
.ti -1c
.RI "override void \fBOnRightClick\fP ()"
.br
.in -1c

Public Member Functions inherited from \fBLayerBaseCraft\fP
.in +1c
.ti -1c
.RI "virtual int \fBGetReqIngredient\fP (int index)"
.br
.ti -1c
.RI "virtual void \fBOnEndCraft\fP ()"
.br
.in -1c

Public Member Functions inherited from \fBELayer\fP
.in +1c
.ti -1c
.RI "override void \fBOnBeforeAddLayer\fP ()"
.br
.ti -1c
.RI "void \fBInitInspector\fP ()"
.br
.ti -1c
.RI "override void \fBInit\fP ()"
.br
.ti -1c
.RI "override void \fBOnAfterAddLayer\fP ()"
.br
.ti -1c
.RI "void \fBTryShowHelp\fP ()"
.br
.ti -1c
.RI "void \fBAddLayerToUI\fP (string id)"
.br
.ti -1c
.RI "void \fBTryShowHint\fP (string _langHint=null)"
.br
.ti -1c
.RI "void \fBTalkHomeMemeber\fP (string id)"
.br
.ti -1c
.RI "void \fBTalkMaid\fP (string id)"
.br
.ti -1c
.RI "override void \fBOnRightClick\fP ()"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static \fBLayerDragGrid\fP \fBCreate\fP (\fBInvOwnerDraglet\fP owner, bool refuelFromLayerDragGrid=false)"
.br
.ti -1c
.RI "static \fBLayerDragGrid\fP \fBCreateOffering\fP (\fBTraitAltar\fP altar)"
.br
.ti -1c
.RI "static \fBLayerDragGrid\fP \fBCreateDeliver\fP (InvOwnerDeliver\&.Mode mode=InvOwnerDeliver\&.Mode\&.Default, \fBCard\fP owner=null)"
.br
.ti -1c
.RI "static \fBLayerDragGrid\fP \fBCreateGive\fP (\fBChara\fP c)"
.br
.ti -1c
.RI "static \fBLayerDragGrid\fP \fBCreateCraft\fP (\fBTraitCrafter\fP crafter)"
.br
.ti -1c
.RI "static \fBLayerDragGrid\fP \fBCreateRecycle\fP (\fBTraitRecycle\fP recycle)"
.br
.ti -1c
.RI "static \fBLayerDragGrid\fP \fBCreateGacha\fP (\fBTraitGacha\fP gacha)"
.br
.ti -1c
.RI "static \fBLayerDragGrid\fP \fBTryProc\fP (\fBChara\fP cc, \fBInvOwnerEffect\fP owner)"
.br
.ti -1c
.RI "static \fBLayerDragGrid\fP \fBCreateIdentify\fP (\fBChara\fP cc, bool superior=false, BlessedState state=BlessedState\&.Normal, int price=0, int count=1)"
.br
.ti -1c
.RI "static \fBLayerDragGrid\fP \fBCreateEnchant\fP (\fBChara\fP cc, bool armor, bool superior=false, BlessedState state=BlessedState\&.Normal, int count=1)"
.br
.ti -1c
.RI "static \fBLayerDragGrid\fP \fBCreateChangeMaterial\fP (\fBChara\fP cc, \fBThing\fP consume, \fBSourceMaterial\&.Row\fP mat, EffectId idEffect, BlessedState state=BlessedState\&.Normal, int price=0, int count=1)"
.br
.ti -1c
.RI "static \fBLayerDragGrid\fP \fBCreateUncurse\fP (\fBChara\fP cc, BlessedState state=BlessedState\&.Normal, int price=0, int count=1)"
.br
.ti -1c
.RI "static \fBLayerDragGrid\fP \fBCreateLighten\fP (\fBChara\fP cc, BlessedState state=BlessedState\&.Normal, int price=0, int count=1)"
.br
.ti -1c
.RI "static \fBLayerDragGrid\fP \fBCreateReconstruction\fP (\fBChara\fP cc, BlessedState state=BlessedState\&.Normal, int price=0, int count=1)"
.br
.in -1c

Static Public Member Functions inherited from \fBELayer\fP
.in +1c
.ti -1c
.RI "static int \fBrnd\fP (int a)"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "UIItem \fBitemCost\fP"
.br
.ti -1c
.RI "Image \fBimageOwner\fP"
.br
.ti -1c
.RI "UIText \fBtextTitle\fP"
.br
.ti -1c
.RI "UIText \fBtextFuel\fP"
.br
.ti -1c
.RI "Transform \fBtransIndex\fP"
.br
.ti -1c
.RI "List< \fBButtonGrid\fP > \fBbuttons\fP"
.br
.ti -1c
.RI "\fBButtonGrid\fP \fBbuttonOwner\fP"
.br
.ti -1c
.RI "UIButton \fBbuttonRefuel\fP"
.br
.ti -1c
.RI "UIButton \fBbuttonAutoRefuel\fP"
.br
.ti -1c
.RI "UIButton \fBbuttonAlly\fP"
.br
.ti -1c
.RI "\fBInvOwnerDraglet\fP \fBowner\fP"
.br
.ti -1c
.RI "\fBUICurrency\fP \fBuiCurrency\fP"
.br
.ti -1c
.RI "int \fBcurrentIndex\fP"
.br
.ti -1c
.RI "\fBUIDragGridInfo\fP \fBinfo\fP"
.br
.ti -1c
.RI "UIList \fBlistAlly\fP"
.br
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "static \fBLayerDragGrid\fP \fBInstance\fP"
.br
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "\fBButtonGrid\fP \fBCurrentButton\fP\fR [get]\fP"
.br
.ti -1c
.RI "override bool \fBCanCancelAI\fP\fR [get]\fP"
.br
.ti -1c
.RI "override bool \fBRepeatAI\fP\fR [get]\fP"
.br
.in -1c

Properties inherited from \fBLayerBaseCraft\fP
.in +1c
.ti -1c
.RI "virtual bool \fBCanCancelAI\fP\fR [get]\fP"
.br
.ti -1c
.RI "virtual bool \fBRepeatAI\fP\fR [get]\fP"
.br
.in -1c

Properties inherited from \fBELayer\fP
.in +1c
.ti -1c
.RI "static \fBCore\fP \fBcore\fP\fR [get]\fP"
.br
.ti -1c
.RI "static \fBGame\fP \fBgame\fP\fR [get]\fP"
.br
.ti -1c
.RI "static bool \fBAdvMode\fP\fR [get]\fP"
.br
.ti -1c
.RI "static \fBPlayer\fP \fBplayer\fP\fR [get]\fP"
.br
.ti -1c
.RI "static \fBChara\fP \fBpc\fP\fR [get]\fP"
.br
.ti -1c
.RI "static \fBFactionBranch\fP \fBBranch\fP\fR [get]\fP"
.br
.ti -1c
.RI "static \fBFaction\fP \fBHome\fP\fR [get]\fP"
.br
.ti -1c
.RI "static \fBUI\fP \fBui\fP\fR [get]\fP"
.br
.ti -1c
.RI "static \fBMap\fP \fB_map\fP\fR [get]\fP"
.br
.ti -1c
.RI "static \fBZone\fP \fB_zone\fP\fR [get]\fP"
.br
.ti -1c
.RI "static \fBScene\fP \fBscene\fP\fR [get]\fP"
.br
.ti -1c
.RI "static \fBBaseGameScreen\fP \fBscreen\fP\fR [get]\fP"
.br
.ti -1c
.RI "static \fBCoreConfig\fP \fBconfig\fP\fR [get]\fP"
.br
.ti -1c
.RI "static \fBGameSetting\fP \fBsetting\fP\fR [get]\fP"
.br
.ti -1c
.RI "static \fBColorProfile\fP \fBColors\fP\fR [get]\fP"
.br
.ti -1c
.RI "static \fBSourceManager\fP \fBsources\fP\fR [get]\fP"
.br
.ti -1c
.RI "static \fBWorld\fP \fBworld\fP\fR [get]\fP"
.br
.ti -1c
.RI "static SoundManager \fBSound\fP\fR [get]\fP"
.br
.ti -1c
.RI "static \fBCoreDebug\fP \fBdebug\fP\fR [get]\fP"
.br
.ti -1c
.RI "bool \fBIsFloat\fP\fR [get]\fP"
.br
.ti -1c
.RI "virtual string \fBIdHelp\fP\fR [get]\fP"
.br
.in -1c
.SS "Additional Inherited Members"


Protected Member Functions inherited from \fBELayer\fP
.in +1c
.ti -1c
.RI "override void \fB_Close\fP ()"
.br
.ti -1c
.RI "override void \fBKill\fP ()"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line \fB7\fP of file \fBLayerDragGrid\&.cs\fP\&.
.SH "Member Function Documentation"
.PP 
.SS "override void LayerDragGrid\&.ClearButtons ()\fR [virtual]\fP"

.PP
Reimplemented from \fBLayerBaseCraft\fP\&.
.PP
Definition at line \fB220\fP of file \fBLayerDragGrid\&.cs\fP\&.
.SS "static \fBLayerDragGrid\fP LayerDragGrid\&.Create (\fBInvOwnerDraglet\fP owner, bool refuelFromLayerDragGrid = \fRfalse\fP)\fR [static]\fP"

.PP
Definition at line \fB338\fP of file \fBLayerDragGrid\&.cs\fP\&.
.SS "static \fBLayerDragGrid\fP LayerDragGrid\&.CreateChangeMaterial (\fBChara\fP cc, \fBThing\fP consume, \fBSourceMaterial\&.Row\fP mat, EffectId idEffect, BlessedState state = \fRBlessedState::Normal\fP, int price = \fR0\fP, int count = \fR1\fP)\fR [static]\fP"

.PP
Definition at line \fB469\fP of file \fBLayerDragGrid\&.cs\fP\&.
.SS "static \fBLayerDragGrid\fP LayerDragGrid\&.CreateCraft (\fBTraitCrafter\fP crafter)\fR [static]\fP"

.PP
Definition at line \fB377\fP of file \fBLayerDragGrid\&.cs\fP\&.
.SS "static \fBLayerDragGrid\fP LayerDragGrid\&.CreateDeliver (InvOwnerDeliver\&.Mode mode = \fRInvOwnerDeliver::Mode::Default\fP, \fBCard\fP owner = \fRnull\fP)\fR [static]\fP"

.PP
Definition at line \fB354\fP of file \fBLayerDragGrid\&.cs\fP\&.
.SS "static \fBLayerDragGrid\fP LayerDragGrid\&.CreateEnchant (\fBChara\fP cc, bool armor, bool superior = \fRfalse\fP, BlessedState state = \fRBlessedState::Normal\fP, int count = \fR1\fP)\fR [static]\fP"

.PP
Definition at line \fB457\fP of file \fBLayerDragGrid\&.cs\fP\&.
.SS "static \fBLayerDragGrid\fP LayerDragGrid\&.CreateGacha (\fBTraitGacha\fP gacha)\fR [static]\fP"

.PP
Definition at line \fB396\fP of file \fBLayerDragGrid\&.cs\fP\&.
.SS "static \fBLayerDragGrid\fP LayerDragGrid\&.CreateGive (\fBChara\fP c)\fR [static]\fP"

.PP
Definition at line \fB368\fP of file \fBLayerDragGrid\&.cs\fP\&.
.SS "static \fBLayerDragGrid\fP LayerDragGrid\&.CreateIdentify (\fBChara\fP cc, bool superior = \fRfalse\fP, BlessedState state = \fRBlessedState::Normal\fP, int price = \fR0\fP, int count = \fR1\fP)\fR [static]\fP"

.PP
Definition at line \fB445\fP of file \fBLayerDragGrid\&.cs\fP\&.
.SS "static \fBLayerDragGrid\fP LayerDragGrid\&.CreateLighten (\fBChara\fP cc, BlessedState state = \fRBlessedState::Normal\fP, int price = \fR0\fP, int count = \fR1\fP)\fR [static]\fP"

.PP
Definition at line \fB494\fP of file \fBLayerDragGrid\&.cs\fP\&.
.SS "static \fBLayerDragGrid\fP LayerDragGrid\&.CreateOffering (\fBTraitAltar\fP altar)\fR [static]\fP"

.PP
Definition at line \fB344\fP of file \fBLayerDragGrid\&.cs\fP\&.
.SS "static \fBLayerDragGrid\fP LayerDragGrid\&.CreateReconstruction (\fBChara\fP cc, BlessedState state = \fRBlessedState::Normal\fP, int price = \fR0\fP, int count = \fR1\fP)\fR [static]\fP"

.PP
Definition at line \fB505\fP of file \fBLayerDragGrid\&.cs\fP\&.
.SS "static \fBLayerDragGrid\fP LayerDragGrid\&.CreateRecycle (\fBTraitRecycle\fP recycle)\fR [static]\fP"

.PP
Definition at line \fB386\fP of file \fBLayerDragGrid\&.cs\fP\&.
.SS "static \fBLayerDragGrid\fP LayerDragGrid\&.CreateUncurse (\fBChara\fP cc, BlessedState state = \fRBlessedState::Normal\fP, int price = \fR0\fP, int count = \fR1\fP)\fR [static]\fP"

.PP
Definition at line \fB483\fP of file \fBLayerDragGrid\&.cs\fP\&.
.SS "int LayerDragGrid\&.GetPrice ()"

.PP
Definition at line \fB185\fP of file \fBLayerDragGrid\&.cs\fP\&.
.SS "override List< \fBThing\fP > LayerDragGrid\&.GetTargets ()\fR [virtual]\fP"

.PP
Reimplemented from \fBLayerBaseCraft\fP\&.
.PP
Definition at line \fB254\fP of file \fBLayerDragGrid\&.cs\fP\&.
.SS "bool LayerDragGrid\&.IsAllGridSet ()"

.PP
Definition at line \fB207\fP of file \fBLayerDragGrid\&.cs\fP\&.
.SS "override void LayerDragGrid\&.OnKill ()"

.PP
Definition at line \fB301\fP of file \fBLayerDragGrid\&.cs\fP\&.
.SS "void LayerDragGrid\&.OnOpen ()"

.PP
Definition at line \fB40\fP of file \fBLayerDragGrid\&.cs\fP\&.
.SS "override void LayerDragGrid\&.OnRightClick ()"

.PP
Definition at line \fB329\fP of file \fBLayerDragGrid\&.cs\fP\&.
.SS "override void LayerDragGrid\&.OnUpdateInput ()"

.PP
Definition at line \fB317\fP of file \fBLayerDragGrid\&.cs\fP\&.
.SS "void LayerDragGrid\&.Redraw ()"

.PP
Definition at line \fB288\fP of file \fBLayerDragGrid\&.cs\fP\&.
.SS "void LayerDragGrid\&.RefreshCost ()"

.PP
Definition at line \fB191\fP of file \fBLayerDragGrid\&.cs\fP\&.
.SS "override void LayerDragGrid\&.RefreshCurrentGrid ()\fR [virtual]\fP"

.PP
Reimplemented from \fBLayerBaseCraft\fP\&.
.PP
Definition at line \fB230\fP of file \fBLayerDragGrid\&.cs\fP\&.
.SS "\fBLayerDragGrid\fP LayerDragGrid\&.SetInv (\fBInvOwnerDraglet\fP owner, bool refuelFromLayerDragGrid = \fRfalse\fP)"

.PP
Definition at line \fB52\fP of file \fBLayerDragGrid\&.cs\fP\&.
.SS "static \fBLayerDragGrid\fP LayerDragGrid\&.TryProc (\fBChara\fP cc, \fBInvOwnerEffect\fP owner)\fR [static]\fP"

.PP
Definition at line \fB406\fP of file \fBLayerDragGrid\&.cs\fP\&.
.SS "void LayerDragGrid\&.Validate ()"

.PP
Definition at line \fB273\fP of file \fBLayerDragGrid\&.cs\fP\&.
.SH "Member Data Documentation"
.PP 
.SS "UIButton LayerDragGrid\&.buttonAlly"

.PP
Definition at line \fB546\fP of file \fBLayerDragGrid\&.cs\fP\&.
.SS "UIButton LayerDragGrid\&.buttonAutoRefuel"

.PP
Definition at line \fB543\fP of file \fBLayerDragGrid\&.cs\fP\&.
.SS "\fBButtonGrid\fP LayerDragGrid\&.buttonOwner"

.PP
Definition at line \fB537\fP of file \fBLayerDragGrid\&.cs\fP\&.
.SS "UIButton LayerDragGrid\&.buttonRefuel"

.PP
Definition at line \fB540\fP of file \fBLayerDragGrid\&.cs\fP\&.
.SS "List<\fBButtonGrid\fP> LayerDragGrid\&.buttons"

.PP
Definition at line \fB534\fP of file \fBLayerDragGrid\&.cs\fP\&.
.SS "int LayerDragGrid\&.currentIndex"

.PP
Definition at line \fB555\fP of file \fBLayerDragGrid\&.cs\fP\&.
.SS "Image LayerDragGrid\&.imageOwner"

.PP
Definition at line \fB522\fP of file \fBLayerDragGrid\&.cs\fP\&.
.SS "\fBUIDragGridInfo\fP LayerDragGrid\&.info"

.PP
Definition at line \fB558\fP of file \fBLayerDragGrid\&.cs\fP\&.
.SS "\fBLayerDragGrid\fP LayerDragGrid\&.Instance\fR [static]\fP"

.PP
Definition at line \fB516\fP of file \fBLayerDragGrid\&.cs\fP\&.
.SS "UIItem LayerDragGrid\&.itemCost"

.PP
Definition at line \fB519\fP of file \fBLayerDragGrid\&.cs\fP\&.
.SS "UIList LayerDragGrid\&.listAlly"

.PP
Definition at line \fB561\fP of file \fBLayerDragGrid\&.cs\fP\&.
.SS "\fBInvOwnerDraglet\fP LayerDragGrid\&.owner"

.PP
Definition at line \fB549\fP of file \fBLayerDragGrid\&.cs\fP\&.
.SS "UIText LayerDragGrid\&.textFuel"

.PP
Definition at line \fB528\fP of file \fBLayerDragGrid\&.cs\fP\&.
.SS "UIText LayerDragGrid\&.textTitle"

.PP
Definition at line \fB525\fP of file \fBLayerDragGrid\&.cs\fP\&.
.SS "Transform LayerDragGrid\&.transIndex"

.PP
Definition at line \fB531\fP of file \fBLayerDragGrid\&.cs\fP\&.
.SS "\fBUICurrency\fP LayerDragGrid\&.uiCurrency"

.PP
Definition at line \fB552\fP of file \fBLayerDragGrid\&.cs\fP\&.
.SH "Property Documentation"
.PP 
.SS "override bool LayerDragGrid\&.CanCancelAI\fR [get]\fP"

.PP
Definition at line \fB21\fP of file \fBLayerDragGrid\&.cs\fP\&.
.SS "\fBButtonGrid\fP LayerDragGrid\&.CurrentButton\fR [get]\fP"

.PP
Definition at line \fB11\fP of file \fBLayerDragGrid\&.cs\fP\&.
.SS "override bool LayerDragGrid\&.RepeatAI\fR [get]\fP"

.PP
Definition at line \fB31\fP of file \fBLayerDragGrid\&.cs\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Elin Modding Docs Doc from the source code\&.
