.TH "BaseArea" 3 "Elin Modding Docs Doc" \" -*- nroff -*-
.ad l
.nh
.SH NAME
BaseArea
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBEClass\fP, and \fBIInspect\fP\&.
.PP
Inherited by \fBArea\fP, \fBRoom\fP, and \fBVirtualRoom\fP\&.
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBInteraction\fP"
.br
.in -1c
.SS "Public Types"

.in +1c
.ti -1c
.RI "enum \fBAccessType\fP { \fBPublic\fP, \fBPrivate\fP }"
.br
.in -1c

Public Types inherited from \fBIInspect\fP
.in +1c
.ti -1c
.RI "enum \fBNoteMode\fP { \fBDefault\fP, \fBRecipe\fP, \fBProduct\fP, \fBInfo\fP }"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBPoint\fP \fBGetRandomFreePos\fP ()"
.br
.ti -1c
.RI "\fBThing\fP \fBGetEmptySeat\fP ()"
.br
.ti -1c
.RI "virtual \fBPoint\fP \fBGetRandomPoint\fP (bool walkable=true, bool allowChara=true)"
.br
.ti -1c
.RI "void \fBChangeType\fP (string _id)"
.br
.ti -1c
.RI "void \fBSetRandomName\fP (int seed=\-1)"
.br
.ti -1c
.RI "string \fBGetRandomName\fP (int seed=\-1)"
.br
.ti -1c
.RI "HashSet< string > \fBListRoomNames\fP ()"
.br
.ti -1c
.RI "int \fBGetSortVal\fP (UIList\&.SortMode m)"
.br
.ti -1c
.RI "List< \fBBaseArea\&.Interaction\fP > \fBListInteractions\fP ()"
.br
.ti -1c
.RI "void \fBOnInspect\fP ()"
.br
.ti -1c
.RI "void \fBWriteNote\fP (UINote n, Action< UINote > onWriteNote=null, IInspect\&.NoteMode mode=IInspect\&.NoteMode\&.Default, \fBRecipe\fP recipe=null)"
.br
.in -1c

Public Member Functions inherited from \fBIInspect\fP
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "int \fBuid\fP"
.br
.ti -1c
.RI "\fBPointList\fP \fBpoints\fP = new \fBPointList\fP()"
.br
.ti -1c
.RI "\fBAreaData\fP \fBdata\fP = new \fBAreaData\fP()"
.br
.ti -1c
.RI "\fBAreaType\fP \fBtype\fP = new \fBAreaTypeRoom\fP()"
.br
.ti -1c
.RI "\fBTraitRoomPlate\fP \fBplate\fP"
.br
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "virtual string \fBName\fP\fR [get]\fP"
.br
.ti -1c
.RI "bool \fBIsPrivate\fP\fR [get]\fP"
.br
.ti -1c
.RI "\fBSourceArea\&.Row\fP \fBsource\fP\fR [get]\fP"
.br
.ti -1c
.RI "bool \fBCanInspect\fP\fR [get]\fP"
.br
.ti -1c
.RI "string \fBInspectName\fP\fR [get]\fP"
.br
.ti -1c
.RI "\fBPoint\fP \fBInspectPoint\fP\fR [get]\fP"
.br
.ti -1c
.RI "Vector3 \fBInspectPosition\fP\fR [get]\fP"
.br
.in -1c

Properties inherited from \fBEClass\fP
.in +1c
.ti -1c
.RI "static \fBGame\fP \fBgame\fP\fR [get]\fP"
.br
.ti -1c
.RI "static bool \fBAdvMode\fP\fR [get]\fP"
.br
.ti -1c
.RI "static \fBPlayer\fP \fBplayer\fP\fR [get]\fP"
.br
.ti -1c
.RI "static \fBChara\fP \fBpc\fP\fR [get]\fP"
.br
.ti -1c
.RI "static \fBUI\fP \fBui\fP\fR [get]\fP"
.br
.ti -1c
.RI "static \fBMap\fP \fB_map\fP\fR [get]\fP"
.br
.ti -1c
.RI "static \fBZone\fP \fB_zone\fP\fR [get]\fP"
.br
.ti -1c
.RI "static \fBFactionBranch\fP \fBBranch\fP\fR [get]\fP"
.br
.ti -1c
.RI "static \fBFactionBranch\fP \fBBranchOrHomeBranch\fP\fR [get]\fP"
.br
.ti -1c
.RI "static \fBFaction\fP \fBHome\fP\fR [get]\fP"
.br
.ti -1c
.RI "static \fBFaction\fP \fBWilds\fP\fR [get]\fP"
.br
.ti -1c
.RI "static \fBScene\fP \fBscene\fP\fR [get]\fP"
.br
.ti -1c
.RI "static \fBBaseGameScreen\fP \fBscreen\fP\fR [get]\fP"
.br
.ti -1c
.RI "static \fBGameSetting\fP \fBsetting\fP\fR [get]\fP"
.br
.ti -1c
.RI "static \fBGameData\fP \fBgamedata\fP\fR [get]\fP"
.br
.ti -1c
.RI "static \fBColorProfile\fP \fBColors\fP\fR [get]\fP"
.br
.ti -1c
.RI "static \fBWorld\fP \fBworld\fP\fR [get]\fP"
.br
.ti -1c
.RI "static \fBSourceManager\fP \fBsources\fP\fR [get]\fP"
.br
.ti -1c
.RI "static \fBSourceManager\fP \fBeditorSources\fP\fR [get]\fP"
.br
.ti -1c
.RI "static SoundManager \fBSound\fP\fR [get]\fP"
.br
.ti -1c
.RI "static \fBCoreDebug\fP \fBdebug\fP\fR [get]\fP"
.br
.in -1c

Properties inherited from \fBIInspect\fP
.SS "Additional Inherited Members"


Static Public Member Functions inherited from \fBEClass\fP
.in +1c
.ti -1c
.RI "static int \fBrnd\fP (int a)"
.br
.ti -1c
.RI "static int \fBcurve\fP (int a, int start, int step, int rate=75)"
.br
.ti -1c
.RI "static int \fBrndHalf\fP (int a)"
.br
.ti -1c
.RI "static float \fBrndf\fP (float a)"
.br
.ti -1c
.RI "static int \fBrndSqrt\fP (int a)"
.br
.ti -1c
.RI "static void \fBWait\fP (float a, \fBCard\fP c)"
.br
.ti -1c
.RI "static void \fBWait\fP (float a, \fBPoint\fP p)"
.br
.ti -1c
.RI "static int \fBBigger\fP (int a, int b)"
.br
.ti -1c
.RI "static int \fBSmaller\fP (int a, int b)"
.br
.in -1c

Static Public Attributes inherited from \fBEClass\fP
.in +1c
.ti -1c
.RI "static \fBCore\fP \fBcore\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line \fB7\fP of file \fBBaseArea\&.cs\fP\&.
.SH "Member Enumeration Documentation"
.PP 
.SS "enum BaseArea\&.AccessType"

.PP
Definition at line \fB355\fP of file \fBBaseArea\&.cs\fP\&.
.SH "Member Function Documentation"
.PP 
.SS "void BaseArea\&.ChangeType (string _id)"

.PP
Definition at line \fB93\fP of file \fBBaseArea\&.cs\fP\&.
.SS "\fBThing\fP BaseArea\&.GetEmptySeat ()"

.PP
Definition at line \fB58\fP of file \fBBaseArea\&.cs\fP\&.
.SS "\fBPoint\fP BaseArea\&.GetRandomFreePos ()"

.PP
Definition at line \fB44\fP of file \fBBaseArea\&.cs\fP\&.
.SS "string BaseArea\&.GetRandomName (int seed = \fR\-1\fP)"

.PP
Definition at line \fB111\fP of file \fBBaseArea\&.cs\fP\&.
.SS "virtual \fBPoint\fP BaseArea\&.GetRandomPoint (bool walkable = \fRtrue\fP, bool allowChara = \fRtrue\fP)\fR [virtual]\fP"

.PP
Definition at line \fB74\fP of file \fBBaseArea\&.cs\fP\&.
.SS "int BaseArea\&.GetSortVal (UIList\&.SortMode m)"

.PP
Definition at line \fB151\fP of file \fBBaseArea\&.cs\fP\&.
.SS "List< \fBBaseArea\&.Interaction\fP > BaseArea\&.ListInteractions ()"

.PP
Definition at line \fB157\fP of file \fBBaseArea\&.cs\fP\&.
.SS "HashSet< string > BaseArea\&.ListRoomNames ()"

.PP
Definition at line \fB127\fP of file \fBBaseArea\&.cs\fP\&.
.SS "void BaseArea\&.OnInspect ()"

.PP
Implements \fBIInspect\fP\&.
.PP
Definition at line \fB283\fP of file \fBBaseArea\&.cs\fP\&.
.SS "void BaseArea\&.SetRandomName (int seed = \fR\-1\fP)"

.PP
Definition at line \fB105\fP of file \fBBaseArea\&.cs\fP\&.
.SS "void BaseArea\&.WriteNote (UINote n, Action< UINote > onWriteNote = \fRnull\fP, IInspect\&.NoteMode mode = \fRIInspect::NoteMode::Default\fP, \fBRecipe\fP recipe = \fRnull\fP)"

.PP
Implements \fBIInspect\fP\&.
.PP
Definition at line \fB318\fP of file \fBBaseArea\&.cs\fP\&.
.SH "Member Data Documentation"
.PP 
.SS "\fBAreaData\fP BaseArea\&.data = new \fBAreaData\fP()"

.PP
Definition at line \fB345\fP of file \fBBaseArea\&.cs\fP\&.
.SS "\fBTraitRoomPlate\fP BaseArea\&.plate"

.PP
Definition at line \fB352\fP of file \fBBaseArea\&.cs\fP\&.
.SS "\fBPointList\fP BaseArea\&.points = new \fBPointList\fP()"

.PP
Definition at line \fB341\fP of file \fBBaseArea\&.cs\fP\&.
.SS "\fBAreaType\fP BaseArea\&.type = new \fBAreaTypeRoom\fP()"

.PP
Definition at line \fB349\fP of file \fBBaseArea\&.cs\fP\&.
.SS "int BaseArea\&.uid"

.PP
Definition at line \fB337\fP of file \fBBaseArea\&.cs\fP\&.
.SH "Property Documentation"
.PP 
.SS "bool BaseArea\&.CanInspect\fR [get]\fP"

.PP
Implements \fBIInspect\fP\&.
.PP
Definition at line \fB289\fP of file \fBBaseArea\&.cs\fP\&.
.SS "string BaseArea\&.InspectName\fR [get]\fP"

.PP
Implements \fBIInspect\fP\&.
.PP
Definition at line \fB299\fP of file \fBBaseArea\&.cs\fP\&.
.SS "\fBPoint\fP BaseArea\&.InspectPoint\fR [get]\fP"

.PP
Implements \fBIInspect\fP\&.
.PP
Definition at line \fB309\fP of file \fBBaseArea\&.cs\fP\&.
.SS "Vector3 BaseArea\&.InspectPosition\fR [get]\fP"

.PP
Implements \fBIInspect\fP\&.
.PP
Definition at line \fB327\fP of file \fBBaseArea\&.cs\fP\&.
.SS "bool BaseArea\&.IsPrivate\fR [get]\fP"

.PP
Definition at line \fB25\fP of file \fBBaseArea\&.cs\fP\&.
.SS "virtual string BaseArea\&.Name\fR [get]\fP"

.PP
Definition at line \fB11\fP of file \fBBaseArea\&.cs\fP\&.
.SS "\fBSourceArea\&.Row\fP BaseArea\&.source\fR [get]\fP"

.PP
Definition at line \fB35\fP of file \fBBaseArea\&.cs\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Elin Modding Docs Doc from the source code\&.
