.TH "AM_Adv" 3 "Elin Modding Docs Doc" \" -*- nroff -*-
.ad l
.nh
.SH NAME
AM_Adv
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBAM_BaseGameMode\fP\&.
.PP
Inherited by \fBAM_ADV_Target\fP, and \fBAM_Region\fP\&.
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBPressedAction\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "override bool \fBHighlightWall\fP (\fBPoint\fP p)"
.br
.ti -1c
.RI "unsafe override void \fBOnActivate\fP ()"
.br
.ti -1c
.RI "override void \fBOnDeactivate\fP ()"
.br
.ti -1c
.RI "unsafe override void \fBOnRenderTile\fP (\fBPoint\fP point, HitResult result, int dir)"
.br
.ti -1c
.RI "override int \fBGetDefaultTile\fP (\fBPoint\fP p)"
.br
.ti -1c
.RI "override void \fBOnBeforeUpdate\fP ()"
.br
.ti -1c
.RI "unsafe override void \fBOnAfterUpdate\fP ()"
.br
.ti -1c
.RI "override void \fBOnUpdateCursor\fP ()"
.br
.ti -1c
.RI "void \fBUpdatePlans\fP ()"
.br
.ti -1c
.RI "void \fBUpdateLangWheel\fP ()"
.br
.ti -1c
.RI "void \fBClearPlans\fP ()"
.br
.ti -1c
.RI "void \fBOnBecomeNoGoal\fP ()"
.br
.ti -1c
.RI "override void \fB_OnUpdateInput\fP ()"
.br
.ti -1c
.RI "void \fBShowAllAction\fP ()"
.br
.ti -1c
.RI "void \fBSetTurbo\fP (int mtp=\-1)"
.br
.ti -1c
.RI "void \fBEndTurbo\fP ()"
.br
.ti -1c
.RI "void \fBToggleZoom\fP ()"
.br
.ti -1c
.RI "bool \fBTryCancelInteraction\fP (bool sound=true)"
.br
.ti -1c
.RI "bool \fBCanAct\fP ()"
.br
.ti -1c
.RI "void \fBAxisMove\fP ()"
.br
.ti -1c
.RI "void \fBSetManualMove\fP ()"
.br
.ti -1c
.RI "void \fBSetPressedAction\fP (ButtonState button)"
.br
.ti -1c
.RI "bool \fBPressedActionMove\fP (\fBPoint\fP pos)"
.br
.ti -1c
.RI "virtual unsafe void \fBRefreshArrow\fP ()"
.br
.in -1c

Public Member Functions inherited from \fBAM_BaseGameMode\fP
.in +1c
.ti -1c
.RI "override void \fBOnUpdateInput\fP ()"
.br
.ti -1c
.RI "override string \fBGetHintText\fP ()"
.br
.ti -1c
.RI "override void \fBOnCancel\fP ()"
.br
.ti -1c
.RI "override HitResult \fBHitTest\fP (\fBPoint\fP point, \fBPoint\fP start)"
.br
.in -1c

Public Member Functions inherited from \fBActionMode\fP
.in +1c
.ti -1c
.RI "virtual int \fBTopHeight\fP (\fBPoint\fP p)"
.br
.ti -1c
.RI "virtual void \fBSEExecuteSummary\fP ()"
.br
.ti -1c
.RI "virtual void \fBOnClickSubMenu\fP (int a)"
.br
.ti -1c
.RI "virtual string \fBOnSetSubMenuButton\fP (int a, UIButton b)"
.br
.ti -1c
.RI "virtual bool \fBIsRoofEditMode\fP (\fBCard\fP c=null)"
.br
.ti -1c
.RI "virtual bool \fBIsFillMode\fP ()"
.br
.ti -1c
.RI "virtual void \fBOnShowExtraHint\fP (UINote n)"
.br
.ti -1c
.RI "void \fBActivate\fP (bool toggle=true, bool forceActivate=false)"
.br
.ti -1c
.RI "unsafe void \fBRefreshTexts\fP ()"
.br
.ti -1c
.RI "virtual string \fBGetSimpleText\fP (\fBCard\fP c)"
.br
.ti -1c
.RI "void \fBClearSimpleTexts\fP ()"
.br
.ti -1c
.RI "void \fBDeactivate\fP ()"
.br
.ti -1c
.RI "void \fBOnRotate\fP ()"
.br
.ti -1c
.RI "void \fBSetCursorOnMap\fP (CursorInfo cursor)"
.br
.ti -1c
.RI "void \fBUpdateInput\fP ()"
.br
.ti -1c
.RI "void \fBInputMovement\fP ()"
.br
.ti -1c
.RI "virtual void \fBInputWheel\fP (int wheel)"
.br
.ti -1c
.RI "void \fBDoFunc\fP (CoreConfig\&.GameFuncBuild func)"
.br
.ti -1c
.RI "void \fBDoFunc\fP (CoreConfig\&.GameFunc func)"
.br
.ti -1c
.RI "virtual void \fBOnScroll\fP ()"
.br
.ti -1c
.RI "void \fBTryRightClickCloseWidget\fP ()"
.br
.ti -1c
.RI "bool \fBTryShowWidgetMenu\fP ()"
.br
.ti -1c
.RI "HitResult \fB_HitTest\fP (\fBPoint\fP point, \fBPoint\fP start)"
.br
.ti -1c
.RI "virtual void \fBOnSelectStart\fP (\fBPoint\fP point)"
.br
.ti -1c
.RI "virtual void \fBOnSelectEnd\fP (bool cancel)"
.br
.ti -1c
.RI "virtual \fBMeshPass\fP \fBGetGuidePass\fP (\fBPoint\fP point)"
.br
.ti -1c
.RI "unsafe void \fBOnRenderTileFloor\fP (\fBPoint\fP point, HitResult result)"
.br
.ti -1c
.RI "virtual bool \fBCanProcessTiles\fP ()"
.br
.ti -1c
.RI "virtual void \fBOnBeforeProcessTiles\fP ()"
.br
.ti -1c
.RI "virtual void \fBOnProcessTiles\fP (\fBPoint\fP point, int dir)"
.br
.ti -1c
.RI "virtual void \fBOnAfterProcessTiles\fP (\fBPoint\fP start, \fBPoint\fP end)"
.br
.ti -1c
.RI "virtual void \fBOnFinishProcessTiles\fP ()"
.br
.ti -1c
.RI "virtual void \fBOnRefreshSummary\fP (\fBPoint\fP point, HitResult result, \fBHitSummary\fP summary)"
.br
.ti -1c
.RI "void \fBShowLayer\fP ()"
.br
.ti -1c
.RI "virtual Layer \fBOnShowLayer\fP ()"
.br
.ti -1c
.RI "void \fBHideLayer\fP ()"
.br
.ti -1c
.RI "virtual void \fBOnHideLayer\fP ()"
.br
.ti -1c
.RI "virtual void \fBRotateUnderMouse\fP ()"
.br
.ti -1c
.RI "virtual ref string \fBSetMouseInfo\fP (ref string s)"
.br
.ti -1c
.RI "void \fBTogglePause\fP ()"
.br
.ti -1c
.RI "void \fBPause\fP (bool sound=false)"
.br
.ti -1c
.RI "void \fBUnPause\fP (bool sound=false)"
.br
.ti -1c
.RI "void \fBChangeGameSpeed\fP (int a, bool sound=false)"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "bool \fBzoomOut\fP"
.br
.ti -1c
.RI "bool \fBzoomOut2\fP"
.br
.ti -1c
.RI "bool \fBmovedByKey\fP"
.br
.ti -1c
.RI "\fBAM_Adv\&.PressedAction\fP \fBpressedAction\fP = new \fBAM_Adv\&.PressedAction\fP()"
.br
.ti -1c
.RI "\fBPointTarget\fP \fBaxisTarget\fP"
.br
.ti -1c
.RI "\fBActPlan\fP \fBplanLeft\fP"
.br
.ti -1c
.RI "\fBActPlan\fP \fBplanRight\fP"
.br
.ti -1c
.RI "\fBActPlan\fP \fBplanKeyboard\fP"
.br
.ti -1c
.RI "\fBActPlan\fP \fBplanAll\fP"
.br
.ti -1c
.RI "string \fBtextWheel\fP"
.br
.ti -1c
.RI "string \fBtextMiddle\fP"
.br
.ti -1c
.RI "float \fBrightMouseTimer\fP"
.br
.in -1c

Public Attributes inherited from \fBAM_BaseGameMode\fP
.in +1c
.ti -1c
.RI "bool \fBisMouseOnMap\fP"
.br
.in -1c

Public Attributes inherited from \fBActionMode\fP
.in +1c
.ti -1c
.RI "Layer \fBlayer\fP"
.br
.ti -1c
.RI "int \fBbrushRadius\fP = 4"
.br
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "static float \fBturbo\fP"
.br
.ti -1c
.RI "static int \fBactCount\fP"
.br
.in -1c

Static Public Attributes inherited from \fBActionMode\fP
.in +1c
.ti -1c
.RI "static \fBActionMode\fP \fBDefaultMode\fP"
.br
.ti -1c
.RI "static \fBAM_Title\fP \fBTitle\fP = new \fBAM_Title\fP()"
.br
.ti -1c
.RI "static \fBAM_Sim\fP \fBSim\fP"
.br
.ti -1c
.RI "static \fBAM_ViewZone\fP \fBView\fP"
.br
.ti -1c
.RI "static \fBAM_Adv\fP \fBAdv\fP"
.br
.ti -1c
.RI "static \fBAM_Region\fP \fBRegion\fP"
.br
.ti -1c
.RI "static \fBAM_ADV_Target\fP \fBAdvTarget\fP"
.br
.ti -1c
.RI "static \fBAM_EloMap\fP \fBEloMap\fP"
.br
.ti -1c
.RI "static \fBAM_Inspect\fP \fBInspect\fP"
.br
.ti -1c
.RI "static \fBAM_NoMap\fP \fBNoMap\fP"
.br
.ti -1c
.RI "static \fBAM_MiniGame\fP \fBMiniGame\fP"
.br
.ti -1c
.RI "static \fBAM_NewZone\fP \fBNewZone\fP"
.br
.ti -1c
.RI "static \fBAM_Bird\fP \fBBird\fP"
.br
.ti -1c
.RI "static \fBAM_Mine\fP \fBMine\fP"
.br
.ti -1c
.RI "static \fBAM_Dig\fP \fBDig\fP"
.br
.ti -1c
.RI "static \fBAM_Harvest\fP \fBHarvest\fP"
.br
.ti -1c
.RI "static \fBAM_Cut\fP \fBCut\fP"
.br
.ti -1c
.RI "static \fBAM_StateEditor\fP \fBStateEditor\fP"
.br
.ti -1c
.RI "static \fBAM_Picker\fP \fBPicker\fP"
.br
.ti -1c
.RI "static \fBAM_Copy\fP \fBCopy\fP"
.br
.ti -1c
.RI "static \fBAM_Blueprint\fP \fBBlueprint\fP"
.br
.ti -1c
.RI "static \fBAM_Build\fP \fBBuild\fP"
.br
.ti -1c
.RI "static \fBAM_CreateArea\fP \fBCreateArea\fP"
.br
.ti -1c
.RI "static \fBAM_EditArea\fP \fBEditArea\fP"
.br
.ti -1c
.RI "static \fBAM_ExpandArea\fP \fBExpandArea\fP"
.br
.ti -1c
.RI "static \fBAM_Deconstruct\fP \fBDeconstruct\fP"
.br
.ti -1c
.RI "static \fBAM_Select\fP \fBSelect\fP"
.br
.ti -1c
.RI "static \fBAM_RemoveDesignation\fP \fBRemoveDesignation\fP"
.br
.ti -1c
.RI "static \fBAM_ViewMap\fP \fBViewMap\fP"
.br
.ti -1c
.RI "static \fBAM_Terrain\fP \fBTerrain\fP"
.br
.ti -1c
.RI "static \fBAM_Populate\fP \fBPopulate\fP"
.br
.ti -1c
.RI "static \fBAM_EditMarker\fP \fBEditMarker\fP"
.br
.ti -1c
.RI "static \fBAM_Visibility\fP \fBVisibility\fP"
.br
.ti -1c
.RI "static \fBAM_Cinema\fP \fBCinema\fP"
.br
.ti -1c
.RI "static \fBAM_Paint\fP \fBPaint\fP"
.br
.ti -1c
.RI "static \fBAM_FlagCell\fP \fBFlagCell\fP"
.br
.ti -1c
.RI "static \fBActionMode\fP \fBLastBuildMode\fP"
.br
.ti -1c
.RI "static \fBSourceMaterial\&.Row\fP \fBlastEditorMat\fP"
.br
.ti -1c
.RI "static bool \fBignoreSound\fP"
.br
.ti -1c
.RI "static float[] \fBGameSpeeds\fP"
.br
.ti -1c
.RI "static List< \fBTCSimpleText\fP > \fBsimpleTexts\fP = new List<\fBTCSimpleText\fP>()"
.br
.in -1c

Static Public Attributes inherited from \fBEClass\fP
.in +1c
.ti -1c
.RI "static \fBCore\fP \fBcore\fP"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "int \fBarrowIndex\fP"
.br
.ti -1c
.RI "float \fBtimerStartRunning\fP"
.br
.ti -1c
.RI "bool \fBcursorMove\fP"
.br
.ti -1c
.RI "bool \fBkeepWalking\fP"
.br
.ti -1c
.RI "Vector3 \fBposOrigin\fP"
.br
.ti -1c
.RI "Vector3 \fBposArrow\fP"
.br
.ti -1c
.RI "Vector2 \fBvArrow\fP"
.br
.ti -1c
.RI "bool \fBupdatePlans\fP"
.br
.ti -1c
.RI "bool \fBisMoving\fP"
.br
.ti -1c
.RI "Vector3 \fBclickPos\fP"
.br
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "\fBPointTarget\fP \fBmouseTarget\fP\fR [get]\fP"
.br
.ti -1c
.RI "bool \fBautorun\fP\fR [get]\fP"
.br
.ti -1c
.RI "bool \fBShouldHideTile\fP\fR [get]\fP"
.br
.ti -1c
.RI "override float \fBgameSpeed\fP\fR [get]\fP"
.br
.ti -1c
.RI "override bool \fBFixFocus\fP\fR [get]\fP"
.br
.ti -1c
.RI "override bool \fBShouldPauseGame\fP\fR [get]\fP"
.br
.ti -1c
.RI "override bool \fBAllowWheelZoom\fP\fR [get]\fP"
.br
.ti -1c
.RI "override float \fBTargetZoom\fP\fR [get]\fP"
.br
.in -1c

Properties inherited from \fBAM_BaseGameMode\fP
.in +1c
.ti -1c
.RI "override AreaHighlightMode \fBAreaHihlight\fP\fR [get]\fP"
.br
.ti -1c
.RI "override bool \fBShowActionHint\fP\fR [get]\fP"
.br
.ti -1c
.RI "override bool \fBHideSubWidgets\fP\fR [get]\fP"
.br
.ti -1c
.RI "override BaseTileSelector\&.HitType \fBhitType\fP\fR [get]\fP"
.br
.ti -1c
.RI "override BaseTileSelector\&.SelectType \fBselectType\fP\fR [get]\fP"
.br
.ti -1c
.RI "override \fBBaseGameScreen\fP \fBTargetGameScreen\fP\fR [get]\fP"
.br
.ti -1c
.RI "\fBPoint\fP \fBhit\fP\fR [get]\fP"
.br
.in -1c

Properties inherited from \fBActionMode\fP
.in +1c
.ti -1c
.RI "static \fBAM_Adv\fP \fBAdvOrRegion\fP\fR [get]\fP"
.br
.ti -1c
.RI "static bool \fBIsAdv\fP\fR [get]\fP"
.br
.ti -1c
.RI "virtual float \fBgameSpeed\fP\fR [get]\fP"
.br
.ti -1c
.RI "bool \fBIsActive\fP\fR [get]\fP"
.br
.ti -1c
.RI "virtual BaseTileSelector\&.HitType \fBhitType\fP\fR [get]\fP"
.br
.ti -1c
.RI "virtual BaseTileSelector\&.SelectType \fBselectType\fP\fR [get]\fP"
.br
.ti -1c
.RI "virtual BaseTileSelector\&.BoxType \fBboxType\fP\fR [get]\fP"
.br
.ti -1c
.RI "virtual bool \fBContinuousClick\fP\fR [get]\fP"
.br
.ti -1c
.RI "virtual int \fBhitW\fP\fR [get]\fP"
.br
.ti -1c
.RI "virtual int \fBhitH\fP\fR [get]\fP"
.br
.ti -1c
.RI "\fBHitSummary\fP \fBSummary\fP\fR [get]\fP"
.br
.ti -1c
.RI "bool \fBMultisize\fP\fR [get]\fP"
.br
.ti -1c
.RI "virtual string \fBid\fP\fR [get]\fP"
.br
.ti -1c
.RI "virtual CursorInfo \fBDefaultCursor\fP\fR [get]\fP"
.br
.ti -1c
.RI "virtual string \fBidHelpTopic\fP\fR [get]\fP"
.br
.ti -1c
.RI "virtual string \fBidSound\fP\fR [get]\fP"
.br
.ti -1c
.RI "virtual bool \fBenableMouseInfo\fP\fR [get]\fP"
.br
.ti -1c
.RI "virtual bool \fBhideBalloon\fP\fR [get]\fP"
.br
.ti -1c
.RI "virtual string \fBtextHintTitle\fP\fR [get]\fP"
.br
.ti -1c
.RI "virtual bool \fBAllowAutoClick\fP\fR [get]\fP"
.br
.ti -1c
.RI "virtual bool \fBShowActionHint\fP\fR [get]\fP"
.br
.ti -1c
.RI "virtual bool \fBShowMouseoverTarget\fP\fR [get]\fP"
.br
.ti -1c
.RI "virtual AreaHighlightMode \fBAreaHihlight\fP\fR [get]\fP"
.br
.ti -1c
.RI "virtual bool \fBCanSelectTile\fP\fR [get]\fP"
.br
.ti -1c
.RI "virtual bool \fBCanTargetOutsideBounds\fP\fR [get]\fP"
.br
.ti -1c
.RI "virtual bool \fBShouldPauseGame\fP\fR [get]\fP"
.br
.ti -1c
.RI "virtual bool \fBFixFocus\fP\fR [get]\fP"
.br
.ti -1c
.RI "virtual bool \fBHideSubWidgets\fP\fR [get]\fP"
.br
.ti -1c
.RI "virtual bool \fBIsBuildMode\fP\fR [get]\fP"
.br
.ti -1c
.RI "virtual bool \fBShowBuildWidgets\fP\fR [get]\fP"
.br
.ti -1c
.RI "virtual BuildMenu\&.Mode \fBbuildMenuMode\fP\fR [get]\fP"
.br
.ti -1c
.RI "virtual bool \fBShouldHideBuildMenu\fP\fR [get]\fP"
.br
.ti -1c
.RI "virtual bool \fBCanTargetFog\fP\fR [get]\fP"
.br
.ti -1c
.RI "virtual int \fBCostMoney\fP\fR [get]\fP"
.br
.ti -1c
.RI "virtual bool \fBAllowBuildModeShortcuts\fP\fR [get]\fP"
.br
.ti -1c
.RI "virtual bool \fBAllowMiddleClickFunc\fP\fR [get]\fP"
.br
.ti -1c
.RI "virtual bool \fBAllowHotbar\fP\fR [get]\fP"
.br
.ti -1c
.RI "virtual bool \fBAllowGeneralInput\fP\fR [get]\fP"
.br
.ti -1c
.RI "virtual bool \fBShowMaskedThings\fP\fR [get]\fP"
.br
.ti -1c
.RI "virtual int \fBSelectorHeight\fP\fR [get]\fP"
.br
.ti -1c
.RI "virtual bool \fBAllowWheelZoom\fP\fR [get]\fP"
.br
.ti -1c
.RI "virtual float \fBTargetZoom\fP\fR [get]\fP"
.br
.ti -1c
.RI "virtual BaseTileMap\&.CardIconMode \fBcardIconMode\fP\fR [get]\fP"
.br
.ti -1c
.RI "virtual \fBBaseGameScreen\fP \fBTargetGameScreen\fP\fR [get]\fP"
.br
.ti -1c
.RI "virtual bool \fBIsNoMap\fP\fR [get]\fP"
.br
.ti -1c
.RI "virtual bool \fBUseSubMenu\fP\fR [get]\fP"
.br
.ti -1c
.RI "virtual bool \fBUseSubMenuSlider\fP\fR [get]\fP"
.br
.ti -1c
.RI "virtual bool \fBSubMenuAsGroup\fP\fR [get]\fP"
.br
.ti -1c
.RI "virtual int \fBSubMenuModeIndex\fP\fR [get]\fP"
.br
.ti -1c
.RI "virtual bool \fBShowExtraHint\fP\fR [get]\fP"
.br
.ti -1c
.RI "\fBBaseTileSelector\fP \fBtileSelector\fP\fR [get]\fP"
.br
.in -1c

Properties inherited from \fBEClass\fP
.in +1c
.ti -1c
.RI "static \fBGame\fP \fBgame\fP\fR [get]\fP"
.br
.ti -1c
.RI "static bool \fBAdvMode\fP\fR [get]\fP"
.br
.ti -1c
.RI "static \fBPlayer\fP \fBplayer\fP\fR [get]\fP"
.br
.ti -1c
.RI "static \fBChara\fP \fBpc\fP\fR [get]\fP"
.br
.ti -1c
.RI "static \fBUI\fP \fBui\fP\fR [get]\fP"
.br
.ti -1c
.RI "static \fBMap\fP \fB_map\fP\fR [get]\fP"
.br
.ti -1c
.RI "static \fBZone\fP \fB_zone\fP\fR [get]\fP"
.br
.ti -1c
.RI "static \fBFactionBranch\fP \fBBranch\fP\fR [get]\fP"
.br
.ti -1c
.RI "static \fBFactionBranch\fP \fBBranchOrHomeBranch\fP\fR [get]\fP"
.br
.ti -1c
.RI "static \fBFaction\fP \fBHome\fP\fR [get]\fP"
.br
.ti -1c
.RI "static \fBFaction\fP \fBWilds\fP\fR [get]\fP"
.br
.ti -1c
.RI "static \fBScene\fP \fBscene\fP\fR [get]\fP"
.br
.ti -1c
.RI "static \fBBaseGameScreen\fP \fBscreen\fP\fR [get]\fP"
.br
.ti -1c
.RI "static \fBGameSetting\fP \fBsetting\fP\fR [get]\fP"
.br
.ti -1c
.RI "static \fBGameData\fP \fBgamedata\fP\fR [get]\fP"
.br
.ti -1c
.RI "static \fBColorProfile\fP \fBColors\fP\fR [get]\fP"
.br
.ti -1c
.RI "static \fBWorld\fP \fBworld\fP\fR [get]\fP"
.br
.ti -1c
.RI "static \fBSourceManager\fP \fBsources\fP\fR [get]\fP"
.br
.ti -1c
.RI "static \fBSourceManager\fP \fBeditorSources\fP\fR [get]\fP"
.br
.ti -1c
.RI "static SoundManager \fBSound\fP\fR [get]\fP"
.br
.ti -1c
.RI "static \fBCoreDebug\fP \fBdebug\fP\fR [get]\fP"
.br
.in -1c
.SS "Additional Inherited Members"


Static Public Member Functions inherited from \fBActionMode\fP
.in +1c
.ti -1c
.RI "static void \fBOnGameInstantiated\fP ()"
.br
.in -1c

Static Public Member Functions inherited from \fBEClass\fP
.in +1c
.ti -1c
.RI "static int \fBrnd\fP (int a)"
.br
.ti -1c
.RI "static int \fBcurve\fP (int a, int start, int step, int rate=75)"
.br
.ti -1c
.RI "static int \fBrndHalf\fP (int a)"
.br
.ti -1c
.RI "static float \fBrndf\fP (float a)"
.br
.ti -1c
.RI "static int \fBrndSqrt\fP (int a)"
.br
.ti -1c
.RI "static void \fBWait\fP (float a, \fBCard\fP c)"
.br
.ti -1c
.RI "static void \fBWait\fP (float a, \fBPoint\fP p)"
.br
.ti -1c
.RI "static int \fBBigger\fP (int a, int b)"
.br
.ti -1c
.RI "static int \fBSmaller\fP (int a, int b)"
.br
.in -1c

Static Protected Attributes inherited from \fBActionMode\fP
.in +1c
.ti -1c
.RI "static Vector3 \fBmpos\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line \fB6\fP of file \fBAM_Adv\&.cs\fP\&.
.SH "Member Function Documentation"
.PP 
.SS "override void AM_Adv\&._OnUpdateInput ()\fR [virtual]\fP"

.PP
Reimplemented from \fBAM_BaseGameMode\fP\&.
.PP
Definition at line \fB336\fP of file \fBAM_Adv\&.cs\fP\&.
.SS "void AM_Adv\&.AxisMove ()"

.PP
Definition at line \fB948\fP of file \fBAM_Adv\&.cs\fP\&.
.SS "bool AM_Adv\&.CanAct ()"

.PP
Definition at line \fB942\fP of file \fBAM_Adv\&.cs\fP\&.
.SS "void AM_Adv\&.ClearPlans ()"

.PP
Definition at line \fB296\fP of file \fBAM_Adv\&.cs\fP\&.
.SS "void AM_Adv\&.EndTurbo ()"

.PP
Definition at line \fB907\fP of file \fBAM_Adv\&.cs\fP\&.
.SS "override int AM_Adv\&.GetDefaultTile (\fBPoint\fP p)\fR [virtual]\fP"

.PP
Reimplemented from \fBActionMode\fP\&.
.PP
Definition at line \fB162\fP of file \fBAM_Adv\&.cs\fP\&.
.SS "override bool AM_Adv\&.HighlightWall (\fBPoint\fP p)\fR [virtual]\fP"

.PP
Reimplemented from \fBActionMode\fP\&.
.PP
Definition at line \fB97\fP of file \fBAM_Adv\&.cs\fP\&.
.SS "unsafe override void AM_Adv\&.OnActivate ()\fR [virtual]\fP"

.PP
Reimplemented from \fBActionMode\fP\&.
.PP
Definition at line \fB103\fP of file \fBAM_Adv\&.cs\fP\&.
.SS "unsafe override void AM_Adv\&.OnAfterUpdate ()\fR [virtual]\fP"

.PP
Reimplemented from \fBActionMode\fP\&.
.PP
Definition at line \fB183\fP of file \fBAM_Adv\&.cs\fP\&.
.SS "void AM_Adv\&.OnBecomeNoGoal ()"

.PP
Definition at line \fB304\fP of file \fBAM_Adv\&.cs\fP\&.
.SS "override void AM_Adv\&.OnBeforeUpdate ()\fR [virtual]\fP"

.PP
Reimplemented from \fBActionMode\fP\&.
.PP
Definition at line \fB172\fP of file \fBAM_Adv\&.cs\fP\&.
.SS "override void AM_Adv\&.OnDeactivate ()\fR [virtual]\fP"

.PP
Reimplemented from \fBActionMode\fP\&.
.PP
Definition at line \fB120\fP of file \fBAM_Adv\&.cs\fP\&.
.SS "unsafe override void AM_Adv\&.OnRenderTile (\fBPoint\fP point, HitResult result, int dir)\fR [virtual]\fP"

.PP
Reimplemented from \fBActionMode\fP\&.
.PP
Definition at line \fB126\fP of file \fBAM_Adv\&.cs\fP\&.
.SS "override void AM_Adv\&.OnUpdateCursor ()\fR [virtual]\fP"

.PP
Reimplemented from \fBActionMode\fP\&.
.PP
Definition at line \fB194\fP of file \fBAM_Adv\&.cs\fP\&.
.SS "bool AM_Adv\&.PressedActionMove (\fBPoint\fP pos)"

.PP
Definition at line \fB1071\fP of file \fBAM_Adv\&.cs\fP\&.
.SS "virtual unsafe void AM_Adv\&.RefreshArrow ()\fR [virtual]\fP"

.PP
Definition at line \fB1174\fP of file \fBAM_Adv\&.cs\fP\&.
.SS "void AM_Adv\&.SetManualMove ()"

.PP
Definition at line \fB1003\fP of file \fBAM_Adv\&.cs\fP\&.
.SS "void AM_Adv\&.SetPressedAction (ButtonState button)"

.PP
Definition at line \fB1015\fP of file \fBAM_Adv\&.cs\fP\&.
.SS "void AM_Adv\&.SetTurbo (int mtp = \fR\-1\fP)"

.PP
Definition at line \fB890\fP of file \fBAM_Adv\&.cs\fP\&.
.SS "void AM_Adv\&.ShowAllAction ()"

.PP
Definition at line \fB863\fP of file \fBAM_Adv\&.cs\fP\&.
.SS "void AM_Adv\&.ToggleZoom ()"

.PP
Definition at line \fB913\fP of file \fBAM_Adv\&.cs\fP\&.
.SS "bool AM_Adv\&.TryCancelInteraction (bool sound = \fRtrue\fP)"

.PP
Definition at line \fB923\fP of file \fBAM_Adv\&.cs\fP\&.
.SS "void AM_Adv\&.UpdateLangWheel ()"

.PP
Definition at line \fB264\fP of file \fBAM_Adv\&.cs\fP\&.
.SS "void AM_Adv\&.UpdatePlans ()"

.PP
Definition at line \fB256\fP of file \fBAM_Adv\&.cs\fP\&.
.SH "Member Data Documentation"
.PP 
.SS "int AM_Adv\&.actCount\fR [static]\fP"

.PP
Definition at line \fB1261\fP of file \fBAM_Adv\&.cs\fP\&.
.SS "int AM_Adv\&.arrowIndex\fR [protected]\fP"

.PP
Definition at line \fB1273\fP of file \fBAM_Adv\&.cs\fP\&.
.SS "\fBPointTarget\fP AM_Adv\&.axisTarget"
\fBInitial value:\fP
.nf
= new PointTarget
    {
        mouse = false
    }
.PP
.fi

.PP
Definition at line \fB1297\fP of file \fBAM_Adv\&.cs\fP\&.
.SS "Vector3 AM_Adv\&.clickPos\fR [protected]\fP"

.PP
Definition at line \fB1351\fP of file \fBAM_Adv\&.cs\fP\&.
.SS "bool AM_Adv\&.cursorMove\fR [protected]\fP"

.PP
Definition at line \fB1279\fP of file \fBAM_Adv\&.cs\fP\&.
.SS "bool AM_Adv\&.isMoving\fR [protected]\fP"

.PP
Definition at line \fB1339\fP of file \fBAM_Adv\&.cs\fP\&.
.SS "bool AM_Adv\&.keepWalking\fR [protected]\fP"

.PP
Definition at line \fB1282\fP of file \fBAM_Adv\&.cs\fP\&.
.SS "bool AM_Adv\&.movedByKey"

.PP
Definition at line \fB1270\fP of file \fBAM_Adv\&.cs\fP\&.
.SS "\fBActPlan\fP AM_Adv\&.planAll"
\fBInitial value:\fP
.nf
= new ActPlan
    {
        input = ActInput\&.AllAction
    }
.PP
.fi

.PP
Definition at line \fB1321\fP of file \fBAM_Adv\&.cs\fP\&.
.SS "\fBActPlan\fP AM_Adv\&.planKeyboard"
\fBInitial value:\fP
.nf
= new ActPlan
    {
        input = ActInput\&.Key
    }
.PP
.fi

.PP
Definition at line \fB1315\fP of file \fBAM_Adv\&.cs\fP\&.
.SS "\fBActPlan\fP AM_Adv\&.planLeft"
\fBInitial value:\fP
.nf
= new ActPlan
    {
        input = ActInput\&.LeftMouse
    }
.PP
.fi

.PP
Definition at line \fB1303\fP of file \fBAM_Adv\&.cs\fP\&.
.SS "\fBActPlan\fP AM_Adv\&.planRight"
\fBInitial value:\fP
.nf
= new ActPlan
    {
        input = ActInput\&.RightMouse
    }
.PP
.fi

.PP
Definition at line \fB1309\fP of file \fBAM_Adv\&.cs\fP\&.
.SS "Vector3 AM_Adv\&.posArrow\fR [protected]\fP"

.PP
Definition at line \fB1288\fP of file \fBAM_Adv\&.cs\fP\&.
.SS "Vector3 AM_Adv\&.posOrigin\fR [protected]\fP"

.PP
Definition at line \fB1285\fP of file \fBAM_Adv\&.cs\fP\&.
.SS "\fBAM_Adv\&.PressedAction\fP AM_Adv\&.pressedAction = new \fBAM_Adv\&.PressedAction\fP()"

.PP
Definition at line \fB1294\fP of file \fBAM_Adv\&.cs\fP\&.
.SS "float AM_Adv\&.rightMouseTimer"

.PP
Definition at line \fB1345\fP of file \fBAM_Adv\&.cs\fP\&.
.SS "string AM_Adv\&.textMiddle"

.PP
Definition at line \fB1330\fP of file \fBAM_Adv\&.cs\fP\&.
.SS "string AM_Adv\&.textWheel"

.PP
Definition at line \fB1327\fP of file \fBAM_Adv\&.cs\fP\&.
.SS "float AM_Adv\&.timerStartRunning\fR [protected]\fP"

.PP
Definition at line \fB1276\fP of file \fBAM_Adv\&.cs\fP\&.
.SS "float AM_Adv\&.turbo\fR [static]\fP"

.PP
Definition at line \fB1258\fP of file \fBAM_Adv\&.cs\fP\&.
.SS "bool AM_Adv\&.updatePlans\fR [protected]\fP"

.PP
Definition at line \fB1336\fP of file \fBAM_Adv\&.cs\fP\&.
.SS "Vector2 AM_Adv\&.vArrow\fR [protected]\fP"

.PP
Definition at line \fB1291\fP of file \fBAM_Adv\&.cs\fP\&.
.SS "bool AM_Adv\&.zoomOut"

.PP
Definition at line \fB1264\fP of file \fBAM_Adv\&.cs\fP\&.
.SS "bool AM_Adv\&.zoomOut2"

.PP
Definition at line \fB1267\fP of file \fBAM_Adv\&.cs\fP\&.
.SH "Property Documentation"
.PP 
.SS "override bool AM_Adv\&.AllowWheelZoom\fR [get]\fP"

.PP
Definition at line \fB74\fP of file \fBAM_Adv\&.cs\fP\&.
.SS "bool AM_Adv\&.autorun\fR [get]\fP"

.PP
Definition at line \fB20\fP of file \fBAM_Adv\&.cs\fP\&.
.SS "override bool AM_Adv\&.FixFocus\fR [get]\fP"

.PP
Definition at line \fB54\fP of file \fBAM_Adv\&.cs\fP\&.
.SS "override float AM_Adv\&.gameSpeed\fR [get]\fP"

.PP
Definition at line \fB40\fP of file \fBAM_Adv\&.cs\fP\&.
.SS "\fBPointTarget\fP AM_Adv\&.mouseTarget\fR [get]\fP"

.PP
Definition at line \fB10\fP of file \fBAM_Adv\&.cs\fP\&.
.SS "bool AM_Adv\&.ShouldHideTile\fR [get]\fP"

.PP
Definition at line \fB30\fP of file \fBAM_Adv\&.cs\fP\&.
.SS "override bool AM_Adv\&.ShouldPauseGame\fR [get]\fP"

.PP
Definition at line \fB64\fP of file \fBAM_Adv\&.cs\fP\&.
.SS "override float AM_Adv\&.TargetZoom\fR [get]\fP"

.PP
Definition at line \fB84\fP of file \fBAM_Adv\&.cs\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Elin Modding Docs Doc from the source code\&.
