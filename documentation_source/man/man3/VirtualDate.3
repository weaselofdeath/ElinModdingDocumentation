.TH "VirtualDate" 3 "Elin Modding Docs Doc" \" -*- nroff -*-
.ad l
.nh
.SH NAME
VirtualDate
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBDate\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBVirtualDate\fP (int elapsedHours=0)"
.br
.ti -1c
.RI "\fBBranchMap\fP \fBGetBranchMap\fP ()"
.br
.ti -1c
.RI "void \fBBuildSunMap\fP ()"
.br
.ti -1c
.RI "void \fBSimulateHour\fP ()"
.br
.ti -1c
.RI "void \fBSimulateDay\fP ()"
.br
.ti -1c
.RI "void \fBSimulateMonth\fP ()"
.br
.ti -1c
.RI "void \fBSimulateYear\fP ()"
.br
.in -1c

Public Member Functions inherited from \fBDate\fP
.in +1c
.ti -1c
.RI "\fBDate\fP \fBCopy\fP ()"
.br
.ti -1c
.RI "override string \fBToString\fP ()"
.br
.ti -1c
.RI "void \fBAddHour\fP (int a)"
.br
.ti -1c
.RI "void \fBAddDay\fP (int a)"
.br
.ti -1c
.RI "void \fBAddMonth\fP (int a)"
.br
.ti -1c
.RI "string \fBGetText\fP (Date\&.TextFormat format)"
.br
.ti -1c
.RI "int \fBGetRawReal\fP (int offsetHours=0)"
.br
.ti -1c
.RI "int \fBGetRaw\fP (int offsetHours=0)"
.br
.ti -1c
.RI "int \fBGetRawDay\fP ()"
.br
.ti -1c
.RI "bool \fBIsExpired\fP (int time)"
.br
.ti -1c
.RI "int \fBGetRemainingHours\fP (int rawDeadLine)"
.br
.ti -1c
.RI "int \fBGetRemainingSecs\fP (int rawDeadLine)"
.br
.ti -1c
.RI "int \fBGetElapsedMins\fP (int rawDate)"
.br
.ti -1c
.RI "int \fBGetElapsedHour\fP (int rawDate)"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "bool \fBIsRealTime\fP"
.br
.ti -1c
.RI "HashSet< int > \fBsunMap\fP"
.br
.ti -1c
.RI "\fBBranchMap\fP \fBbranchMap\fP"
.br
.in -1c

Public Attributes inherited from \fBDate\fP
.in +1c
.ti -1c
.RI "int[] \fBraw\fP = new int[6]"
.br
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "static \fBDate\fP \fBcurrent\fP"
.br
.in -1c

Static Public Attributes inherited from \fBDate\fP
.in +1c
.ti -1c
.RI "const int \fBShippingHour\fP = 5"
.br
.ti -1c
.RI "const int \fBHourToken\fP = 60"
.br
.ti -1c
.RI "const int \fBDayToken\fP = 1440"
.br
.ti -1c
.RI "const int \fBMonthToken\fP = 43200"
.br
.ti -1c
.RI "const int \fBYearToken\fP = 518400"
.br
.ti -1c
.RI "const int \fBHourTokenReal\fP = 60"
.br
.ti -1c
.RI "const int \fBDayTokenReal\fP = 1440"
.br
.ti -1c
.RI "const int \fBMonthTokenReal\fP = 46080"
.br
.ti -1c
.RI "const int \fBYearTokenReal\fP = 552960"
.br
.in -1c

Static Public Attributes inherited from \fBEClass\fP
.in +1c
.ti -1c
.RI "static \fBCore\fP \fBcore\fP"
.br
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "static bool \fBIsActive\fP\fR [get]\fP"
.br
.in -1c

Properties inherited from \fBDate\fP
.in +1c
.ti -1c
.RI "int \fByear\fP\fR [get, set]\fP"
.br
.ti -1c
.RI "int \fBmonth\fP\fR [get, set]\fP"
.br
.ti -1c
.RI "int \fBday\fP\fR [get, set]\fP"
.br
.ti -1c
.RI "int \fBhour\fP\fR [get, set]\fP"
.br
.ti -1c
.RI "int \fBmin\fP\fR [get, set]\fP"
.br
.ti -1c
.RI "int \fBsec\fP\fR [get, set]\fP"
.br
.ti -1c
.RI "bool \fBIsDay\fP\fR [get]\fP"
.br
.ti -1c
.RI "bool \fBIsNight\fP\fR [get]\fP"
.br
.ti -1c
.RI "PeriodOfDay \fBperiodOfDay\fP\fR [get]\fP"
.br
.ti -1c
.RI "string \fBNameMonth\fP\fR [get]\fP"
.br
.ti -1c
.RI "string \fBNameMonthShort\fP\fR [get]\fP"
.br
.ti -1c
.RI "string \fBNameTime\fP\fR [get]\fP"
.br
.ti -1c
.RI "bool \fBIsSpring\fP\fR [get]\fP"
.br
.ti -1c
.RI "bool \fBIsSummer\fP\fR [get]\fP"
.br
.ti -1c
.RI "bool \fBIsAutumn\fP\fR [get]\fP"
.br
.ti -1c
.RI "bool \fBIsWinter\fP\fR [get]\fP"
.br
.in -1c

Properties inherited from \fBEClass\fP
.in +1c
.ti -1c
.RI "static \fBGame\fP \fBgame\fP\fR [get]\fP"
.br
.ti -1c
.RI "static bool \fBAdvMode\fP\fR [get]\fP"
.br
.ti -1c
.RI "static \fBPlayer\fP \fBplayer\fP\fR [get]\fP"
.br
.ti -1c
.RI "static \fBChara\fP \fBpc\fP\fR [get]\fP"
.br
.ti -1c
.RI "static \fBUI\fP \fBui\fP\fR [get]\fP"
.br
.ti -1c
.RI "static \fBMap\fP \fB_map\fP\fR [get]\fP"
.br
.ti -1c
.RI "static \fBZone\fP \fB_zone\fP\fR [get]\fP"
.br
.ti -1c
.RI "static \fBFactionBranch\fP \fBBranch\fP\fR [get]\fP"
.br
.ti -1c
.RI "static \fBFactionBranch\fP \fBBranchOrHomeBranch\fP\fR [get]\fP"
.br
.ti -1c
.RI "static \fBFaction\fP \fBHome\fP\fR [get]\fP"
.br
.ti -1c
.RI "static \fBFaction\fP \fBWilds\fP\fR [get]\fP"
.br
.ti -1c
.RI "static \fBScene\fP \fBscene\fP\fR [get]\fP"
.br
.ti -1c
.RI "static \fBBaseGameScreen\fP \fBscreen\fP\fR [get]\fP"
.br
.ti -1c
.RI "static \fBGameSetting\fP \fBsetting\fP\fR [get]\fP"
.br
.ti -1c
.RI "static \fBGameData\fP \fBgamedata\fP\fR [get]\fP"
.br
.ti -1c
.RI "static \fBColorProfile\fP \fBColors\fP\fR [get]\fP"
.br
.ti -1c
.RI "static \fBWorld\fP \fBworld\fP\fR [get]\fP"
.br
.ti -1c
.RI "static \fBSourceManager\fP \fBsources\fP\fR [get]\fP"
.br
.ti -1c
.RI "static \fBSourceManager\fP \fBeditorSources\fP\fR [get]\fP"
.br
.ti -1c
.RI "static SoundManager \fBSound\fP\fR [get]\fP"
.br
.ti -1c
.RI "static \fBCoreDebug\fP \fBdebug\fP\fR [get]\fP"
.br
.in -1c
.SS "Additional Inherited Members"


Public Types inherited from \fBDate\fP
.in +1c
.ti -1c
.RI "enum \fBTextFormat\fP { \fBDefault\fP, \fBLog\fP, \fBWidget\fP, \fBSchedule\fP, \fBTravel\fP, \fBYearMonthDay\fP, \fBLogPlusYear\fP }"
.br
.in -1c

Static Public Member Functions inherited from \fBDate\fP
.in +1c
.ti -1c
.RI "static string \fBGetText\fP (int raw, Date\&.TextFormat format)"
.br
.ti -1c
.RI "static string \fBGetText\fP (int hour)"
.br
.ti -1c
.RI "static string \fBGetText2\fP (int hour)"
.br
.ti -1c
.RI "static string \fBSecToDate\fP (int sec)"
.br
.ti -1c
.RI "static string \fBMinToDayAndHour\fP (int min)"
.br
.ti -1c
.RI "static int[] \fBGetDateArray\fP (int raw)"
.br
.ti -1c
.RI "static \fBDate\fP \fBToDate\fP (int raw)"
.br
.in -1c

Static Public Member Functions inherited from \fBEClass\fP
.in +1c
.ti -1c
.RI "static int \fBrnd\fP (int a)"
.br
.ti -1c
.RI "static int \fBcurve\fP (int a, int start, int step, int rate=75)"
.br
.ti -1c
.RI "static int \fBrndHalf\fP (int a)"
.br
.ti -1c
.RI "static float \fBrndf\fP (float a)"
.br
.ti -1c
.RI "static int \fBrndSqrt\fP (int a)"
.br
.ti -1c
.RI "static void \fBWait\fP (float a, \fBCard\fP c)"
.br
.ti -1c
.RI "static void \fBWait\fP (float a, \fBPoint\fP p)"
.br
.ti -1c
.RI "static int \fBBigger\fP (int a, int b)"
.br
.ti -1c
.RI "static int \fBSmaller\fP (int a, int b)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line \fB6\fP of file \fBVirtualDate\&.cs\fP\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "VirtualDate\&.VirtualDate (int elapsedHours = \fR0\fP)"

.PP
Definition at line \fB19\fP of file \fBVirtualDate\&.cs\fP\&.
.SH "Member Function Documentation"
.PP 
.SS "void VirtualDate\&.BuildSunMap ()"

.PP
Definition at line \fB64\fP of file \fBVirtualDate\&.cs\fP\&.
.SS "\fBBranchMap\fP VirtualDate\&.GetBranchMap ()"

.PP
Definition at line \fB53\fP of file \fBVirtualDate\&.cs\fP\&.
.SS "void VirtualDate\&.SimulateDay ()"

.PP
Definition at line \fB91\fP of file \fBVirtualDate\&.cs\fP\&.
.SS "void VirtualDate\&.SimulateHour ()"

.PP
Definition at line \fB78\fP of file \fBVirtualDate\&.cs\fP\&.
.SS "void VirtualDate\&.SimulateMonth ()"

.PP
Definition at line \fB104\fP of file \fBVirtualDate\&.cs\fP\&.
.SS "void VirtualDate\&.SimulateYear ()"

.PP
Definition at line \fB117\fP of file \fBVirtualDate\&.cs\fP\&.
.SH "Member Data Documentation"
.PP 
.SS "\fBBranchMap\fP VirtualDate\&.branchMap"

.PP
Definition at line \fB133\fP of file \fBVirtualDate\&.cs\fP\&.
.SS "\fBDate\fP VirtualDate\&.current\fR [static]\fP"

.PP
Definition at line \fB124\fP of file \fBVirtualDate\&.cs\fP\&.
.SS "bool VirtualDate\&.IsRealTime"

.PP
Definition at line \fB127\fP of file \fBVirtualDate\&.cs\fP\&.
.SS "HashSet<int> VirtualDate\&.sunMap"

.PP
Definition at line \fB130\fP of file \fBVirtualDate\&.cs\fP\&.
.SH "Property Documentation"
.PP 
.SS "bool VirtualDate\&.IsActive\fR [static]\fP, \fR [get]\fP"

.PP
Definition at line \fB10\fP of file \fBVirtualDate\&.cs\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Elin Modding Docs Doc from the source code\&.
