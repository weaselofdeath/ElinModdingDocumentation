<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="class_act_effect" kind="class" language="C#" prot="public">
    <compoundname>ActEffect</compoundname>
    <basecompoundref refid="class_e_class" prot="public" virt="non-virtual">EClass</basecompoundref>
    <innerclass refid="class_act_effect_1_1_wish_item" prot="private">ActEffect::WishItem</innerclass>
    <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_act_effect_1a8280731f2f44db2f3aba79caac1db23b" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int ActEffect.RapidCount</definition>
        <argsstring></argsstring>
        <name>RapidCount</name>
        <qualifiedname>ActEffect.RapidCount</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Elin/ActEffect.cs" line="2439" column="19" bodyfile="Elin/ActEffect.cs" bodystart="2439" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_act_effect_1a7582951cd6f93d08e7ebe20e020a6095" prot="public" static="yes" mutable="no">
        <type>float</type>
        <definition>float ActEffect.RapidDelay</definition>
        <argsstring></argsstring>
        <name>RapidDelay</name>
        <qualifiedname>ActEffect.RapidDelay</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Elin/ActEffect.cs" line="2442" column="21" bodyfile="Elin/ActEffect.cs" bodystart="2442" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_act_effect_1a594863b22de8c76526687843994af0c4" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int ActEffect.angle</definition>
        <argsstring></argsstring>
        <name>angle</name>
        <qualifiedname>ActEffect.angle</qualifiedname>
        <initializer>= 20</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Elin/ActEffect.cs" line="2445" column="19" bodyfile="Elin/ActEffect.cs" bodystart="2445" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_act_effect_1a85f65a7ddf8e893ea91e3a73b73c2238" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ActEffect.TryDelay</definition>
        <argsstring>(Action a)</argsstring>
        <name>TryDelay</name>
        <qualifiedname>ActEffect.TryDelay</qualifiedname>
        <param>
          <type>Action</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Elin/ActEffect.cs" line="10" column="20" bodyfile="Elin/ActEffect.cs" bodystart="10" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="class_act_effect_1aa7e3c236ae31446cae7736dab0d27c33" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool ActEffect.DamageEle</definition>
        <argsstring>(Card CC, EffectId id, int power, Element e, List&lt; Point &gt; points, ActRef actref, string lang=null)</argsstring>
        <name>DamageEle</name>
        <qualifiedname>ActEffect.DamageEle</qualifiedname>
        <param>
          <type><ref refid="class_card" kindref="compound">Card</ref></type>
          <declname>CC</declname>
        </param>
        <param>
          <type>EffectId</type>
          <declname>id</declname>
        </param>
        <param>
          <type>int</type>
          <declname>power</declname>
        </param>
        <param>
          <type><ref refid="class_element" kindref="compound">Element</ref></type>
          <declname>e</declname>
        </param>
        <param>
          <type>List&lt; <ref refid="class_point" kindref="compound">Point</ref> &gt;</type>
          <declname>points</declname>
        </param>
        <param>
          <type><ref refid="struct_act_ref" kindref="compound">ActRef</ref></type>
          <declname>actref</declname>
        </param>
        <param>
          <type>string</type>
          <declname>lang</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Elin/ActEffect.cs" line="24" column="20" bodyfile="Elin/ActEffect.cs" bodystart="24" bodyend="304"/>
      </memberdef>
      <memberdef kind="function" id="class_act_effect_1ad702ac411d9d8f839e7fd335b6581d43" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ActEffect.ProcAt</definition>
        <argsstring>(EffectId id, int power, BlessedState state, Card cc, Card tc, Point tp, bool isNeg, ActRef actRef=default(ActRef))</argsstring>
        <name>ProcAt</name>
        <qualifiedname>ActEffect.ProcAt</qualifiedname>
        <param>
          <type>EffectId</type>
          <declname>id</declname>
        </param>
        <param>
          <type>int</type>
          <declname>power</declname>
        </param>
        <param>
          <type>BlessedState</type>
          <declname>state</declname>
        </param>
        <param>
          <type><ref refid="class_card" kindref="compound">Card</ref></type>
          <declname>cc</declname>
        </param>
        <param>
          <type><ref refid="class_card" kindref="compound">Card</ref></type>
          <declname>tc</declname>
        </param>
        <param>
          <type><ref refid="class_point" kindref="compound">Point</ref></type>
          <declname>tp</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isNeg</declname>
        </param>
        <param>
          <type><ref refid="struct_act_ref" kindref="compound">ActRef</ref></type>
          <declname>actRef</declname>
          <defval>default(<ref refid="struct_act_ref" kindref="compound">ActRef</ref>)</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Elin/ActEffect.cs" line="307" column="20" bodyfile="Elin/ActEffect.cs" bodystart="307" bodyend="734"/>
      </memberdef>
      <memberdef kind="function" id="class_act_effect_1aa11e7453203f08185bc4d9db277254a7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ActEffect.Proc</definition>
        <argsstring>(EffectId id, Card cc, Card tc=null, int power=100, ActRef actRef=default(ActRef))</argsstring>
        <name>Proc</name>
        <qualifiedname>ActEffect.Proc</qualifiedname>
        <param>
          <type>EffectId</type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="class_card" kindref="compound">Card</ref></type>
          <declname>cc</declname>
        </param>
        <param>
          <type><ref refid="class_card" kindref="compound">Card</ref></type>
          <declname>tc</declname>
          <defval>null</defval>
        </param>
        <param>
          <type>int</type>
          <declname>power</declname>
          <defval>100</defval>
        </param>
        <param>
          <type><ref refid="struct_act_ref" kindref="compound">ActRef</ref></type>
          <declname>actRef</declname>
          <defval>default(<ref refid="struct_act_ref" kindref="compound">ActRef</ref>)</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Elin/ActEffect.cs" line="737" column="20" bodyfile="Elin/ActEffect.cs" bodystart="737" bodyend="740"/>
      </memberdef>
      <memberdef kind="function" id="class_act_effect_1a39e42ac0f851b751eea933f9b08fedd2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ActEffect.Proc</definition>
        <argsstring>(EffectId id, int power, BlessedState state, Card cc, Card tc=null, ActRef actRef=default(ActRef))</argsstring>
        <name>Proc</name>
        <qualifiedname>ActEffect.Proc</qualifiedname>
        <param>
          <type>EffectId</type>
          <declname>id</declname>
        </param>
        <param>
          <type>int</type>
          <declname>power</declname>
        </param>
        <param>
          <type>BlessedState</type>
          <declname>state</declname>
        </param>
        <param>
          <type><ref refid="class_card" kindref="compound">Card</ref></type>
          <declname>cc</declname>
        </param>
        <param>
          <type><ref refid="class_card" kindref="compound">Card</ref></type>
          <declname>tc</declname>
          <defval>null</defval>
        </param>
        <param>
          <type><ref refid="struct_act_ref" kindref="compound">ActRef</ref></type>
          <declname>actRef</declname>
          <defval>default(<ref refid="struct_act_ref" kindref="compound">ActRef</ref>)</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Elin/ActEffect.cs" line="743" column="20" bodyfile="Elin/ActEffect.cs" bodystart="743" bodyend="2217"/>
      </memberdef>
      <memberdef kind="function" id="class_act_effect_1a2cd07b7bdaa20ad3aa59e4d1e79d61ce" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ActEffect.Poison</definition>
        <argsstring>(Chara tc, Chara c, int power)</argsstring>
        <name>Poison</name>
        <qualifiedname>ActEffect.Poison</qualifiedname>
        <param>
          <type><ref refid="class_chara" kindref="compound">Chara</ref></type>
          <declname>tc</declname>
        </param>
        <param>
          <type><ref refid="class_chara" kindref="compound">Chara</ref></type>
          <declname>c</declname>
        </param>
        <param>
          <type>int</type>
          <declname>power</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Elin/ActEffect.cs" line="2220" column="20" bodyfile="Elin/ActEffect.cs" bodystart="2220" bodyend="2230"/>
      </memberdef>
      <memberdef kind="function" id="class_act_effect_1ad781971f1e087bcd480e756305185c99" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ActEffect.LoveMiracle</definition>
        <argsstring>(Chara tc, Chara c, int power)</argsstring>
        <name>LoveMiracle</name>
        <qualifiedname>ActEffect.LoveMiracle</qualifiedname>
        <param>
          <type><ref refid="class_chara" kindref="compound">Chara</ref></type>
          <declname>tc</declname>
        </param>
        <param>
          <type><ref refid="class_chara" kindref="compound">Chara</ref></type>
          <declname>c</declname>
        </param>
        <param>
          <type>int</type>
          <declname>power</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Elin/ActEffect.cs" line="2233" column="20" bodyfile="Elin/ActEffect.cs" bodystart="2233" bodyend="2254"/>
      </memberdef>
      <memberdef kind="function" id="class_act_effect_1a5882f770fd20cf2c854a371bd3f475ef" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_point" kindref="compound">Point</ref></type>
        <definition>static Point ActEffect.GetTeleportPos</definition>
        <argsstring>(Point org, int radius=6)</argsstring>
        <name>GetTeleportPos</name>
        <qualifiedname>ActEffect.GetTeleportPos</qualifiedname>
        <param>
          <type><ref refid="class_point" kindref="compound">Point</ref></type>
          <declname>org</declname>
        </param>
        <param>
          <type>int</type>
          <declname>radius</declname>
          <defval>6</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Elin/ActEffect.cs" line="2257" column="21" bodyfile="Elin/ActEffect.cs" bodystart="2257" bodyend="2271"/>
      </memberdef>
      <memberdef kind="function" id="class_act_effect_1af0a12faa8a339ae864d2a64f2ed54901" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool ActEffect.Wish</definition>
        <argsstring>(string s, string name, int power)</argsstring>
        <name>Wish</name>
        <qualifiedname>ActEffect.Wish</qualifiedname>
        <param>
          <type>string</type>
          <declname>s</declname>
        </param>
        <param>
          <type>string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>power</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Elin/ActEffect.cs" line="2274" column="20" bodyfile="Elin/ActEffect.cs" bodystart="2274" bodyend="2417"/>
      </memberdef>
      <memberdef kind="function" id="class_act_effect_1a69dfcafb70a901cac733b7ec0abcf28b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int ActEffect.Compare</definition>
        <argsstring>(string s, string t)</argsstring>
        <name>Compare</name>
        <qualifiedname>ActEffect.Compare</qualifiedname>
        <param>
          <type>string</type>
          <declname>s</declname>
        </param>
        <param>
          <type>string</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Elin/ActEffect.cs" line="2420" column="19" bodyfile="Elin/ActEffect.cs" bodystart="2420" bodyend="2436"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>ActEffect</label>
        <link refid="class_act_effect"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>EClass</label>
        <link refid="class_e_class"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>ActEffect</label>
        <link refid="class_act_effect"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>Core</label>
      </node>
      <node id="2">
        <label>EClass</label>
        <link refid="class_e_class"/>
        <childnode refid="3" relation="usage">
          <edgelabel>core</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="Elin/ActEffect.cs" line="7" column="7" bodyfile="Elin/ActEffect.cs" bodystart="8" bodyend="2459"/>
    <listofallmembers>
      <member refid="class_e_class_1a5e6e42d05529c1e46f61791f51d08195" prot="public" virt="non-virtual"><scope>ActEffect</scope><name>_map</name></member>
      <member refid="class_e_class_1a4d6bdfd2b69bc49a9b29f1199877ebd9" prot="public" virt="non-virtual"><scope>ActEffect</scope><name>_zone</name></member>
      <member refid="class_e_class_1a7cb92011a392bea3bb20b5acad88aa4a" prot="public" virt="non-virtual"><scope>ActEffect</scope><name>AdvMode</name></member>
      <member refid="class_act_effect_1a594863b22de8c76526687843994af0c4" prot="public" virt="non-virtual"><scope>ActEffect</scope><name>angle</name></member>
      <member refid="class_e_class_1a5fd5258d22ca6ebd120547e7b97a611b" prot="public" virt="non-virtual"><scope>ActEffect</scope><name>Bigger</name></member>
      <member refid="class_e_class_1a8f1e1e1a054339f58a2eecd62c4f3612" prot="public" virt="non-virtual"><scope>ActEffect</scope><name>Branch</name></member>
      <member refid="class_e_class_1aee919776a2c8fc4f9132e101efe2f1f4" prot="public" virt="non-virtual"><scope>ActEffect</scope><name>BranchOrHomeBranch</name></member>
      <member refid="class_e_class_1a0803a3f94e106e7d65031cb5c9f23ebe" prot="public" virt="non-virtual"><scope>ActEffect</scope><name>Colors</name></member>
      <member refid="class_act_effect_1a69dfcafb70a901cac733b7ec0abcf28b" prot="public" virt="non-virtual"><scope>ActEffect</scope><name>Compare</name></member>
      <member refid="class_e_class_1a43ff00755aa7d34b91ab7f9dbbe922c3" prot="public" virt="non-virtual"><scope>ActEffect</scope><name>core</name></member>
      <member refid="class_e_class_1a160545685c1ede8a286de567dc56f5ca" prot="public" virt="non-virtual"><scope>ActEffect</scope><name>curve</name></member>
      <member refid="class_act_effect_1aa7e3c236ae31446cae7736dab0d27c33" prot="public" virt="non-virtual"><scope>ActEffect</scope><name>DamageEle</name></member>
      <member refid="class_e_class_1af0467a0392813c1e8e5215fde409da07" prot="public" virt="non-virtual"><scope>ActEffect</scope><name>debug</name></member>
      <member refid="class_e_class_1a970c1867feff8e3f5a85aeab6af85c42" prot="public" virt="non-virtual"><scope>ActEffect</scope><name>editorSources</name></member>
      <member refid="class_e_class_1a012d65ced13d1cf54c6776a5d29df3c3" prot="public" virt="non-virtual"><scope>ActEffect</scope><name>game</name></member>
      <member refid="class_e_class_1a2533de71120ba0cbfc79189af08cc26f" prot="public" virt="non-virtual"><scope>ActEffect</scope><name>gamedata</name></member>
      <member refid="class_act_effect_1a5882f770fd20cf2c854a371bd3f475ef" prot="public" virt="non-virtual"><scope>ActEffect</scope><name>GetTeleportPos</name></member>
      <member refid="class_e_class_1a079df2f093c2b827947eb8db4de7c78a" prot="public" virt="non-virtual"><scope>ActEffect</scope><name>Home</name></member>
      <member refid="class_act_effect_1ad781971f1e087bcd480e756305185c99" prot="public" virt="non-virtual"><scope>ActEffect</scope><name>LoveMiracle</name></member>
      <member refid="class_e_class_1ab6ee3269cfd4fb7292d9f39b859b9b07" prot="public" virt="non-virtual"><scope>ActEffect</scope><name>pc</name></member>
      <member refid="class_e_class_1aaf17e3ff62e9e834064c5d4b782a84cb" prot="public" virt="non-virtual"><scope>ActEffect</scope><name>player</name></member>
      <member refid="class_act_effect_1a2cd07b7bdaa20ad3aa59e4d1e79d61ce" prot="public" virt="non-virtual"><scope>ActEffect</scope><name>Poison</name></member>
      <member refid="class_act_effect_1aa11e7453203f08185bc4d9db277254a7" prot="public" virt="non-virtual"><scope>ActEffect</scope><name>Proc</name></member>
      <member refid="class_act_effect_1a39e42ac0f851b751eea933f9b08fedd2" prot="public" virt="non-virtual"><scope>ActEffect</scope><name>Proc</name></member>
      <member refid="class_act_effect_1ad702ac411d9d8f839e7fd335b6581d43" prot="public" virt="non-virtual"><scope>ActEffect</scope><name>ProcAt</name></member>
      <member refid="class_act_effect_1a8280731f2f44db2f3aba79caac1db23b" prot="public" virt="non-virtual"><scope>ActEffect</scope><name>RapidCount</name></member>
      <member refid="class_act_effect_1a7582951cd6f93d08e7ebe20e020a6095" prot="public" virt="non-virtual"><scope>ActEffect</scope><name>RapidDelay</name></member>
      <member refid="class_e_class_1a168b1097bf0c30bd077a4f88541b4c7c" prot="public" virt="non-virtual"><scope>ActEffect</scope><name>rnd</name></member>
      <member refid="class_e_class_1a859a9e1a1cbce6b89892bb19cebe1a30" prot="public" virt="non-virtual"><scope>ActEffect</scope><name>rndf</name></member>
      <member refid="class_e_class_1aab84d4222ba97e33775a9b7f3a2785dd" prot="public" virt="non-virtual"><scope>ActEffect</scope><name>rndHalf</name></member>
      <member refid="class_e_class_1a545c4413b940ef1b8afa1334aa21e97f" prot="public" virt="non-virtual"><scope>ActEffect</scope><name>rndSqrt</name></member>
      <member refid="class_e_class_1a06be4be1aacaa8f55093955d573ada26" prot="public" virt="non-virtual"><scope>ActEffect</scope><name>scene</name></member>
      <member refid="class_e_class_1a9ef545539642e6b9a5e9fcb4092abce9" prot="public" virt="non-virtual"><scope>ActEffect</scope><name>screen</name></member>
      <member refid="class_e_class_1afef49687145e5bf7994b77ba86d1ff11" prot="public" virt="non-virtual"><scope>ActEffect</scope><name>setting</name></member>
      <member refid="class_e_class_1a5033afff637b28a95cd12ebbf51e1805" prot="public" virt="non-virtual"><scope>ActEffect</scope><name>Smaller</name></member>
      <member refid="class_e_class_1af170c2fbde2a903f1c288b48a96566e6" prot="public" virt="non-virtual"><scope>ActEffect</scope><name>Sound</name></member>
      <member refid="class_e_class_1a6a5df4ca9459aaba8ee2fa3b6697055c" prot="public" virt="non-virtual"><scope>ActEffect</scope><name>sources</name></member>
      <member refid="class_act_effect_1a85f65a7ddf8e893ea91e3a73b73c2238" prot="public" virt="non-virtual"><scope>ActEffect</scope><name>TryDelay</name></member>
      <member refid="class_e_class_1af23c8bf694ef75cda88e6b272597bf92" prot="public" virt="non-virtual"><scope>ActEffect</scope><name>ui</name></member>
      <member refid="class_e_class_1a44f68f6f1c55b824f3684c78364abf5f" prot="public" virt="non-virtual"><scope>ActEffect</scope><name>Wait</name></member>
      <member refid="class_e_class_1abc86a94ff74181ef4ad76960c4186df6" prot="public" virt="non-virtual"><scope>ActEffect</scope><name>Wait</name></member>
      <member refid="class_e_class_1a8837ae75780712ff2c110589063f7f7d" prot="public" virt="non-virtual"><scope>ActEffect</scope><name>Wilds</name></member>
      <member refid="class_act_effect_1af0a12faa8a339ae864d2a64f2ed54901" prot="public" virt="non-virtual"><scope>ActEffect</scope><name>Wish</name></member>
      <member refid="class_e_class_1a55cea92739455d0aa460e2a7a1503f8a" prot="public" virt="non-virtual"><scope>ActEffect</scope><name>world</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
