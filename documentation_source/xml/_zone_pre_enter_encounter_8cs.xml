<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="_zone_pre_enter_encounter_8cs" kind="file" language="C#">
    <compoundname>ZonePreEnterEncounter.cs</compoundname>
    <innerclass refid="class_zone_pre_enter_encounter" prot="public">ZonePreEnterEncounter</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">using<sp/></highlight><highlight class="normal">System;</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">UnityEngine;</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Token:<sp/>0x0200074E<sp/>RID:<sp/>1870</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5" refid="class_zone_pre_enter_encounter" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_zone_pre_enter_encounter" kindref="compound">ZonePreEnterEncounter</ref><sp/>:<sp/><ref refid="class_zone_pre_enter_event" kindref="compound">ZonePreEnterEvent</ref></highlight></codeline>
<codeline lineno="6"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Token:<sp/>0x0600363F<sp/>RID:<sp/>13887<sp/>RVA:<sp/>0x00126860<sp/>File<sp/>Offset:<sp/>0x00124A60</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Execute()</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>flag<sp/>=<sp/><ref refid="class_e_class" kindref="compound">EClass</ref>.pc.HasCondition&lt;<ref refid="class_con_draw_metal" kindref="compound">ConDrawMetal</ref>&gt;();</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lv<sp/>=<sp/>Mathf.Max(<ref refid="class_e_class" kindref="compound">EClass</ref>._zone.DangerLv,<sp/><ref refid="class_e_class" kindref="compound">EClass</ref>.pc.FameLv<sp/>*<sp/>Math.Min(</highlight><highlight class="keyword">this</highlight><highlight class="normal">.roadDist<sp/>*<sp/>20,<sp/>100)<sp/>/<sp/>100);</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>this.enemies;<sp/>i++)</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_point" kindref="compound">Point</ref><sp/>nearestPoint<sp/>=<sp/>(<ref refid="class_e_class" kindref="compound">EClass</ref>.pc.pos.GetRandomPoint(4,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>100)<sp/>??<sp/><ref refid="class_e_class" kindref="compound">EClass</ref>.pc.pos).GetNearestPoint(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_chara" kindref="compound">Chara</ref><sp/>chara<sp/>=<sp/><ref refid="class_e_class" kindref="compound">EClass</ref>._zone.SpawnMob(nearestPoint,<sp/><ref refid="class_spawn_setting" kindref="compound">SpawnSetting</ref>.Encounter(lv));</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chara.hostility<sp/>=<sp/>(chara.c_originalHostility<sp/>=<sp/>Hostility.Enemy);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chara.enemy<sp/>=<sp/><ref refid="class_e_class" kindref="compound">EClass</ref>.pc.party.members.RandomItem&lt;<ref refid="class_chara" kindref="compound">Chara</ref>&gt;();</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flag<sp/>&amp;&amp;<sp/><ref refid="class_e_class" kindref="compound">EClass</ref>.rnd(<ref refid="class_e_class" kindref="compound">EClass</ref>.debug.enable<sp/>?<sp/>1<sp/>:<sp/>3)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_point" kindref="compound">Point</ref><sp/>nearestPoint2<sp/>=<sp/>(<ref refid="class_e_class" kindref="compound">EClass</ref>.pc.pos.GetRandomPoint(4,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>100)<sp/>??<sp/><ref refid="class_e_class" kindref="compound">EClass</ref>.pc.pos).GetNearestPoint(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_spawn_list" kindref="compound">SpawnList</ref><sp/>list<sp/>=<sp/><ref refid="class_spawn_list_chara" kindref="compound">SpawnListChara</ref>.Get(</highlight><highlight class="stringliteral">&quot;c_metal&quot;</highlight><highlight class="normal">,<sp/>(<ref refid="class_source_chara" kindref="compound">SourceChara</ref>.<ref refid="class_source_chara_1_1_row" kindref="compound">Row</ref><sp/>s)<sp/>=&gt;<sp/>s.race<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;metal&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_e_class" kindref="compound">EClass</ref>._zone.AddCard(<ref refid="class_chara_gen" kindref="compound">CharaGen</ref>.CreateFromFilter(list,<sp/><ref refid="class_e_class" kindref="compound">EClass</ref>._zone.DangerLv,<sp/>-1),<sp/>nearestPoint2);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="class_e_class" kindref="compound">EClass</ref>._zone.Tile.isRoad<sp/>||<sp/><ref refid="class_e_class" kindref="compound">EClass</ref>._zone.Tile.IsNeighborRoad)<sp/>&amp;&amp;<sp/><ref refid="class_e_class" kindref="compound">EClass</ref>.rnd(2)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_point" kindref="compound">Point</ref><sp/>nearestPoint3<sp/>=<sp/>(<ref refid="class_e_class" kindref="compound">EClass</ref>.pc.pos.GetRandomPoint(4,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>100)<sp/>??<sp/><ref refid="class_e_class" kindref="compound">EClass</ref>.pc.pos).GetNearestPoint(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_e_class" kindref="compound">EClass</ref>._zone.AddCard(<ref refid="class_chara_gen" kindref="compound">CharaGen</ref>.Create(</highlight><highlight class="stringliteral">&quot;guard&quot;</highlight><highlight class="normal">,<sp/>-1),<sp/>nearestPoint3);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Token:<sp/>0x04001CA4<sp/>RID:<sp/>7332</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>enemies;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Token:<sp/>0x04001CA5<sp/>RID:<sp/>7333</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>roadDist;</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="Elin/ZonePreEnterEncounter.cs"/>
  </compounddef>
</doxygen>
