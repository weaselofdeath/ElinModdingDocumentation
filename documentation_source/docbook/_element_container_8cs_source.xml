<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__element_container_8cs_source" xml:lang="en-US">
<title>ElementContainer.cs</title>
<indexterm><primary>Elin/ElementContainer.cs</primary></indexterm>
<programlisting linenumbering="unnumbered"><anchor xml:id="__element_container_8cs_source_1l00001"/>00001 <emphasis role="keyword">using&#32;</emphasis>System;
<anchor xml:id="__element_container_8cs_source_1l00002"/>00002 <emphasis role="keyword">using&#32;</emphasis>System.Collections.Generic;
<anchor xml:id="__element_container_8cs_source_1l00003"/>00003 <emphasis role="keyword">using&#32;</emphasis>System.Linq;
<anchor xml:id="__element_container_8cs_source_1l00004"/>00004 <emphasis role="keyword">using&#32;</emphasis>System.Runtime.CompilerServices;
<anchor xml:id="__element_container_8cs_source_1l00005"/>00005 <emphasis role="keyword">using&#32;</emphasis>System.Runtime.Serialization;
<anchor xml:id="__element_container_8cs_source_1l00006"/>00006 <emphasis role="keyword">using&#32;</emphasis>Newtonsoft.Json;
<anchor xml:id="__element_container_8cs_source_1l00007"/>00007 <emphasis role="keyword">using&#32;</emphasis>UnityEngine;
<anchor xml:id="__element_container_8cs_source_1l00008"/>00008 <emphasis role="keyword">using&#32;</emphasis>UnityEngine.UI;
<anchor xml:id="__element_container_8cs_source_1l00009"/>00009 
<anchor xml:id="__element_container_8cs_source_1l00010"/>00010 <emphasis role="comment">//&#32;Token:&#32;0x0200030A&#32;RID:&#32;778</emphasis>
<anchor xml:id="__element_container_8cs_source_1l00011"/><link linkend="_class_element_container">00011</link> <emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_element_container">ElementContainer</link>&#32;:&#32;<link linkend="_class_e_class">EClass</link>
<anchor xml:id="__element_container_8cs_source_1l00012"/>00012 {
<anchor xml:id="__element_container_8cs_source_1l00013"/>00013 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x170006C5&#32;RID:&#32;1733</emphasis>
<anchor xml:id="__element_container_8cs_source_1l00014"/>00014 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;(get)&#32;Token:&#32;0x06001833&#32;RID:&#32;6195&#32;RVA:&#32;0x0009CCE9&#32;File&#32;Offset:&#32;0x0009AEE9</emphasis>
<anchor xml:id="__element_container_8cs_source_1l00015"/>00015 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">virtual</emphasis>&#32;<link linkend="_class_card">Card</link>&#32;<link linkend="_class_card">Card</link>
<anchor xml:id="__element_container_8cs_source_1l00016"/>00016 &#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00017"/>00017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
<anchor xml:id="__element_container_8cs_source_1l00018"/>00018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00019"/>00019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__element_container_8cs_source_1l00020"/>00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00021"/>00021 &#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00022"/>00022 
<anchor xml:id="__element_container_8cs_source_1l00023"/>00023 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x170006C6&#32;RID:&#32;1734</emphasis>
<anchor xml:id="__element_container_8cs_source_1l00024"/>00024 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;(get)&#32;Token:&#32;0x06001834&#32;RID:&#32;6196&#32;RVA:&#32;0x0009CCEC&#32;File&#32;Offset:&#32;0x0009AEEC</emphasis>
<anchor xml:id="__element_container_8cs_source_1l00025"/>00025 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">virtual</emphasis>&#32;<link linkend="_class_chara">Chara</link>&#32;<link linkend="_class_chara">Chara</link>
<anchor xml:id="__element_container_8cs_source_1l00026"/>00026 &#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00027"/>00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
<anchor xml:id="__element_container_8cs_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__element_container_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00032"/>00032 
<anchor xml:id="__element_container_8cs_source_1l00033"/>00033 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x170006C7&#32;RID:&#32;1735</emphasis>
<anchor xml:id="__element_container_8cs_source_1l00034"/>00034 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;(get)&#32;Token:&#32;0x06001835&#32;RID:&#32;6197&#32;RVA:&#32;0x0009CCEF&#32;File&#32;Offset:&#32;0x0009AEEF</emphasis>
<anchor xml:id="__element_container_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;IsMeleeWeapon
<anchor xml:id="__element_container_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
<anchor xml:id="__element_container_8cs_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__element_container_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00041"/>00041 &#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00042"/>00042 
<anchor xml:id="__element_container_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06001836&#32;RID:&#32;6198&#32;RVA:&#32;0x0009CCF4&#32;File&#32;Offset:&#32;0x0009AEF4</emphasis>
<anchor xml:id="__element_container_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;[OnSerializing]
<anchor xml:id="__element_container_8cs_source_1l00045"/>00045 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnSerializing(StreamingContext&#32;context)
<anchor xml:id="__element_container_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.list&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;int&gt;();
<anchor xml:id="__element_container_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_element">Element</link>&#32;element&#32;<emphasis role="keywordflow">in</emphasis>&#32;this.dict.Values)
<anchor xml:id="__element_container_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(element.vBase&#32;!=&#32;0&#32;||&#32;element.vExp&#32;!=&#32;0&#32;||&#32;element.vPotential&#32;!=&#32;0&#32;||&#32;element.vTempPotential&#32;!=&#32;0)
<anchor xml:id="__element_container_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.list.AddRange(<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>[]
<anchor xml:id="__element_container_8cs_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;element.id,
<anchor xml:id="__element_container_8cs_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;element.vBase,
<anchor xml:id="__element_container_8cs_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;element.vExp,
<anchor xml:id="__element_container_8cs_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;element.vPotential,
<anchor xml:id="__element_container_8cs_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;element.vTempPotential
<anchor xml:id="__element_container_8cs_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__element_container_8cs_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.list.Count&#32;==&#32;0)
<anchor xml:id="__element_container_8cs_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.list&#32;=&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__element_container_8cs_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00066"/>00066 &#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00067"/>00067 
<anchor xml:id="__element_container_8cs_source_1l00068"/>00068 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06001837&#32;RID:&#32;6199&#32;RVA:&#32;0x0009CDC4&#32;File&#32;Offset:&#32;0x0009AFC4</emphasis>
<anchor xml:id="__element_container_8cs_source_1l00069"/>00069 &#32;&#32;&#32;&#32;[OnDeserialized]
<anchor xml:id="__element_container_8cs_source_1l00070"/>00070 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnDeserialized(StreamingContext&#32;context)
<anchor xml:id="__element_container_8cs_source_1l00071"/>00071 &#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.list&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__element_container_8cs_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;this.list.Count;&#32;i&#32;+=&#32;5)
<anchor xml:id="__element_container_8cs_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_element">Element</link>&#32;orCreateElement&#32;=&#32;this.GetOrCreateElement(this.list[i]);
<anchor xml:id="__element_container_8cs_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(orCreateElement&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__element_container_8cs_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;orCreateElement.vBase&#32;+=&#32;this.list[i&#32;+&#32;1];
<anchor xml:id="__element_container_8cs_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;orCreateElement.vExp&#32;+=&#32;this.list[i&#32;+&#32;2];
<anchor xml:id="__element_container_8cs_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;orCreateElement.vPotential&#32;+=&#32;this.list[i&#32;+&#32;3];
<anchor xml:id="__element_container_8cs_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;orCreateElement.vTempPotential&#32;=&#32;this.list[i&#32;+&#32;4];
<anchor xml:id="__element_container_8cs_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;orCreateElement.owner&#32;=&#32;<emphasis role="keyword">this</emphasis>;
<anchor xml:id="__element_container_8cs_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00087"/>00087 &#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00088"/>00088 
<anchor xml:id="__element_container_8cs_source_1l00089"/>00089 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06001838&#32;RID:&#32;6200&#32;RVA:&#32;0x0009CE7C&#32;File&#32;Offset:&#32;0x0009B07C</emphasis>
<anchor xml:id="__element_container_8cs_source_1l00090"/>00090 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;ApplyElementMap(<emphasis role="keywordtype">int</emphasis>&#32;uid,&#32;SourceValueType&#32;type,&#32;Dictionary&lt;int,&#32;int&gt;&#32;map,&#32;<emphasis role="keywordtype">int</emphasis>&#32;lv,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;invert&#32;=&#32;<emphasis role="keyword">false</emphasis>,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;applyFeat&#32;=&#32;<emphasis role="keyword">false</emphasis>)
<anchor xml:id="__element_container_8cs_source_1l00091"/>00091 &#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;num&#32;=&#32;invert&#32;?&#32;-1&#32;:&#32;1;
<anchor xml:id="__element_container_8cs_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Rand.SetSeed(uid);
<anchor xml:id="__element_container_8cs_source_1l00094"/>00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(KeyValuePair&lt;int,&#32;int&gt;&#32;keyValuePair&#32;<emphasis role="keywordflow">in</emphasis>&#32;map)
<anchor xml:id="__element_container_8cs_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_element">Element</link>&#32;orCreateElement&#32;=&#32;this.GetOrCreateElement(keyValuePair.Key);
<anchor xml:id="__element_container_8cs_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;value&#32;=&#32;keyValuePair.Value;
<anchor xml:id="__element_container_8cs_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(value&#32;!=&#32;0)
<anchor xml:id="__element_container_8cs_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(orCreateElement.source.category&#32;==&#32;<emphasis role="stringliteral">&quot;skill&quot;</emphasis>)
<anchor xml:id="__element_container_8cs_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;orCreateElement.vSourcePotential&#32;+=&#32;orCreateElement.GetSourcePotential(value)&#32;*&#32;num;
<anchor xml:id="__element_container_8cs_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;num2&#32;=&#32;orCreateElement.GetSourceValue(value,&#32;lv,&#32;type)&#32;*&#32;num;
<anchor xml:id="__element_container_8cs_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;orCreateElement.vSource&#32;+=&#32;num2;
<anchor xml:id="__element_container_8cs_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(applyFeat&#32;&amp;&amp;&#32;orCreateElement&#32;is&#32;<link linkend="_class_feat">Feat</link>)
<anchor xml:id="__element_container_8cs_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(orCreateElement&#32;as&#32;<link linkend="_class_feat">Feat</link>).Apply(num2,&#32;<emphasis role="keyword">this</emphasis>,&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__element_container_8cs_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00110"/>00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00112"/>00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Rand.SetSeed(-1);
<anchor xml:id="__element_container_8cs_source_1l00113"/>00113 &#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00114"/>00114 
<anchor xml:id="__element_container_8cs_source_1l00115"/>00115 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06001839&#32;RID:&#32;6201&#32;RVA:&#32;0x0009CF64&#32;File&#32;Offset:&#32;0x0009B164</emphasis>
<anchor xml:id="__element_container_8cs_source_1l00116"/>00116 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;ApplyMaterialElementMap(<link linkend="_class_thing">Thing</link>&#32;t,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;invert&#32;=&#32;<emphasis role="keyword">false</emphasis>)
<anchor xml:id="__element_container_8cs_source_1l00117"/>00117 &#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00118"/>00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;num&#32;=&#32;invert&#32;?&#32;-1&#32;:&#32;1;
<anchor xml:id="__element_container_8cs_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_source_material_1_1_row">SourceMaterial.Row</link>&#32;material&#32;=&#32;t.material;
<anchor xml:id="__element_container_8cs_source_1l00120"/>00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Rand.SetSeed(t.uid);
<anchor xml:id="__element_container_8cs_source_1l00121"/>00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(KeyValuePair&lt;int,&#32;int&gt;&#32;keyValuePair&#32;<emphasis role="keywordflow">in</emphasis>&#32;material.elementMap)
<anchor xml:id="__element_container_8cs_source_1l00122"/>00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00123"/>00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;value&#32;=&#32;keyValuePair.Value;
<anchor xml:id="__element_container_8cs_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(value&#32;!=&#32;0)
<anchor xml:id="__element_container_8cs_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_element">Element</link>&#32;orCreateElement&#32;=&#32;this.GetOrCreateElement(keyValuePair.Key);
<anchor xml:id="__element_container_8cs_source_1l00127"/>00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!orCreateElement.source.IsEncAppliable(t))
<anchor xml:id="__element_container_8cs_source_1l00128"/>00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(orCreateElement.vBase&#32;==&#32;0&#32;&amp;&amp;&#32;orCreateElement.vSource&#32;==&#32;0&#32;&amp;&amp;&#32;orCreateElement.vLink&#32;==&#32;0&#32;&amp;&amp;&#32;orCreateElement.vExp&#32;==&#32;0&#32;&amp;&amp;&#32;orCreateElement.vPotential&#32;==&#32;0)
<anchor xml:id="__element_container_8cs_source_1l00130"/>00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.Remove(orCreateElement.id);
<anchor xml:id="__element_container_8cs_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00133"/>00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__element_container_8cs_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00136"/>00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;num2&#32;=&#32;orCreateElement.GetMaterialSourceValue(t,&#32;value)&#32;*&#32;num;
<anchor xml:id="__element_container_8cs_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;orCreateElement.vSource&#32;+=&#32;num2;
<anchor xml:id="__element_container_8cs_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(orCreateElement.vBase&#32;==&#32;0&#32;&amp;&amp;&#32;orCreateElement.vSource&#32;==&#32;0&#32;&amp;&amp;&#32;orCreateElement.vLink&#32;==&#32;0&#32;&amp;&amp;&#32;orCreateElement.vExp&#32;==&#32;0&#32;&amp;&amp;&#32;orCreateElement.vPotential&#32;==&#32;0)
<anchor xml:id="__element_container_8cs_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.Remove(orCreateElement.id);
<anchor xml:id="__element_container_8cs_source_1l00141"/>00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00142"/>00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00143"/>00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00144"/>00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00145"/>00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Rand.SetSeed(-1);
<anchor xml:id="__element_container_8cs_source_1l00146"/>00146 &#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00147"/>00147 
<anchor xml:id="__element_container_8cs_source_1l00148"/>00148 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x0600183A&#32;RID:&#32;6202&#32;RVA:&#32;0x0009D09C&#32;File&#32;Offset:&#32;0x0009B29C</emphasis>
<anchor xml:id="__element_container_8cs_source_1l00149"/>00149 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;ImportElementMap(Dictionary&lt;int,&#32;int&gt;&#32;map)
<anchor xml:id="__element_container_8cs_source_1l00150"/>00150 &#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00151"/>00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(KeyValuePair&lt;int,&#32;int&gt;&#32;keyValuePair&#32;<emphasis role="keywordflow">in</emphasis>&#32;map)
<anchor xml:id="__element_container_8cs_source_1l00152"/>00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00153"/>00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.GetOrCreateElement(keyValuePair.Key).vSource&#32;+=&#32;keyValuePair.Value;
<anchor xml:id="__element_container_8cs_source_1l00154"/>00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00155"/>00155 &#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00156"/>00156 
<anchor xml:id="__element_container_8cs_source_1l00157"/>00157 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x0600183B&#32;RID:&#32;6203&#32;RVA:&#32;0x0009D104&#32;File&#32;Offset:&#32;0x0009B304</emphasis>
<anchor xml:id="__element_container_8cs_source_1l00158"/>00158 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_element_container">ElementContainer</link>&#32;ImportElementMap(<emphasis role="keywordtype">int</emphasis>[]&#32;ints)
<anchor xml:id="__element_container_8cs_source_1l00159"/>00159 &#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00160"/>00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;ints.Length;&#32;i&#32;+=&#32;2)
<anchor xml:id="__element_container_8cs_source_1l00161"/>00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00162"/>00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.GetOrCreateElement(ints[i]).vSource&#32;+=&#32;ints[i&#32;+&#32;1];
<anchor xml:id="__element_container_8cs_source_1l00163"/>00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00164"/>00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">this</emphasis>;
<anchor xml:id="__element_container_8cs_source_1l00165"/>00165 &#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00166"/>00166 
<anchor xml:id="__element_container_8cs_source_1l00167"/>00167 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x0600183C&#32;RID:&#32;6204&#32;RVA:&#32;0x0009D13C&#32;File&#32;Offset:&#32;0x0009B33C</emphasis>
<anchor xml:id="__element_container_8cs_source_1l00168"/>00168 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;ApplyPotential(<emphasis role="keywordtype">int</emphasis>&#32;mode&#32;=&#32;0)
<anchor xml:id="__element_container_8cs_source_1l00169"/>00169 &#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00170"/>00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_element">Element</link>&#32;element&#32;<emphasis role="keywordflow">in</emphasis>&#32;this.dict.Values)
<anchor xml:id="__element_container_8cs_source_1l00171"/>00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00172"/>00172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(element.HasTag(<emphasis role="stringliteral">&quot;primary&quot;</emphasis>))
<anchor xml:id="__element_container_8cs_source_1l00173"/>00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00174"/>00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;element.vTempPotential&#32;=&#32;(element.ValueWithoutLink&#32;-&#32;((mode&#32;==&#32;2)&#32;?&#32;0&#32;:&#32;7))&#32;*&#32;5;
<anchor xml:id="__element_container_8cs_source_1l00175"/>00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00176"/>00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00177"/>00177 &#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00178"/>00178 
<anchor xml:id="__element_container_8cs_source_1l00179"/>00179 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x0600183D&#32;RID:&#32;6205&#32;RVA:&#32;0x0009D1B4&#32;File&#32;Offset:&#32;0x0009B3B4</emphasis>
<anchor xml:id="__element_container_8cs_source_1l00180"/>00180 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;Value(<emphasis role="keywordtype">int</emphasis>&#32;ele)
<anchor xml:id="__element_container_8cs_source_1l00181"/>00181 &#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00182"/>00182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_element">Element</link>&#32;element&#32;=&#32;this.GetElement(ele);
<anchor xml:id="__element_container_8cs_source_1l00183"/>00183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(element&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__element_container_8cs_source_1l00184"/>00184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00185"/>00185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;element.Value;
<anchor xml:id="__element_container_8cs_source_1l00186"/>00186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00187"/>00187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_e_class">EClass</link>.core.game&#32;==&#32;<emphasis role="keyword">null</emphasis>&#32;||&#32;<emphasis role="keyword">this</emphasis>.Card&#32;==&#32;<emphasis role="keyword">null</emphasis>&#32;||&#32;!<emphasis role="keyword">this</emphasis>.Card.IsPCFactionOrMinion)
<anchor xml:id="__element_container_8cs_source_1l00188"/>00188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00189"/>00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="__element_container_8cs_source_1l00190"/>00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00191"/>00191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ele&#32;!=&#32;78)
<anchor xml:id="__element_container_8cs_source_1l00192"/>00192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00193"/>00193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_e_class">EClass</link>.pc.faction.charaElements.Value(ele);
<anchor xml:id="__element_container_8cs_source_1l00194"/>00194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00195"/>00195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this.GetOrCreateElement(ele).Value;
<anchor xml:id="__element_container_8cs_source_1l00196"/>00196 &#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00197"/>00197 
<anchor xml:id="__element_container_8cs_source_1l00198"/>00198 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x0600183E&#32;RID:&#32;6206&#32;RVA:&#32;0x0009D21C&#32;File&#32;Offset:&#32;0x0009B41C</emphasis>
<anchor xml:id="__element_container_8cs_source_1l00199"/>00199 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;ValueBonus(<link linkend="_class_element">Element</link>&#32;e)
<anchor xml:id="__element_container_8cs_source_1l00200"/>00200 &#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00201"/>00201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="__element_container_8cs_source_1l00202"/>00202 &#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00203"/>00203 
<anchor xml:id="__element_container_8cs_source_1l00204"/>00204 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x0600183F&#32;RID:&#32;6207&#32;RVA:&#32;0x0009D21F&#32;File&#32;Offset:&#32;0x0009B41F</emphasis>
<anchor xml:id="__element_container_8cs_source_1l00205"/>00205 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;ValueWithoutLink(<emphasis role="keywordtype">int</emphasis>&#32;ele)
<anchor xml:id="__element_container_8cs_source_1l00206"/>00206 &#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00207"/>00207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_element">Element</link>&#32;element&#32;=&#32;this.GetElement(ele);
<anchor xml:id="__element_container_8cs_source_1l00208"/>00208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(element&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__element_container_8cs_source_1l00209"/>00209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00210"/>00210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="__element_container_8cs_source_1l00211"/>00211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00212"/>00212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;element.ValueWithoutLink;
<anchor xml:id="__element_container_8cs_source_1l00213"/>00213 &#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00214"/>00214 
<anchor xml:id="__element_container_8cs_source_1l00215"/>00215 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06001840&#32;RID:&#32;6208&#32;RVA:&#32;0x0009D233&#32;File&#32;Offset:&#32;0x0009B433</emphasis>
<anchor xml:id="__element_container_8cs_source_1l00216"/>00216 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;ValueWithoutLink(<emphasis role="keywordtype">string</emphasis>&#32;alias)
<anchor xml:id="__element_container_8cs_source_1l00217"/>00217 &#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00218"/>00218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_element">Element</link>&#32;element&#32;=&#32;this.GetElement(alias);
<anchor xml:id="__element_container_8cs_source_1l00219"/>00219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(element&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__element_container_8cs_source_1l00220"/>00220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00221"/>00221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="__element_container_8cs_source_1l00222"/>00222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00223"/>00223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;element.ValueWithoutLink;
<anchor xml:id="__element_container_8cs_source_1l00224"/>00224 &#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00225"/>00225 
<anchor xml:id="__element_container_8cs_source_1l00226"/>00226 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06001841&#32;RID:&#32;6209&#32;RVA:&#32;0x0009D248&#32;File&#32;Offset:&#32;0x0009B448</emphasis>
<anchor xml:id="__element_container_8cs_source_1l00227"/>00227 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;GetFeatRef(<emphasis role="keywordtype">int</emphasis>&#32;ele,&#32;<emphasis role="keywordtype">int</emphasis>&#32;idx&#32;=&#32;0)
<anchor xml:id="__element_container_8cs_source_1l00228"/>00228 &#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00229"/>00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_feat">Feat</link>&#32;feat&#32;=&#32;this.GetElement(ele)&#32;as&#32;<link linkend="_class_feat">Feat</link>;
<anchor xml:id="__element_container_8cs_source_1l00230"/>00230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(feat&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__element_container_8cs_source_1l00231"/>00231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00232"/>00232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="__element_container_8cs_source_1l00233"/>00233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00234"/>00234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;feat.Apply(feat.Value,&#32;<emphasis role="keyword">this</emphasis>,&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__element_container_8cs_source_1l00235"/>00235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_feat">Feat</link>.featRef[idx].ToInt();
<anchor xml:id="__element_container_8cs_source_1l00236"/>00236 &#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00237"/>00237 
<anchor xml:id="__element_container_8cs_source_1l00238"/>00238 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06001842&#32;RID:&#32;6210&#32;RVA:&#32;0x0009D282&#32;File&#32;Offset:&#32;0x0009B482</emphasis>
<anchor xml:id="__element_container_8cs_source_1l00239"/>00239 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;Exp(<emphasis role="keywordtype">int</emphasis>&#32;ele)
<anchor xml:id="__element_container_8cs_source_1l00240"/>00240 &#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00241"/>00241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_element">Element</link>&#32;element&#32;=&#32;this.GetElement(ele);
<anchor xml:id="__element_container_8cs_source_1l00242"/>00242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(element&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__element_container_8cs_source_1l00243"/>00243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00244"/>00244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="__element_container_8cs_source_1l00245"/>00245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00246"/>00246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;element.vExp;
<anchor xml:id="__element_container_8cs_source_1l00247"/>00247 &#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00248"/>00248 
<anchor xml:id="__element_container_8cs_source_1l00249"/>00249 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06001843&#32;RID:&#32;6211&#32;RVA:&#32;0x0009D296&#32;File&#32;Offset:&#32;0x0009B496</emphasis>
<anchor xml:id="__element_container_8cs_source_1l00250"/>00250 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;Has(<emphasis role="keywordtype">int</emphasis>&#32;ele)
<anchor xml:id="__element_container_8cs_source_1l00251"/>00251 &#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00252"/>00252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_element">Element</link>&#32;element&#32;=&#32;this.GetElement(ele);
<anchor xml:id="__element_container_8cs_source_1l00253"/>00253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;element&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;element.Value&#32;&gt;&#32;0;
<anchor xml:id="__element_container_8cs_source_1l00254"/>00254 &#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00255"/>00255 
<anchor xml:id="__element_container_8cs_source_1l00256"/>00256 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06001844&#32;RID:&#32;6212&#32;RVA:&#32;0x0009D2AD&#32;File&#32;Offset:&#32;0x0009B4AD</emphasis>
<anchor xml:id="__element_container_8cs_source_1l00257"/>00257 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;Has(<link linkend="_class_source_element">SourceElement</link>.<link linkend="_class_source_element_1_1_row">Row</link>&#32;row)
<anchor xml:id="__element_container_8cs_source_1l00258"/>00258 &#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00259"/>00259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this.Has(row.id);
<anchor xml:id="__element_container_8cs_source_1l00260"/>00260 &#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00261"/>00261 
<anchor xml:id="__element_container_8cs_source_1l00262"/>00262 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06001845&#32;RID:&#32;6213&#32;RVA:&#32;0x0009D2BB&#32;File&#32;Offset:&#32;0x0009B4BB</emphasis>
<anchor xml:id="__element_container_8cs_source_1l00263"/>00263 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;Has(<emphasis role="keywordtype">string</emphasis>&#32;alias)
<anchor xml:id="__element_container_8cs_source_1l00264"/>00264 &#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00265"/>00265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this.Has(<link linkend="_class_e_class">EClass</link>.sources.elements.alias[alias].id);
<anchor xml:id="__element_container_8cs_source_1l00266"/>00266 &#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00267"/>00267 
<anchor xml:id="__element_container_8cs_source_1l00268"/>00268 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06001846&#32;RID:&#32;6214&#32;RVA:&#32;0x0009D2E0&#32;File&#32;Offset:&#32;0x0009B4E0</emphasis>
<anchor xml:id="__element_container_8cs_source_1l00269"/>00269 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;HasBase(<emphasis role="keywordtype">int</emphasis>&#32;ele)
<anchor xml:id="__element_container_8cs_source_1l00270"/>00270 &#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00271"/>00271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_element">Element</link>&#32;element&#32;=&#32;this.GetElement(ele);
<anchor xml:id="__element_container_8cs_source_1l00272"/>00272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(element&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__element_container_8cs_source_1l00273"/>00273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00274"/>00274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__element_container_8cs_source_1l00275"/>00275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00276"/>00276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;num&#32;=&#32;element.ValueWithoutLink;
<anchor xml:id="__element_container_8cs_source_1l00277"/>00277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ele&#32;!=&#32;300)
<anchor xml:id="__element_container_8cs_source_1l00278"/>00278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00279"/>00279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ele&#32;==&#32;307)
<anchor xml:id="__element_container_8cs_source_1l00280"/>00280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00281"/>00281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num&#32;+=&#32;this.Value(1524)&#32;*&#32;-4;
<anchor xml:id="__element_container_8cs_source_1l00282"/>00282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num&#32;+=&#32;this.Value(1525)&#32;*&#32;4;
<anchor xml:id="__element_container_8cs_source_1l00283"/>00283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00284"/>00284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00285"/>00285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__element_container_8cs_source_1l00286"/>00286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00287"/>00287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num&#32;+=&#32;this.Value(1516)&#32;*&#32;-4;
<anchor xml:id="__element_container_8cs_source_1l00288"/>00288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num&#32;+=&#32;this.Value(1517)&#32;*&#32;4;
<anchor xml:id="__element_container_8cs_source_1l00289"/>00289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00290"/>00290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;num&#32;!=&#32;0;
<anchor xml:id="__element_container_8cs_source_1l00291"/>00291 &#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00292"/>00292 
<anchor xml:id="__element_container_8cs_source_1l00293"/>00293 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06001847&#32;RID:&#32;6215&#32;RVA:&#32;0x0009D35B&#32;File&#32;Offset:&#32;0x0009B55B</emphasis>
<anchor xml:id="__element_container_8cs_source_1l00294"/>00294 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;Base(<emphasis role="keywordtype">int</emphasis>&#32;ele)
<anchor xml:id="__element_container_8cs_source_1l00295"/>00295 &#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00296"/>00296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_element">Element</link>&#32;element&#32;=&#32;this.GetElement(ele);
<anchor xml:id="__element_container_8cs_source_1l00297"/>00297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(element&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__element_container_8cs_source_1l00298"/>00298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00299"/>00299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="__element_container_8cs_source_1l00300"/>00300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00301"/>00301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;element.ValueWithoutLink;
<anchor xml:id="__element_container_8cs_source_1l00302"/>00302 &#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00303"/>00303 
<anchor xml:id="__element_container_8cs_source_1l00304"/>00304 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06001848&#32;RID:&#32;6216&#32;RVA:&#32;0x0009D36F&#32;File&#32;Offset:&#32;0x0009B56F</emphasis>
<anchor xml:id="__element_container_8cs_source_1l00305"/>00305 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Learn(<emphasis role="keywordtype">int</emphasis>&#32;ele,&#32;<emphasis role="keywordtype">int</emphasis>&#32;v&#32;=&#32;1)
<anchor xml:id="__element_container_8cs_source_1l00306"/>00306 &#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00307"/>00307 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.ModBase(ele,&#32;v);
<anchor xml:id="__element_container_8cs_source_1l00308"/>00308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.OnLearn(ele);
<anchor xml:id="__element_container_8cs_source_1l00309"/>00309 &#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00310"/>00310 
<anchor xml:id="__element_container_8cs_source_1l00311"/>00311 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06001849&#32;RID:&#32;6217&#32;RVA:&#32;0x0009D381&#32;File&#32;Offset:&#32;0x0009B581</emphasis>
<anchor xml:id="__element_container_8cs_source_1l00312"/>00312 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Train(<emphasis role="keywordtype">int</emphasis>&#32;ele,&#32;<emphasis role="keywordtype">int</emphasis>&#32;a&#32;=&#32;10)
<anchor xml:id="__element_container_8cs_source_1l00313"/>00313 &#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00314"/>00314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.OnTrain(ele);
<anchor xml:id="__element_container_8cs_source_1l00315"/>00315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.ModTempPotential(ele,&#32;a,&#32;0);
<anchor xml:id="__element_container_8cs_source_1l00316"/>00316 &#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00317"/>00317 
<anchor xml:id="__element_container_8cs_source_1l00318"/>00318 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x0600184A&#32;RID:&#32;6218&#32;RVA:&#32;0x0009D394&#32;File&#32;Offset:&#32;0x0009B594</emphasis>
<anchor xml:id="__element_container_8cs_source_1l00319"/>00319 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;ModExp(<emphasis role="keywordtype">int</emphasis>&#32;ele,&#32;<emphasis role="keywordtype">int</emphasis>&#32;a,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;chain&#32;=&#32;<emphasis role="keyword">false</emphasis>)
<anchor xml:id="__element_container_8cs_source_1l00320"/>00320 &#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00321"/>00321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.<link linkend="_class_card">Card</link>&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;this.<link linkend="_class_card">Card</link>.isChara&#32;&amp;&amp;&#32;<emphasis role="keyword">this</emphasis>.Card.Chara.isDead)
<anchor xml:id="__element_container_8cs_source_1l00322"/>00322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00323"/>00323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__element_container_8cs_source_1l00324"/>00324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00325"/>00325 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(a&#32;==&#32;0)
<anchor xml:id="__element_container_8cs_source_1l00326"/>00326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00327"/>00327 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__element_container_8cs_source_1l00328"/>00328 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00329"/>00329 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_element">Element</link>&#32;element&#32;=&#32;this.GetElement(ele);
<anchor xml:id="__element_container_8cs_source_1l00330"/>00330 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(element&#32;==&#32;<emphasis role="keyword">null</emphasis>&#32;||&#32;!element.CanGainExp)
<anchor xml:id="__element_container_8cs_source_1l00331"/>00331 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00332"/>00332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__element_container_8cs_source_1l00333"/>00333 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00334"/>00334 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;value&#32;=&#32;element.UsePotential&#32;?&#32;element.Potential&#32;:&#32;100;
<anchor xml:id="__element_container_8cs_source_1l00335"/>00335 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(element.UseExpMod)
<anchor xml:id="__element_container_8cs_source_1l00336"/>00336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00337"/>00337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;a&#32;=&#32;a&#32;*&#32;Mathf.Clamp(value,&#32;10,&#32;1000)&#32;/&#32;(100&#32;+&#32;Mathf.Max(0,&#32;element.ValueWithoutLink)&#32;*&#32;25);
<anchor xml:id="__element_container_8cs_source_1l00338"/>00338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(a&#32;&gt;=&#32;0&#32;&amp;&amp;&#32;<link linkend="_class_e_class">EClass</link>.rnd(element.ValueWithoutLink&#32;+&#32;1)&#32;&lt;&#32;10)
<anchor xml:id="__element_container_8cs_source_1l00339"/>00339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00340"/>00340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;a++;
<anchor xml:id="__element_container_8cs_source_1l00341"/>00341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00342"/>00342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00343"/>00343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;element.vExp&#32;+=&#32;a;
<anchor xml:id="__element_container_8cs_source_1l00344"/>00344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!chain&#32;&amp;&amp;&#32;element.source.parentFactor&#32;&gt;&#32;0f&#32;&amp;&amp;&#32;<emphasis role="keyword">this</emphasis>.Card&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;!element.source.aliasParent.IsEmpty())
<anchor xml:id="__element_container_8cs_source_1l00345"/>00345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00346"/>00346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_element">Element</link>&#32;element2&#32;=&#32;element.GetParent(this.<link linkend="_class_card">Card</link>);
<anchor xml:id="__element_container_8cs_source_1l00347"/>00347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(element2.CanGainExp)
<anchor xml:id="__element_container_8cs_source_1l00348"/>00348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00349"/>00349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.ModExp(element2.id,&#32;(<emphasis role="keywordtype">int</emphasis>)Math.Max(1f,&#32;(<emphasis role="keywordtype">float</emphasis>)a&#32;*&#32;element.source.parentFactor&#32;/&#32;100f),&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__element_container_8cs_source_1l00350"/>00350 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00351"/>00351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00352"/>00352 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(element.vExp&#32;&gt;=&#32;element.ExpToNext)
<anchor xml:id="__element_container_8cs_source_1l00353"/>00353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00354"/>00354 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;num&#32;=&#32;element.vExp&#32;-&#32;element.ExpToNext;
<anchor xml:id="__element_container_8cs_source_1l00355"/>00355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;vBase&#32;=&#32;element.vBase;
<anchor xml:id="__element_container_8cs_source_1l00356"/>00356 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.ModBase(ele,&#32;1);
<anchor xml:id="__element_container_8cs_source_1l00357"/>00357 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.OnLevelUp(element,&#32;vBase);
<anchor xml:id="__element_container_8cs_source_1l00358"/>00358 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;element.vExp&#32;=&#32;Mathf.Clamp(num&#32;/&#32;2,&#32;0,&#32;element.ExpToNext&#32;/&#32;2);
<anchor xml:id="__element_container_8cs_source_1l00359"/>00359 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(element.vTempPotential&#32;&gt;&#32;0)
<anchor xml:id="__element_container_8cs_source_1l00360"/>00360 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00361"/>00361 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;element.vTempPotential&#32;-=&#32;element.vTempPotential&#32;/&#32;4&#32;+&#32;<link linkend="_class_e_class">EClass</link>.rnd(5)&#32;+&#32;5;
<anchor xml:id="__element_container_8cs_source_1l00362"/>00362 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(element.vTempPotential&#32;&lt;&#32;0)
<anchor xml:id="__element_container_8cs_source_1l00363"/>00363 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00364"/>00364 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;element.vTempPotential&#32;=&#32;0;
<anchor xml:id="__element_container_8cs_source_1l00365"/>00365 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__element_container_8cs_source_1l00366"/>00366 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00367"/>00367 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00368"/>00368 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(element.vTempPotential&#32;&lt;&#32;0)
<anchor xml:id="__element_container_8cs_source_1l00369"/>00369 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00370"/>00370 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;element.vTempPotential&#32;+=&#32;-element.vTempPotential&#32;/&#32;4&#32;+&#32;<link linkend="_class_e_class">EClass</link>.rnd(5)&#32;+&#32;5;
<anchor xml:id="__element_container_8cs_source_1l00371"/>00371 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(element.vTempPotential&#32;&gt;&#32;0)
<anchor xml:id="__element_container_8cs_source_1l00372"/>00372 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00373"/>00373 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;element.vTempPotential&#32;=&#32;0;
<anchor xml:id="__element_container_8cs_source_1l00374"/>00374 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__element_container_8cs_source_1l00375"/>00375 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00376"/>00376 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00377"/>00377 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00378"/>00378 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(element.vExp&#32;&lt;&#32;0)
<anchor xml:id="__element_container_8cs_source_1l00379"/>00379 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00380"/>00380 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(element.ValueWithoutLink&#32;&lt;=&#32;1)
<anchor xml:id="__element_container_8cs_source_1l00381"/>00381 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00382"/>00382 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;element.vExp&#32;=&#32;0;
<anchor xml:id="__element_container_8cs_source_1l00383"/>00383 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__element_container_8cs_source_1l00384"/>00384 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00385"/>00385 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;vBase2&#32;=&#32;element.vBase;
<anchor xml:id="__element_container_8cs_source_1l00386"/>00386 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.ModBase(ele,&#32;-1);
<anchor xml:id="__element_container_8cs_source_1l00387"/>00387 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.OnLevelDown(element,&#32;vBase2);
<anchor xml:id="__element_container_8cs_source_1l00388"/>00388 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;element.vExp&#32;=&#32;Mathf.Max(element.ExpToNext&#32;/&#32;2,&#32;element.ExpToNext&#32;+&#32;element.vExp);
<anchor xml:id="__element_container_8cs_source_1l00389"/>00389 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00390"/>00390 &#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00391"/>00391 
<anchor xml:id="__element_container_8cs_source_1l00392"/>00392 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x0600184B&#32;RID:&#32;6219&#32;RVA:&#32;0x0009D5D3&#32;File&#32;Offset:&#32;0x0009B7D3</emphasis>
<anchor xml:id="__element_container_8cs_source_1l00393"/>00393 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnLearn(<emphasis role="keywordtype">int</emphasis>&#32;ele)
<anchor xml:id="__element_container_8cs_source_1l00394"/>00394 &#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00395"/>00395 &#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00396"/>00396 
<anchor xml:id="__element_container_8cs_source_1l00397"/>00397 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x0600184C&#32;RID:&#32;6220&#32;RVA:&#32;0x0009D5D5&#32;File&#32;Offset:&#32;0x0009B7D5</emphasis>
<anchor xml:id="__element_container_8cs_source_1l00398"/>00398 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnTrain(<emphasis role="keywordtype">int</emphasis>&#32;ele)
<anchor xml:id="__element_container_8cs_source_1l00399"/>00399 &#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00400"/>00400 &#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00401"/>00401 
<anchor xml:id="__element_container_8cs_source_1l00402"/>00402 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x0600184D&#32;RID:&#32;6221&#32;RVA:&#32;0x0009D5D7&#32;File&#32;Offset:&#32;0x0009B7D7</emphasis>
<anchor xml:id="__element_container_8cs_source_1l00403"/>00403 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnLevelUp(<link linkend="_class_element">Element</link>&#32;e,&#32;<emphasis role="keywordtype">int</emphasis>&#32;lastValue)
<anchor xml:id="__element_container_8cs_source_1l00404"/>00404 &#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00405"/>00405 &#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00406"/>00406 
<anchor xml:id="__element_container_8cs_source_1l00407"/>00407 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x0600184E&#32;RID:&#32;6222&#32;RVA:&#32;0x0009D5D9&#32;File&#32;Offset:&#32;0x0009B7D9</emphasis>
<anchor xml:id="__element_container_8cs_source_1l00408"/>00408 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnLevelDown(<link linkend="_class_element">Element</link>&#32;e,&#32;<emphasis role="keywordtype">int</emphasis>&#32;lastValue)
<anchor xml:id="__element_container_8cs_source_1l00409"/>00409 &#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00410"/>00410 &#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00411"/>00411 
<anchor xml:id="__element_container_8cs_source_1l00412"/>00412 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x0600184F&#32;RID:&#32;6223&#32;RVA:&#32;0x0009D5DB&#32;File&#32;Offset:&#32;0x0009B7DB</emphasis>
<anchor xml:id="__element_container_8cs_source_1l00413"/>00413 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_element">Element</link>&#32;SetBase(<emphasis role="keywordtype">string</emphasis>&#32;alias,&#32;<emphasis role="keywordtype">int</emphasis>&#32;v,&#32;<emphasis role="keywordtype">int</emphasis>&#32;potential&#32;=&#32;0)
<anchor xml:id="__element_container_8cs_source_1l00414"/>00414 &#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00415"/>00415 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this.SetBase(<link linkend="_class_e_class">EClass</link>.sources.elements.alias[alias].id,&#32;v,&#32;potential);
<anchor xml:id="__element_container_8cs_source_1l00416"/>00416 &#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00417"/>00417 
<anchor xml:id="__element_container_8cs_source_1l00418"/>00418 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06001850&#32;RID:&#32;6224&#32;RVA:&#32;0x0009D600&#32;File&#32;Offset:&#32;0x0009B800</emphasis>
<anchor xml:id="__element_container_8cs_source_1l00419"/>00419 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_element">Element</link>&#32;SetBase(<emphasis role="keywordtype">int</emphasis>&#32;<emphasis role="keywordtype">id</emphasis>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;v,&#32;<emphasis role="keywordtype">int</emphasis>&#32;potential&#32;=&#32;0)
<anchor xml:id="__element_container_8cs_source_1l00420"/>00420 &#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00421"/>00421 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_element">Element</link>&#32;orCreateElement&#32;=&#32;this.GetOrCreateElement(<emphasis role="keywordtype">id</emphasis>);
<anchor xml:id="__element_container_8cs_source_1l00422"/>00422 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.parent&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;orCreateElement.CanLink(<emphasis role="keyword">this</emphasis>))
<anchor xml:id="__element_container_8cs_source_1l00423"/>00423 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00424"/>00424 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.parent.ModLink(<emphasis role="keywordtype">id</emphasis>,&#32;-orCreateElement.vBase&#32;+&#32;v);
<anchor xml:id="__element_container_8cs_source_1l00425"/>00425 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00426"/>00426 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;orCreateElement.vBase&#32;=&#32;v;
<anchor xml:id="__element_container_8cs_source_1l00427"/>00427 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;orCreateElement.vExp&#32;=&#32;0;
<anchor xml:id="__element_container_8cs_source_1l00428"/>00428 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;orCreateElement.vPotential&#32;=&#32;potential;
<anchor xml:id="__element_container_8cs_source_1l00429"/>00429 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;orCreateElement.OnChangeValue();
<anchor xml:id="__element_container_8cs_source_1l00430"/>00430 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(orCreateElement.vBase&#32;==&#32;0&#32;&amp;&amp;&#32;orCreateElement.vSource&#32;==&#32;0&#32;&amp;&amp;&#32;orCreateElement.vLink&#32;==&#32;0&#32;&amp;&amp;&#32;orCreateElement.vPotential&#32;==&#32;0&#32;&amp;&amp;&#32;orCreateElement.vExp&#32;==&#32;0)
<anchor xml:id="__element_container_8cs_source_1l00431"/>00431 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00432"/>00432 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.Remove(orCreateElement.id);
<anchor xml:id="__element_container_8cs_source_1l00433"/>00433 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00434"/>00434 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;orCreateElement;
<anchor xml:id="__element_container_8cs_source_1l00435"/>00435 &#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00436"/>00436 
<anchor xml:id="__element_container_8cs_source_1l00437"/>00437 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06001851&#32;RID:&#32;6225&#32;RVA:&#32;0x0009D68C&#32;File&#32;Offset:&#32;0x0009B88C</emphasis>
<anchor xml:id="__element_container_8cs_source_1l00438"/>00438 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;SetTo(<emphasis role="keywordtype">int</emphasis>&#32;<emphasis role="keywordtype">id</emphasis>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;v)
<anchor xml:id="__element_container_8cs_source_1l00439"/>00439 &#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00440"/>00440 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_element">Element</link>&#32;orCreateElement&#32;=&#32;this.GetOrCreateElement(<emphasis role="keywordtype">id</emphasis>);
<anchor xml:id="__element_container_8cs_source_1l00441"/>00441 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;num&#32;=&#32;v&#32;-&#32;(orCreateElement.vBase&#32;+&#32;orCreateElement.vSource);
<anchor xml:id="__element_container_8cs_source_1l00442"/>00442 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(num&#32;!=&#32;0)
<anchor xml:id="__element_container_8cs_source_1l00443"/>00443 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00444"/>00444 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.ModBase(<emphasis role="keywordtype">id</emphasis>,&#32;num);
<anchor xml:id="__element_container_8cs_source_1l00445"/>00445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00446"/>00446 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(orCreateElement.vBase&#32;==&#32;0&#32;&amp;&amp;&#32;orCreateElement.vSource&#32;==&#32;0&#32;&amp;&amp;&#32;orCreateElement.vLink&#32;==&#32;0&#32;&amp;&amp;&#32;orCreateElement.vPotential&#32;==&#32;0&#32;&amp;&amp;&#32;orCreateElement.vExp&#32;==&#32;0)
<anchor xml:id="__element_container_8cs_source_1l00447"/>00447 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00448"/>00448 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.Remove(orCreateElement.id);
<anchor xml:id="__element_container_8cs_source_1l00449"/>00449 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00450"/>00450 &#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00451"/>00451 
<anchor xml:id="__element_container_8cs_source_1l00452"/>00452 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06001852&#32;RID:&#32;6226&#32;RVA:&#32;0x0009D6F4&#32;File&#32;Offset:&#32;0x0009B8F4</emphasis>
<anchor xml:id="__element_container_8cs_source_1l00453"/>00453 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Remove(<emphasis role="keywordtype">int</emphasis>&#32;<emphasis role="keywordtype">id</emphasis>)
<anchor xml:id="__element_container_8cs_source_1l00454"/>00454 &#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00455"/>00455 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_element">Element</link>&#32;element&#32;=&#32;this.GetElement(<emphasis role="keywordtype">id</emphasis>);
<anchor xml:id="__element_container_8cs_source_1l00456"/>00456 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(element&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__element_container_8cs_source_1l00457"/>00457 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00458"/>00458 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__element_container_8cs_source_1l00459"/>00459 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00460"/>00460 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.parent&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;element.CanLink(<emphasis role="keyword">this</emphasis>))
<anchor xml:id="__element_container_8cs_source_1l00461"/>00461 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00462"/>00462 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.parent.ModLink(<emphasis role="keywordtype">id</emphasis>,&#32;-element.Value);
<anchor xml:id="__element_container_8cs_source_1l00463"/>00463 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00464"/>00464 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.dict.Remove(<emphasis role="keywordtype">id</emphasis>);
<anchor xml:id="__element_container_8cs_source_1l00465"/>00465 &#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00466"/>00466 
<anchor xml:id="__element_container_8cs_source_1l00467"/>00467 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06001853&#32;RID:&#32;6227&#32;RVA:&#32;0x0009D740&#32;File&#32;Offset:&#32;0x0009B940</emphasis>
<anchor xml:id="__element_container_8cs_source_1l00468"/>00468 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_element">Element</link>&#32;ModBase(<emphasis role="keywordtype">int</emphasis>&#32;ele,&#32;<emphasis role="keywordtype">int</emphasis>&#32;v)
<anchor xml:id="__element_container_8cs_source_1l00469"/>00469 &#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00470"/>00470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_element">Element</link>&#32;orCreateElement&#32;=&#32;this.GetOrCreateElement(ele);
<anchor xml:id="__element_container_8cs_source_1l00471"/>00471 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;orCreateElement.vBase&#32;+=&#32;v;
<anchor xml:id="__element_container_8cs_source_1l00472"/>00472 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.parent&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;orCreateElement.CanLink(<emphasis role="keyword">this</emphasis>))
<anchor xml:id="__element_container_8cs_source_1l00473"/>00473 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00474"/>00474 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.parent.ModLink(ele,&#32;v);
<anchor xml:id="__element_container_8cs_source_1l00475"/>00475 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00476"/>00476 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;orCreateElement.CheckLevelBonus(<emphasis role="keyword">this</emphasis>,&#32;<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__element_container_8cs_source_1l00477"/>00477 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;orCreateElement.OnChangeValue();
<anchor xml:id="__element_container_8cs_source_1l00478"/>00478 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(orCreateElement.vBase&#32;==&#32;0&#32;&amp;&amp;&#32;orCreateElement.vSource&#32;==&#32;0&#32;&amp;&amp;&#32;orCreateElement.vLink&#32;==&#32;0&#32;&amp;&amp;&#32;orCreateElement.vPotential&#32;==&#32;0&#32;&amp;&amp;&#32;orCreateElement.vExp&#32;==&#32;0)
<anchor xml:id="__element_container_8cs_source_1l00479"/>00479 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00480"/>00480 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.Remove(orCreateElement.id);
<anchor xml:id="__element_container_8cs_source_1l00481"/>00481 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00482"/>00482 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;orCreateElement;
<anchor xml:id="__element_container_8cs_source_1l00483"/>00483 &#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00484"/>00484 
<anchor xml:id="__element_container_8cs_source_1l00485"/>00485 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06001854&#32;RID:&#32;6228&#32;RVA:&#32;0x0009D7C5&#32;File&#32;Offset:&#32;0x0009B9C5</emphasis>
<anchor xml:id="__element_container_8cs_source_1l00486"/>00486 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnChangeValue()
<anchor xml:id="__element_container_8cs_source_1l00487"/>00487 &#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00488"/>00488 &#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00489"/>00489 
<anchor xml:id="__element_container_8cs_source_1l00490"/>00490 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06001855&#32;RID:&#32;6229&#32;RVA:&#32;0x0009D7C8&#32;File&#32;Offset:&#32;0x0009B9C8</emphasis>
<anchor xml:id="__element_container_8cs_source_1l00491"/>00491 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_element">Element</link>&#32;ModPotential(<emphasis role="keywordtype">int</emphasis>&#32;ele,&#32;<emphasis role="keywordtype">int</emphasis>&#32;v)
<anchor xml:id="__element_container_8cs_source_1l00492"/>00492 &#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00493"/>00493 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_element">Element</link>&#32;orCreateElement&#32;=&#32;this.GetOrCreateElement(ele);
<anchor xml:id="__element_container_8cs_source_1l00494"/>00494 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;orCreateElement.vPotential&#32;+=&#32;v;
<anchor xml:id="__element_container_8cs_source_1l00495"/>00495 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(orCreateElement.vPotential&#32;&gt;&#32;1000)
<anchor xml:id="__element_container_8cs_source_1l00496"/>00496 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00497"/>00497 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;orCreateElement.vPotential&#32;=&#32;1000;
<anchor xml:id="__element_container_8cs_source_1l00498"/>00498 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00499"/>00499 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;orCreateElement;
<anchor xml:id="__element_container_8cs_source_1l00500"/>00500 &#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00501"/>00501 
<anchor xml:id="__element_container_8cs_source_1l00502"/>00502 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06001856&#32;RID:&#32;6230&#32;RVA:&#32;0x0009D804&#32;File&#32;Offset:&#32;0x0009BA04</emphasis>
<anchor xml:id="__element_container_8cs_source_1l00503"/>00503 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_element">Element</link>&#32;ModTempPotential(<emphasis role="keywordtype">int</emphasis>&#32;ele,&#32;<emphasis role="keywordtype">int</emphasis>&#32;v,&#32;<emphasis role="keywordtype">int</emphasis>&#32;threshMsg&#32;=&#32;0)
<anchor xml:id="__element_container_8cs_source_1l00504"/>00504 &#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00505"/>00505 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_element">Element</link>&#32;orCreateElement&#32;=&#32;this.GetOrCreateElement(ele);
<anchor xml:id="__element_container_8cs_source_1l00506"/>00506 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;orCreateElement.vTempPotential&#32;+=&#32;v;
<anchor xml:id="__element_container_8cs_source_1l00507"/>00507 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(orCreateElement.vTempPotential&#32;&gt;&#32;1000)
<anchor xml:id="__element_container_8cs_source_1l00508"/>00508 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00509"/>00509 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;orCreateElement.vTempPotential&#32;=&#32;1000;
<anchor xml:id="__element_container_8cs_source_1l00510"/>00510 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00511"/>00511 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.OnModTempPotential(orCreateElement,&#32;v,&#32;threshMsg);
<anchor xml:id="__element_container_8cs_source_1l00512"/>00512 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;orCreateElement;
<anchor xml:id="__element_container_8cs_source_1l00513"/>00513 &#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00514"/>00514 
<anchor xml:id="__element_container_8cs_source_1l00515"/>00515 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06001857&#32;RID:&#32;6231&#32;RVA:&#32;0x0009D849&#32;File&#32;Offset:&#32;0x0009BA49</emphasis>
<anchor xml:id="__element_container_8cs_source_1l00516"/>00516 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnModTempPotential(<link linkend="_class_element">Element</link>&#32;e,&#32;<emphasis role="keywordtype">int</emphasis>&#32;v,&#32;<emphasis role="keywordtype">int</emphasis>&#32;threshMsg)
<anchor xml:id="__element_container_8cs_source_1l00517"/>00517 &#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00518"/>00518 &#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00519"/>00519 
<anchor xml:id="__element_container_8cs_source_1l00520"/>00520 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06001858&#32;RID:&#32;6232&#32;RVA:&#32;0x0009D84C&#32;File&#32;Offset:&#32;0x0009BA4C</emphasis>
<anchor xml:id="__element_container_8cs_source_1l00521"/>00521 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<link linkend="_class_element">Element</link>&#32;ModLink(<emphasis role="keywordtype">int</emphasis>&#32;<emphasis role="keywordtype">id</emphasis>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;v)
<anchor xml:id="__element_container_8cs_source_1l00522"/>00522 &#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00523"/>00523 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_element">Element</link>&#32;orCreateElement&#32;=&#32;this.GetOrCreateElement(<emphasis role="keywordtype">id</emphasis>);
<anchor xml:id="__element_container_8cs_source_1l00524"/>00524 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;orCreateElement.vLink&#32;+=&#32;v;
<anchor xml:id="__element_container_8cs_source_1l00525"/>00525 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;orCreateElement.OnChangeValue();
<anchor xml:id="__element_container_8cs_source_1l00526"/>00526 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.parent&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;orCreateElement.CanLink(<emphasis role="keyword">this</emphasis>))
<anchor xml:id="__element_container_8cs_source_1l00527"/>00527 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00528"/>00528 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.parent.ModLink(<emphasis role="keywordtype">id</emphasis>,&#32;v);
<anchor xml:id="__element_container_8cs_source_1l00529"/>00529 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00530"/>00530 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;orCreateElement;
<anchor xml:id="__element_container_8cs_source_1l00531"/>00531 &#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00532"/>00532 
<anchor xml:id="__element_container_8cs_source_1l00533"/>00533 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06001859&#32;RID:&#32;6233&#32;RVA:&#32;0x0009D898&#32;File&#32;Offset:&#32;0x0009BA98</emphasis>
<anchor xml:id="__element_container_8cs_source_1l00534"/>00534 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;GetSpellExp(<link linkend="_class_chara">Chara</link>&#32;c,&#32;<link linkend="_class_element">Element</link>&#32;e,&#32;<emphasis role="keywordtype">int</emphasis>&#32;costMod&#32;=&#32;100)
<anchor xml:id="__element_container_8cs_source_1l00535"/>00535 &#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00536"/>00536 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_act_1_1_cost">Act.Cost</link>&#32;cost&#32;=&#32;e.GetCost(c);
<anchor xml:id="__element_container_8cs_source_1l00537"/>00537 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;num&#32;=&#32;cost.cost&#32;*&#32;((cost.type&#32;==&#32;<link linkend="_class_act">Act</link>.CostType.SP)&#32;?&#32;20&#32;:&#32;5)&#32;*&#32;(100&#32;+&#32;c.Evalue(1208)&#32;*&#32;30)&#32;/&#32;100&#32;+&#32;10;
<anchor xml:id="__element_container_8cs_source_1l00538"/>00538 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num&#32;=&#32;num&#32;*&#32;costMod&#32;/&#32;100;
<anchor xml:id="__element_container_8cs_source_1l00539"/>00539 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!e.source.aliasParent.IsEmpty())
<anchor xml:id="__element_container_8cs_source_1l00540"/>00540 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00541"/>00541 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;num2&#32;=&#32;this.ValueWithoutLink(e.source.aliasParent)&#32;-&#32;this.ValueWithoutLink(e.source.id);
<anchor xml:id="__element_container_8cs_source_1l00542"/>00542 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(num2&#32;&gt;=&#32;0)
<anchor xml:id="__element_container_8cs_source_1l00543"/>00543 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00544"/>00544 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num&#32;=&#32;num&#32;*&#32;(100&#32;+&#32;num2&#32;*&#32;5)&#32;/&#32;100;
<anchor xml:id="__element_container_8cs_source_1l00545"/>00545 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00546"/>00546 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__element_container_8cs_source_1l00547"/>00547 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00548"/>00548 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num&#32;=&#32;num&#32;*&#32;100&#32;/&#32;(100&#32;-&#32;num2&#32;*&#32;25);
<anchor xml:id="__element_container_8cs_source_1l00549"/>00549 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00550"/>00550 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00551"/>00551 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(num&#32;&lt;&#32;0)
<anchor xml:id="__element_container_8cs_source_1l00552"/>00552 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00553"/>00553 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num&#32;=&#32;0;
<anchor xml:id="__element_container_8cs_source_1l00554"/>00554 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00555"/>00555 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;num;
<anchor xml:id="__element_container_8cs_source_1l00556"/>00556 &#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00557"/>00557 
<anchor xml:id="__element_container_8cs_source_1l00558"/>00558 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x0600185A&#32;RID:&#32;6234&#32;RVA:&#32;0x0009D93E&#32;File&#32;Offset:&#32;0x0009BB3E</emphasis>
<anchor xml:id="__element_container_8cs_source_1l00559"/>00559 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_element">Element</link>&#32;GetElement(<emphasis role="keywordtype">string</emphasis>&#32;alias)
<anchor xml:id="__element_container_8cs_source_1l00560"/>00560 &#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00561"/>00561 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this.GetElement(<link linkend="_class_e_class">EClass</link>.sources.elements.alias[alias].id);
<anchor xml:id="__element_container_8cs_source_1l00562"/>00562 &#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00563"/>00563 
<anchor xml:id="__element_container_8cs_source_1l00564"/>00564 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x0600185B&#32;RID:&#32;6235&#32;RVA:&#32;0x0009D960&#32;File&#32;Offset:&#32;0x0009BB60</emphasis>
<anchor xml:id="__element_container_8cs_source_1l00565"/>00565 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_element">Element</link>&#32;GetElement(<emphasis role="keywordtype">int</emphasis>&#32;<emphasis role="keywordtype">id</emphasis>)
<anchor xml:id="__element_container_8cs_source_1l00566"/>00566 &#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00567"/>00567 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this.dict.TryGetValue(<emphasis role="keywordtype">id</emphasis>,&#32;<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__element_container_8cs_source_1l00568"/>00568 &#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00569"/>00569 
<anchor xml:id="__element_container_8cs_source_1l00570"/>00570 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x0600185C&#32;RID:&#32;6236&#32;RVA:&#32;0x0009D970&#32;File&#32;Offset:&#32;0x0009BB70</emphasis>
<anchor xml:id="__element_container_8cs_source_1l00571"/>00571 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_element">Element</link>&#32;CreateElement(<emphasis role="keywordtype">int</emphasis>&#32;<emphasis role="keywordtype">id</emphasis>)
<anchor xml:id="__element_container_8cs_source_1l00572"/>00572 &#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00573"/>00573 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_element">Element</link>&#32;element&#32;=&#32;<link linkend="_class_element">Element</link>.Create(<emphasis role="keywordtype">id</emphasis>,&#32;0);
<anchor xml:id="__element_container_8cs_source_1l00574"/>00574 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(element&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__element_container_8cs_source_1l00575"/>00575 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00576"/>00576 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__element_container_8cs_source_1l00577"/>00577 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00578"/>00578 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;element.owner&#32;=&#32;<emphasis role="keyword">this</emphasis>;
<anchor xml:id="__element_container_8cs_source_1l00579"/>00579 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.dict.Add(<emphasis role="keywordtype">id</emphasis>,&#32;element);
<anchor xml:id="__element_container_8cs_source_1l00580"/>00580 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;element;
<anchor xml:id="__element_container_8cs_source_1l00581"/>00581 &#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00582"/>00582 
<anchor xml:id="__element_container_8cs_source_1l00583"/>00583 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x0600185D&#32;RID:&#32;6237&#32;RVA:&#32;0x0009D99F&#32;File&#32;Offset:&#32;0x0009BB9F</emphasis>
<anchor xml:id="__element_container_8cs_source_1l00584"/>00584 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_element">Element</link>&#32;GetOrCreateElement(<link linkend="_class_element">Element</link>&#32;ele)
<anchor xml:id="__element_container_8cs_source_1l00585"/>00585 &#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00586"/>00586 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this.GetOrCreateElement(ele.id);
<anchor xml:id="__element_container_8cs_source_1l00587"/>00587 &#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00588"/>00588 
<anchor xml:id="__element_container_8cs_source_1l00589"/>00589 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x0600185E&#32;RID:&#32;6238&#32;RVA:&#32;0x0009D9AD&#32;File&#32;Offset:&#32;0x0009BBAD</emphasis>
<anchor xml:id="__element_container_8cs_source_1l00590"/>00590 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_element">Element</link>&#32;GetOrCreateElement(<emphasis role="keywordtype">string</emphasis>&#32;alias)
<anchor xml:id="__element_container_8cs_source_1l00591"/>00591 &#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00592"/>00592 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this.GetOrCreateElement(<link linkend="_class_e_class">EClass</link>.sources.elements.alias[alias].id);
<anchor xml:id="__element_container_8cs_source_1l00593"/>00593 &#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00594"/>00594 
<anchor xml:id="__element_container_8cs_source_1l00595"/>00595 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x0600185F&#32;RID:&#32;6239&#32;RVA:&#32;0x0009D9D0&#32;File&#32;Offset:&#32;0x0009BBD0</emphasis>
<anchor xml:id="__element_container_8cs_source_1l00596"/>00596 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_element">Element</link>&#32;GetOrCreateElement(<emphasis role="keywordtype">int</emphasis>&#32;<emphasis role="keywordtype">id</emphasis>)
<anchor xml:id="__element_container_8cs_source_1l00597"/>00597 &#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00598"/>00598 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_element">Element</link>&#32;result&#32;=&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__element_container_8cs_source_1l00599"/>00599 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!this.dict.TryGetValue(<emphasis role="keywordtype">id</emphasis>,&#32;out&#32;result))
<anchor xml:id="__element_container_8cs_source_1l00600"/>00600 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00601"/>00601 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result&#32;=&#32;this.CreateElement(<emphasis role="keywordtype">id</emphasis>);
<anchor xml:id="__element_container_8cs_source_1l00602"/>00602 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00603"/>00603 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;result;
<anchor xml:id="__element_container_8cs_source_1l00604"/>00604 &#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00605"/>00605 
<anchor xml:id="__element_container_8cs_source_1l00606"/>00606 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06001860&#32;RID:&#32;6240&#32;RVA:&#32;0x0009D9F8&#32;File&#32;Offset:&#32;0x0009BBF8</emphasis>
<anchor xml:id="__element_container_8cs_source_1l00607"/>00607 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;SetParent(<link linkend="_class_card">Card</link>&#32;c)
<anchor xml:id="__element_container_8cs_source_1l00608"/>00608 &#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00609"/>00609 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.SetParent((c&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;?&#32;c.elements&#32;:&#32;<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__element_container_8cs_source_1l00610"/>00610 &#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00611"/>00611 
<anchor xml:id="__element_container_8cs_source_1l00612"/>00612 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06001861&#32;RID:&#32;6241&#32;RVA:&#32;0x0009DA0C&#32;File&#32;Offset:&#32;0x0009BC0C</emphasis>
<anchor xml:id="__element_container_8cs_source_1l00613"/>00613 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;SetParent(<link linkend="_class_element_container">ElementContainer</link>&#32;newParent&#32;=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__element_container_8cs_source_1l00614"/>00614 &#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00615"/>00615 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.parent&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__element_container_8cs_source_1l00616"/>00616 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00617"/>00617 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_element">Element</link>&#32;element&#32;<emphasis role="keywordflow">in</emphasis>&#32;this.dict.Values)
<anchor xml:id="__element_container_8cs_source_1l00618"/>00618 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00619"/>00619 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(element.CanLink(<emphasis role="keyword">this</emphasis>))
<anchor xml:id="__element_container_8cs_source_1l00620"/>00620 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00621"/>00621 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.parent.ModLink(element.id,&#32;-(element.vBase&#32;+&#32;element.vSource));
<anchor xml:id="__element_container_8cs_source_1l00622"/>00622 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00623"/>00623 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00624"/>00624 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00625"/>00625 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(newParent&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__element_container_8cs_source_1l00626"/>00626 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00627"/>00627 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_element">Element</link>&#32;element2&#32;<emphasis role="keywordflow">in</emphasis>&#32;this.dict.Values)
<anchor xml:id="__element_container_8cs_source_1l00628"/>00628 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00629"/>00629 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(element2.CanLink(<emphasis role="keyword">this</emphasis>))
<anchor xml:id="__element_container_8cs_source_1l00630"/>00630 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00631"/>00631 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newParent.ModLink(element2.id,&#32;element2.vBase&#32;+&#32;element2.vSource);
<anchor xml:id="__element_container_8cs_source_1l00632"/>00632 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00633"/>00633 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00634"/>00634 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00635"/>00635 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.parent&#32;=&#32;newParent;
<anchor xml:id="__element_container_8cs_source_1l00636"/>00636 &#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00637"/>00637 
<anchor xml:id="__element_container_8cs_source_1l00638"/>00638 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06001862&#32;RID:&#32;6242&#32;RVA:&#32;0x0009DAFC&#32;File&#32;Offset:&#32;0x0009BCFC</emphasis>
<anchor xml:id="__element_container_8cs_source_1l00639"/>00639 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;List&lt;Element&gt;&#32;ListElements(Func&lt;Element,&#32;bool&gt;&#32;shoudList&#32;=&#32;<emphasis role="keyword">null</emphasis>,&#32;Comparison&lt;Element&gt;&#32;comparison&#32;=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__element_container_8cs_source_1l00640"/>00640 &#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00641"/>00641 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;List&lt;Element&gt;&#32;list&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;Element&gt;();
<anchor xml:id="__element_container_8cs_source_1l00642"/>00642 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_element_container">ElementContainer</link>.&lt;&gt;c__DisplayClass55_0&#32;CS$&lt;&gt;8__locals1;
<anchor xml:id="__element_container_8cs_source_1l00643"/>00643 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CS$&lt;&gt;8__locals1.eles&#32;=&#32;this.dict.Values.ToList&lt;<link linkend="_class_element">Element</link>&gt;();
<anchor xml:id="__element_container_8cs_source_1l00644"/>00644 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.<link linkend="_class_card">Card</link>&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;this.<link linkend="_class_card">Card</link>.Chara&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__element_container_8cs_source_1l00645"/>00645 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00646"/>00646 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.<link linkend="_class_card">Card</link>.Chara.IsPCFaction)
<anchor xml:id="__element_container_8cs_source_1l00647"/>00647 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00648"/>00648 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_element_container">ElementContainer</link>.&lt;ListElements&gt;g__AddElements|55_0(<link linkend="_class_e_class">EClass</link>.pc.faction.charaElements,&#32;ref&#32;CS$&lt;&gt;8__locals1);
<anchor xml:id="__element_container_8cs_source_1l00649"/>00649 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00650"/>00650 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_element_container">ElementContainer</link>.&lt;ListElements&gt;g__AddElements|55_0(this.<link linkend="_class_card">Card</link>.Chara.faithElements,&#32;ref&#32;CS$&lt;&gt;8__locals1);
<anchor xml:id="__element_container_8cs_source_1l00651"/>00651 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00652"/>00652 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_element">Element</link>&#32;element&#32;<emphasis role="keywordflow">in</emphasis>&#32;CS$&lt;&gt;8__locals1.eles)
<anchor xml:id="__element_container_8cs_source_1l00653"/>00653 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00654"/>00654 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(shoudList&#32;==&#32;<emphasis role="keyword">null</emphasis>&#32;||&#32;shoudList(element))
<anchor xml:id="__element_container_8cs_source_1l00655"/>00655 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00656"/>00656 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;list.Add(element);
<anchor xml:id="__element_container_8cs_source_1l00657"/>00657 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00658"/>00658 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00659"/>00659 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(comparison&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__element_container_8cs_source_1l00660"/>00660 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00661"/>00661 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;list.Sort(comparison);
<anchor xml:id="__element_container_8cs_source_1l00662"/>00662 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00663"/>00663 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;list;
<anchor xml:id="__element_container_8cs_source_1l00664"/>00664 &#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00665"/>00665 
<anchor xml:id="__element_container_8cs_source_1l00666"/>00666 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06001863&#32;RID:&#32;6243&#32;RVA:&#32;0x0009DBD8&#32;File&#32;Offset:&#32;0x0009BDD8</emphasis>
<anchor xml:id="__element_container_8cs_source_1l00667"/>00667 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;List&lt;Element&gt;&#32;ListBestAttributes()
<anchor xml:id="__element_container_8cs_source_1l00668"/>00668 &#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00669"/>00669 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;List&lt;Element&gt;&#32;list&#32;=&#32;this.ListElements((<link linkend="_class_element">Element</link>&#32;a)&#32;=&gt;&#32;a.HasTag(<emphasis role="stringliteral">&quot;primary&quot;</emphasis>),&#32;<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__element_container_8cs_source_1l00670"/>00670 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;list.Sort((<link linkend="_class_element">Element</link>&#32;a,&#32;<link linkend="_class_element">Element</link>&#32;b)&#32;=&gt;&#32;(b.ValueWithoutLink&#32;-&#32;a.ValueWithoutLink)&#32;*&#32;100000&#32;+&#32;a.id&#32;-&#32;b.id);
<anchor xml:id="__element_container_8cs_source_1l00671"/>00671 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;list;
<anchor xml:id="__element_container_8cs_source_1l00672"/>00672 &#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00673"/>00673 
<anchor xml:id="__element_container_8cs_source_1l00674"/>00674 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06001864&#32;RID:&#32;6244&#32;RVA:&#32;0x0009DC30&#32;File&#32;Offset:&#32;0x0009BE30</emphasis>
<anchor xml:id="__element_container_8cs_source_1l00675"/>00675 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;List&lt;Element&gt;&#32;ListBestSkills()
<anchor xml:id="__element_container_8cs_source_1l00676"/>00676 &#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00677"/>00677 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;List&lt;Element&gt;&#32;list&#32;=&#32;this.ListElements((<link linkend="_class_element">Element</link>&#32;a)&#32;=&gt;&#32;a.source.category&#32;==&#32;<emphasis role="stringliteral">&quot;skill&quot;</emphasis>,&#32;<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__element_container_8cs_source_1l00678"/>00678 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;list.Sort((<link linkend="_class_element">Element</link>&#32;a,&#32;<link linkend="_class_element">Element</link>&#32;b)&#32;=&gt;&#32;(b.ValueWithoutLink&#32;-&#32;a.ValueWithoutLink)&#32;*&#32;100000&#32;+&#32;a.id&#32;-&#32;b.id);
<anchor xml:id="__element_container_8cs_source_1l00679"/>00679 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;list;
<anchor xml:id="__element_container_8cs_source_1l00680"/>00680 &#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00681"/>00681 
<anchor xml:id="__element_container_8cs_source_1l00682"/>00682 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06001865&#32;RID:&#32;6245&#32;RVA:&#32;0x0009DC88&#32;File&#32;Offset:&#32;0x0009BE88</emphasis>
<anchor xml:id="__element_container_8cs_source_1l00683"/>00683 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;List&lt;Element&gt;&#32;ListGeneFeats()
<anchor xml:id="__element_container_8cs_source_1l00684"/>00684 &#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00685"/>00685 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this.ListElements((<link linkend="_class_element">Element</link>&#32;a)&#32;=&gt;&#32;a.Value&#32;&gt;&#32;0&#32;&amp;&amp;&#32;a.source.category&#32;==&#32;<emphasis role="stringliteral">&quot;feat&quot;</emphasis>&#32;&amp;&amp;&#32;a.source.cost.Length&#32;!=&#32;0&#32;&amp;&amp;&#32;a.source.cost[0]&#32;&gt;&#32;0,&#32;<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__element_container_8cs_source_1l00686"/>00686 &#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00687"/>00687 
<anchor xml:id="__element_container_8cs_source_1l00688"/>00688 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06001866&#32;RID:&#32;6246&#32;RVA:&#32;0x0009DCB0&#32;File&#32;Offset:&#32;0x0009BEB0</emphasis>
<anchor xml:id="__element_container_8cs_source_1l00689"/>00689 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;List&lt;Element&gt;&#32;ListLearnable(<link linkend="_class_chara">Chara</link>&#32;c)
<anchor xml:id="__element_container_8cs_source_1l00690"/>00690 &#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00691"/>00691 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;List&lt;Element&gt;&#32;list&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;Element&gt;();
<anchor xml:id="__element_container_8cs_source_1l00692"/>00692 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(KeyValuePair&lt;int,&#32;Element&gt;&#32;keyValuePair&#32;<emphasis role="keywordflow">in</emphasis>&#32;c.elements.dict)
<anchor xml:id="__element_container_8cs_source_1l00693"/>00693 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00694"/>00694 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!this.dict.ContainsKey(keyValuePair.Key))
<anchor xml:id="__element_container_8cs_source_1l00695"/>00695 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00696"/>00696 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;list.Add(keyValuePair.Value);
<anchor xml:id="__element_container_8cs_source_1l00697"/>00697 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00698"/>00698 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00699"/>00699 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;list;
<anchor xml:id="__element_container_8cs_source_1l00700"/>00700 &#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00701"/>00701 
<anchor xml:id="__element_container_8cs_source_1l00702"/>00702 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06001867&#32;RID:&#32;6247&#32;RVA:&#32;0x0009DD2C&#32;File&#32;Offset:&#32;0x0009BF2C</emphasis>
<anchor xml:id="__element_container_8cs_source_1l00703"/>00703 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;CopyTo(<link linkend="_class_element_container">ElementContainer</link>&#32;container)
<anchor xml:id="__element_container_8cs_source_1l00704"/>00704 &#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00705"/>00705 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;container.dict.Clear();
<anchor xml:id="__element_container_8cs_source_1l00706"/>00706 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(KeyValuePair&lt;int,&#32;Element&gt;&#32;keyValuePair&#32;<emphasis role="keywordflow">in</emphasis>&#32;this.dict)
<anchor xml:id="__element_container_8cs_source_1l00707"/>00707 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00708"/>00708 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_element">Element</link>&#32;element&#32;=&#32;container.CreateElement(keyValuePair.Key);
<anchor xml:id="__element_container_8cs_source_1l00709"/>00709 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;element.vBase&#32;=&#32;keyValuePair.Value.vBase;
<anchor xml:id="__element_container_8cs_source_1l00710"/>00710 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;element.vExp&#32;=&#32;keyValuePair.Value.vExp;
<anchor xml:id="__element_container_8cs_source_1l00711"/>00711 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;element.vSource&#32;=&#32;keyValuePair.Value.vSource;
<anchor xml:id="__element_container_8cs_source_1l00712"/>00712 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00713"/>00713 &#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00714"/>00714 
<anchor xml:id="__element_container_8cs_source_1l00715"/>00715 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06001868&#32;RID:&#32;6248&#32;RVA:&#32;0x0009DDC8&#32;File&#32;Offset:&#32;0x0009BFC8</emphasis>
<anchor xml:id="__element_container_8cs_source_1l00716"/>00716 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;GetSortVal(<link linkend="_class_element">Element</link>&#32;a)
<anchor xml:id="__element_container_8cs_source_1l00717"/>00717 &#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00718"/>00718 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;num&#32;=&#32;a.Value;
<anchor xml:id="__element_container_8cs_source_1l00719"/>00719 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(a.source.textAlt.Length&#32;&lt;=&#32;2&#32;||&#32;a.Value&#32;&lt;&#32;0)
<anchor xml:id="__element_container_8cs_source_1l00720"/>00720 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00721"/>00721 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num&#32;-=&#32;100000;
<anchor xml:id="__element_container_8cs_source_1l00722"/>00722 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00723"/>00723 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(a.id&#32;==&#32;2)
<anchor xml:id="__element_container_8cs_source_1l00724"/>00724 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00725"/>00725 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num&#32;+=&#32;20000;
<anchor xml:id="__element_container_8cs_source_1l00726"/>00726 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00727"/>00727 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(a.IsFoodTraitMain)
<anchor xml:id="__element_container_8cs_source_1l00728"/>00728 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00729"/>00729 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num&#32;+=&#32;10000;
<anchor xml:id="__element_container_8cs_source_1l00730"/>00730 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00731"/>00731 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;num;
<anchor xml:id="__element_container_8cs_source_1l00732"/>00732 &#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00733"/>00733 
<anchor xml:id="__element_container_8cs_source_1l00734"/>00734 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06001869&#32;RID:&#32;6249&#32;RVA:&#32;0x0009DE20&#32;File&#32;Offset:&#32;0x0009C020</emphasis>
<anchor xml:id="__element_container_8cs_source_1l00735"/>00735 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;AddNote(UINote&#32;n,&#32;Func&lt;Element,&#32;bool&gt;&#32;isValid&#32;=&#32;<emphasis role="keyword">null</emphasis>,&#32;Action&#32;onAdd&#32;=&#32;<emphasis role="keyword">null</emphasis>,&#32;<link linkend="_class_element_container">ElementContainer</link>.NoteMode&#32;mode&#32;=&#32;<link linkend="_class_element_container">ElementContainer</link>.NoteMode.Default,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;addRaceFeat&#32;=&#32;<emphasis role="keyword">false</emphasis>,&#32;Func&lt;Element,&#32;string,&#32;string&gt;&#32;funcText&#32;=&#32;<emphasis role="keyword">null</emphasis>,&#32;Action&lt;UINote,&#32;Element&gt;&#32;onAddNote&#32;=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__element_container_8cs_source_1l00736"/>00736 &#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00737"/>00737 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;List&lt;Element&gt;&#32;list&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;Element&gt;();
<anchor xml:id="__element_container_8cs_source_1l00738"/>00738 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_element">Element</link>&#32;element&#32;<emphasis role="keywordflow">in</emphasis>&#32;this.dict.Values)
<anchor xml:id="__element_container_8cs_source_1l00739"/>00739 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00740"/>00740 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((isValid&#32;==&#32;<emphasis role="keyword">null</emphasis>&#32;||&#32;isValid(element))&#32;&amp;&amp;&#32;(mode&#32;!=&#32;<link linkend="_class_element_container">ElementContainer</link>.NoteMode.CharaMake&#32;||&#32;element.ValueWithoutLink&#32;!=&#32;0)&#32;&amp;&amp;&#32;(element.Value&#32;!=&#32;0&#32;||&#32;mode&#32;==&#32;<link linkend="_class_element_container">ElementContainer</link>.NoteMode.CharaMakeAttributes)&#32;&amp;&amp;&#32;(!element.HasTag(<emphasis role="stringliteral">&quot;hidden&quot;</emphasis>)&#32;||&#32;<link linkend="_class_e_class">EClass</link>.debug.showExtra))
<anchor xml:id="__element_container_8cs_source_1l00741"/>00741 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00742"/>00742 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;list.Add(element);
<anchor xml:id="__element_container_8cs_source_1l00743"/>00743 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00744"/>00744 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00745"/>00745 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(addRaceFeat)
<anchor xml:id="__element_container_8cs_source_1l00746"/>00746 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00747"/>00747 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_element">Element</link>&#32;element2&#32;=&#32;<link linkend="_class_element">Element</link>.Create(29,&#32;1);
<anchor xml:id="__element_container_8cs_source_1l00748"/>00748 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;element2.owner&#32;=&#32;<emphasis role="keyword">this</emphasis>;
<anchor xml:id="__element_container_8cs_source_1l00749"/>00749 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;list.Add(element2);
<anchor xml:id="__element_container_8cs_source_1l00750"/>00750 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00751"/>00751 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(list.Count&#32;==&#32;0)
<anchor xml:id="__element_container_8cs_source_1l00752"/>00752 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00753"/>00753 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__element_container_8cs_source_1l00754"/>00754 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00755"/>00755 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(onAdd&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__element_container_8cs_source_1l00756"/>00756 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00757"/>00757 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;onAdd();
<anchor xml:id="__element_container_8cs_source_1l00758"/>00758 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00759"/>00759 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(mode&#32;-&#32;<link linkend="_class_element_container">ElementContainer</link>.NoteMode.CharaMake&#32;&gt;&#32;1)
<anchor xml:id="__element_container_8cs_source_1l00760"/>00760 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00761"/>00761 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(mode&#32;!=&#32;<link linkend="_class_element_container">ElementContainer</link>.NoteMode.Trait)
<anchor xml:id="__element_container_8cs_source_1l00762"/>00762 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00763"/>00763 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;list.Sort((<link linkend="_class_element">Element</link>&#32;a,&#32;<link linkend="_class_element">Element</link>&#32;b)&#32;=&gt;&#32;a.SortVal(<emphasis role="keyword">false</emphasis>)&#32;-&#32;b.SortVal(<emphasis role="keyword">false</emphasis>));
<anchor xml:id="__element_container_8cs_source_1l00764"/>00764 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00765"/>00765 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__element_container_8cs_source_1l00766"/>00766 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00767"/>00767 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;list.Sort((<link linkend="_class_element">Element</link>&#32;a,&#32;<link linkend="_class_element">Element</link>&#32;b)&#32;=&gt;&#32;<link linkend="_class_element_container">ElementContainer</link>.GetSortVal(b)&#32;-&#32;<link linkend="_class_element_container">ElementContainer</link>.GetSortVal(a));
<anchor xml:id="__element_container_8cs_source_1l00768"/>00768 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00769"/>00769 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00770"/>00770 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__element_container_8cs_source_1l00771"/>00771 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00772"/>00772 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;list.Sort((<link linkend="_class_element">Element</link>&#32;a,&#32;<link linkend="_class_element">Element</link>&#32;b)&#32;=&gt;&#32;a.GetSortVal(UIList.SortMode.ByElementParent)&#32;-&#32;b.GetSortVal(UIList.SortMode.ByElementParent));
<anchor xml:id="__element_container_8cs_source_1l00773"/>00773 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00774"/>00774 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;(List&lt;Element&gt;.Enumerator&#32;enumerator2&#32;=&#32;list.GetEnumerator())
<anchor xml:id="__element_container_8cs_source_1l00775"/>00775 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00776"/>00776 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(enumerator2.MoveNext())
<anchor xml:id="__element_container_8cs_source_1l00777"/>00777 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00778"/>00778 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_element">Element</link>&#32;e&#32;=&#32;enumerator2.Current;
<anchor xml:id="__element_container_8cs_source_1l00779"/>00779 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(mode)
<anchor xml:id="__element_container_8cs_source_1l00780"/>00780 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00781"/>00781 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_class_element_container">ElementContainer</link>.NoteMode.Default:
<anchor xml:id="__element_container_8cs_source_1l00782"/>00782 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_class_element_container">ElementContainer</link>.NoteMode.Trait:
<anchor xml:id="__element_container_8cs_source_1l00783"/>00783 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00784"/>00784 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;flag&#32;=&#32;e.source.tag.Contains(<emphasis role="stringliteral">&quot;common&quot;</emphasis>);
<anchor xml:id="__element_container_8cs_source_1l00785"/>00785 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;categorySub&#32;=&#32;e.source.categorySub;
<anchor xml:id="__element_container_8cs_source_1l00786"/>00786 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;flag2&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__element_container_8cs_source_1l00787"/>00787 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;flag3&#32;=&#32;e.source.tag.Contains(<emphasis role="stringliteral">&quot;neg&quot;</emphasis>)&#32;?&#32;(e.Value&#32;&gt;&#32;0)&#32;:&#32;(e.Value&#32;&lt;&#32;0);
<anchor xml:id="__element_container_8cs_source_1l00788"/>00788 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;num&#32;=&#32;Mathf.Abs(e.Value);
<anchor xml:id="__element_container_8cs_source_1l00789"/>00789 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;flag4&#32;=&#32;this.Card&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;this.<link linkend="_class_card">Card</link>.ShowFoodEnc;
<anchor xml:id="__element_container_8cs_source_1l00790"/>00790 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;flag5&#32;=&#32;this.Card&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;this.Card.IsWeapon&#32;&amp;&amp;&#32;e&#32;is&#32;<link linkend="_class_ability">Ability</link>;
<anchor xml:id="__element_container_8cs_source_1l00791"/>00791 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;text;
<anchor xml:id="__element_container_8cs_source_1l00792"/>00792 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(e.IsTrait&#32;||&#32;(flag4&#32;&amp;&amp;&#32;e.IsFoodTrait))
<anchor xml:id="__element_container_8cs_source_1l00793"/>00793 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00794"/>00794 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>[]&#32;textArray&#32;=&#32;e.source.GetTextArray(<emphasis role="stringliteral">&quot;textAlt&quot;</emphasis>);
<anchor xml:id="__element_container_8cs_source_1l00795"/>00795 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;num2&#32;=&#32;Mathf.Clamp(e.Value&#32;/&#32;10&#32;+&#32;1,&#32;(e.Value&#32;&gt;=&#32;0&#32;&amp;&amp;&#32;textArray.Length&#32;&gt;&#32;2)&#32;?&#32;2&#32;:&#32;1,&#32;textArray.Length&#32;-&#32;1);
<anchor xml:id="__element_container_8cs_source_1l00796"/>00796 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;text&#32;=&#32;<emphasis role="stringliteral">&quot;altEnc&quot;</emphasis>.lang(textArray[0].IsEmpty(e.Name),&#32;textArray[num2],&#32;<link linkend="_class_e_class">EClass</link>.debug.showExtra&#32;?&#32;(e.Value.ToString()&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>&#32;+&#32;e.Name)&#32;:&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>,&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__element_container_8cs_source_1l00797"/>00797 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;flag3&#32;=&#32;(num2&#32;&lt;=&#32;1&#32;||&#32;textArray.Length&#32;&lt;=&#32;2);
<anchor xml:id="__element_container_8cs_source_1l00798"/>00798 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;flag2&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__element_container_8cs_source_1l00799"/>00799 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00800"/>00800 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(flag5)
<anchor xml:id="__element_container_8cs_source_1l00801"/>00801 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00802"/>00802 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;text&#32;=&#32;<emphasis role="stringliteral">&quot;isProc&quot;</emphasis>.lang(e.Name,&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__element_container_8cs_source_1l00803"/>00803 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;flag3&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__element_container_8cs_source_1l00804"/>00804 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00805"/>00805 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(categorySub&#32;==&#32;<emphasis role="stringliteral">&quot;resist&quot;</emphasis>)
<anchor xml:id="__element_container_8cs_source_1l00806"/>00806 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00807"/>00807 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;text&#32;=&#32;(<emphasis role="stringliteral">&quot;isResist&quot;</emphasis>&#32;+&#32;(flag3&#32;?&#32;<emphasis role="stringliteral">&quot;Neg&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>)).lang(e.Name,&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__element_container_8cs_source_1l00808"/>00808 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00809"/>00809 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(categorySub&#32;==&#32;<emphasis role="stringliteral">&quot;eleAttack&quot;</emphasis>)
<anchor xml:id="__element_container_8cs_source_1l00810"/>00810 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00811"/>00811 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;text&#32;=&#32;<emphasis role="stringliteral">&quot;isEleAttack&quot;</emphasis>.lang(e.Name,&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__element_container_8cs_source_1l00812"/>00812 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00813"/>00813 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!e.source.textPhase.IsEmpty()&#32;&amp;&amp;&#32;e.Value&#32;&gt;&#32;0)
<anchor xml:id="__element_container_8cs_source_1l00814"/>00814 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00815"/>00815 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;text&#32;=&#32;e.source.GetText(<emphasis role="stringliteral">&quot;textPhase&quot;</emphasis>,&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__element_container_8cs_source_1l00816"/>00816 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00817"/>00817 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__element_container_8cs_source_1l00818"/>00818 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00819"/>00819 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;name&#32;=&#32;e.Name;
<anchor xml:id="__element_container_8cs_source_1l00820"/>00820 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;flag6&#32;=&#32;e.source.category&#32;==&#32;<emphasis role="stringliteral">&quot;skill&quot;</emphasis>&#32;||&#32;(e.source.category&#32;==&#32;<emphasis role="stringliteral">&quot;attribute&quot;</emphasis>&#32;&amp;&amp;&#32;!e.source.textPhase.IsEmpty());
<anchor xml:id="__element_container_8cs_source_1l00821"/>00821 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;flag7&#32;=&#32;e.source.category&#32;==&#32;<emphasis role="stringliteral">&quot;enchant&quot;</emphasis>;
<anchor xml:id="__element_container_8cs_source_1l00822"/>00822 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(e.source.tag.Contains(<emphasis role="stringliteral">&quot;multiplier&quot;</emphasis>))
<anchor xml:id="__element_container_8cs_source_1l00823"/>00823 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00824"/>00824 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;flag7&#32;=&#32;(flag6&#32;=&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__element_container_8cs_source_1l00825"/>00825 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;name&#32;=&#32;<link linkend="_class_e_class">EClass</link>.sources.elements.alias[e.source.aliasRef].GetName();
<anchor xml:id="__element_container_8cs_source_1l00826"/>00826 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00827"/>00827 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;flag2&#32;=&#32;(!flag6&#32;&amp;&amp;&#32;!flag7);
<anchor xml:id="__element_container_8cs_source_1l00828"/>00828 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;text&#32;=&#32;(flag6&#32;?&#32;<emphasis role="stringliteral">&quot;textEncSkill&quot;</emphasis>&#32;:&#32;(flag7&#32;?&#32;<emphasis role="stringliteral">&quot;textEncEnc&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;textEnc&quot;</emphasis>)).lang(name,&#32;num.ToString()&#32;+&#32;(e.source.tag.Contains(<emphasis role="stringliteral">&quot;ratio&quot;</emphasis>)&#32;?&#32;<emphasis role="stringliteral">&quot;%&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>),&#32;((e.Value&#32;&gt;&#32;0)&#32;?&#32;<emphasis role="stringliteral">&quot;encIncrease&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;encDecrease&quot;</emphasis>).lang(),&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__element_container_8cs_source_1l00829"/>00829 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00830"/>00830 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;num3&#32;=&#32;(e&#32;is&#32;<link linkend="_class_resistance">Resistance</link>)&#32;?&#32;0&#32;:&#32;1;
<anchor xml:id="__element_container_8cs_source_1l00831"/>00831 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!flag&#32;&amp;&amp;&#32;!flag2&#32;&amp;&amp;&#32;!e.source.tag.Contains(<emphasis role="stringliteral">&quot;flag&quot;</emphasis>))
<anchor xml:id="__element_container_8cs_source_1l00832"/>00832 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00833"/>00833 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;text&#32;=&#32;<emphasis role="keywordtype">string</emphasis>.Concat(<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>[]
<anchor xml:id="__element_container_8cs_source_1l00834"/>00834 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00835"/>00835 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;text,
<anchor xml:id="__element_container_8cs_source_1l00836"/>00836 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&#32;[&quot;</emphasis>,
<anchor xml:id="__element_container_8cs_source_1l00837"/>00837 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;*&quot;</emphasis>.Repeat(Mathf.Clamp(num&#32;*&#32;e.source.mtp&#32;/&#32;5&#32;+&#32;num3,&#32;1,&#32;5)),
<anchor xml:id="__element_container_8cs_source_1l00838"/>00838 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(num&#32;*&#32;e.source.mtp&#32;/&#32;5&#32;+&#32;num3&#32;&gt;&#32;5)&#32;?&#32;<emphasis role="stringliteral">&quot;+&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>,
<anchor xml:id="__element_container_8cs_source_1l00839"/>00839 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;]&quot;</emphasis>
<anchor xml:id="__element_container_8cs_source_1l00840"/>00840 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__element_container_8cs_source_1l00841"/>00841 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00842"/>00842 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(e.HasTag(<emphasis role="stringliteral">&quot;hidden&quot;</emphasis>))
<anchor xml:id="__element_container_8cs_source_1l00843"/>00843 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00844"/>00844 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;text&#32;=&#32;<emphasis role="stringliteral">&quot;(debug)&quot;</emphasis>&#32;+&#32;text;
<anchor xml:id="__element_container_8cs_source_1l00845"/>00845 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00846"/>00846 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;FontColor&#32;color&#32;=&#32;flag&#32;?&#32;FontColor.Default&#32;:&#32;(flag3&#32;?&#32;FontColor.Bad&#32;:&#32;FontColor.Good);
<anchor xml:id="__element_container_8cs_source_1l00847"/>00847 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(e.IsGlobalElement)
<anchor xml:id="__element_container_8cs_source_1l00848"/>00848 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00849"/>00849 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;text&#32;=&#32;text&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>&#32;+&#32;(e.IsFactionWideElement&#32;?&#32;<emphasis role="stringliteral">&quot;_factionWide&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;_partyWide&quot;</emphasis>).lang();
<anchor xml:id="__element_container_8cs_source_1l00850"/>00850 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.<link linkend="_class_card">Card</link>&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;!this.<link linkend="_class_card">Card</link>.c_idDeity.IsEmpty()&#32;&amp;&amp;&#32;<emphasis role="keyword">this</emphasis>.Card.c_idDeity&#32;!=&#32;<link linkend="_class_e_class">EClass</link>.pc.idFaith)
<anchor xml:id="__element_container_8cs_source_1l00851"/>00851 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00852"/>00852 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;
<anchor xml:id="__element_container_8cs_source_1l00853"/>00853 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00854"/>00854 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;color&#32;=&#32;FontColor.Myth;
<anchor xml:id="__element_container_8cs_source_1l00855"/>00855 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00856"/>00856 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(flag4&#32;&amp;&amp;&#32;e.IsFoodTrait&#32;&amp;&amp;&#32;!e.IsFoodTraitMain)
<anchor xml:id="__element_container_8cs_source_1l00857"/>00857 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00858"/>00858 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;color&#32;=&#32;FontColor.FoodMisc;
<anchor xml:id="__element_container_8cs_source_1l00859"/>00859 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00860"/>00860 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(e.id&#32;==&#32;2&#32;&amp;&amp;&#32;e.Value&#32;&gt;=&#32;0)
<anchor xml:id="__element_container_8cs_source_1l00861"/>00861 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00862"/>00862 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;color&#32;=&#32;FontColor.FoodQuality;
<anchor xml:id="__element_container_8cs_source_1l00863"/>00863 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00864"/>00864 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(funcText&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__element_container_8cs_source_1l00865"/>00865 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00866"/>00866 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;text&#32;=&#32;funcText(e,&#32;text);
<anchor xml:id="__element_container_8cs_source_1l00867"/>00867 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00868"/>00868 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;n.AddText(<emphasis role="stringliteral">&quot;NoteText_prefwidth&quot;</emphasis>,&#32;text,&#32;color);
<anchor xml:id="__element_container_8cs_source_1l00869"/>00869 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(onAddNote&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__element_container_8cs_source_1l00870"/>00870 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00871"/>00871 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;onAddNote(n,&#32;e);
<anchor xml:id="__element_container_8cs_source_1l00872"/>00872 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;
<anchor xml:id="__element_container_8cs_source_1l00873"/>00873 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00874"/>00874 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;
<anchor xml:id="__element_container_8cs_source_1l00875"/>00875 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00876"/>00876 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_class_element_container">ElementContainer</link>.NoteMode.Domain:
<anchor xml:id="__element_container_8cs_source_1l00877"/>00877 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;n.AddText(e.Name,&#32;FontColor.Default);
<anchor xml:id="__element_container_8cs_source_1l00878"/>00878 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;
<anchor xml:id="__element_container_8cs_source_1l00879"/>00879 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00880"/>00880 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UIItem&#32;uiitem&#32;=&#32;n.AddTopic(<emphasis role="stringliteral">&quot;TopicAttribute&quot;</emphasis>,&#32;e.Name,&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>.TagColor((e.ValueWithoutLink&#32;&gt;&#32;0)&#32;?&#32;SkinManager.CurrentColors.textGood&#32;:&#32;SkinManager.CurrentColors.textBad,&#32;e.ValueWithoutLink.ToString()&#32;??&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>));
<anchor xml:id="__element_container_8cs_source_1l00881"/>00881 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(uiitem.button1)
<anchor xml:id="__element_container_8cs_source_1l00882"/>00882 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00883"/>00883 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uiitem.button1.tooltip.onShowTooltip&#32;=&#32;delegate(UITooltip&#32;t)
<anchor xml:id="__element_container_8cs_source_1l00884"/>00884 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00885"/>00885 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;e.WriteNote(t.note,&#32;<link linkend="_class_e_class">EClass</link>.pc.elements,&#32;<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__element_container_8cs_source_1l00886"/>00886 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__element_container_8cs_source_1l00887"/>00887 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00888"/>00888 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;e.SetImage(uiitem.image1);
<anchor xml:id="__element_container_8cs_source_1l00889"/>00889 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Image&#32;image&#32;=&#32;uiitem.image2;
<anchor xml:id="__element_container_8cs_source_1l00890"/>00890 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;value&#32;=&#32;(e.Potential&#32;-&#32;80)&#32;/&#32;20;
<anchor xml:id="__element_container_8cs_source_1l00891"/>00891 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;image.enabled&#32;=&#32;(e.Potential&#32;!=&#32;80);
<anchor xml:id="__element_container_8cs_source_1l00892"/>00892 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;image.sprite&#32;=&#32;<link linkend="_class_e_class">EClass</link>.core.refs.spritesPotential[Mathf.Clamp(Mathf.Abs(value),&#32;0,&#32;<link linkend="_class_e_class">EClass</link>.core.refs.spritesPotential.Count&#32;-&#32;1)];
<anchor xml:id="__element_container_8cs_source_1l00893"/>00893 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;image.color&#32;=&#32;((e.Potential&#32;-&#32;80&#32;&gt;=&#32;0)&#32;?&#32;Color.white&#32;:&#32;<emphasis role="keyword">new</emphasis>&#32;Color(1f,&#32;0.7f,&#32;0.7f));
<anchor xml:id="__element_container_8cs_source_1l00894"/>00894 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00895"/>00895 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00896"/>00896 &#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00897"/>00897 
<anchor xml:id="__element_container_8cs_source_1l00898"/>00898 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x0600186A&#32;RID:&#32;6250&#32;RVA:&#32;0x0009E72C&#32;File&#32;Offset:&#32;0x0009C92C</emphasis>
<anchor xml:id="__element_container_8cs_source_1l00899"/>00899 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;AddNoteAll(UINote&#32;n)
<anchor xml:id="__element_container_8cs_source_1l00900"/>00900 &#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00901"/>00901 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Transform&#32;transform&#32;=&#32;n.AddExtra&lt;Transform&gt;(<emphasis role="stringliteral">&quot;noteRace&quot;</emphasis>);
<anchor xml:id="__element_container_8cs_source_1l00902"/>00902 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UINote&#32;n2&#32;=&#32;transform.Find(<emphasis role="stringliteral">&quot;note1&quot;</emphasis>).GetComponent&lt;UINote&gt;();
<anchor xml:id="__element_container_8cs_source_1l00903"/>00903 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UINote&#32;n3&#32;=&#32;transform.Find(<emphasis role="stringliteral">&quot;note2&quot;</emphasis>).GetComponent&lt;UINote&gt;();
<anchor xml:id="__element_container_8cs_source_1l00904"/>00904 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.AddNote(n3,&#32;(<link linkend="_class_element">Element</link>&#32;e)&#32;=&gt;&#32;e.HasTag(<emphasis role="stringliteral">&quot;primary&quot;</emphasis>),&#32;delegate
<anchor xml:id="__element_container_8cs_source_1l00905"/>00905 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00906"/>00906 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;n3.AddHeader(<emphasis role="stringliteral">&quot;HeaderNoteSmall&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;attributes&quot;</emphasis>,&#32;null);
<anchor xml:id="__element_container_8cs_source_1l00907"/>00907 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;},&#32;<link linkend="_class_element_container">ElementContainer</link>.NoteMode.CharaMakeAttributes,&#32;<emphasis role="keyword">false</emphasis>,&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__element_container_8cs_source_1l00908"/>00908 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.AddNote(n2,&#32;(<link linkend="_class_element">Element</link>&#32;e)&#32;=&gt;&#32;e.source.category&#32;==&#32;<emphasis role="stringliteral">&quot;skill&quot;</emphasis>&#32;&amp;&amp;&#32;!e.HasTag(<emphasis role="stringliteral">&quot;hidden&quot;</emphasis>)&#32;&amp;&amp;&#32;e.ValueWithoutLink&#32;&gt;&#32;1&#32;&amp;&amp;&#32;e.source.categorySub&#32;!=&#32;<emphasis role="stringliteral">&quot;weapon&quot;</emphasis>,&#32;delegate
<anchor xml:id="__element_container_8cs_source_1l00909"/>00909 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00910"/>00910 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;n2.AddHeader(<emphasis role="stringliteral">&quot;HeaderNoteSmall&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;skills&quot;</emphasis>,&#32;null);
<anchor xml:id="__element_container_8cs_source_1l00911"/>00911 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;},&#32;<link linkend="_class_element_container">ElementContainer</link>.NoteMode.CharaMake,&#32;<emphasis role="keyword">false</emphasis>,&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__element_container_8cs_source_1l00912"/>00912 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.AddNote(n2,&#32;(<link linkend="_class_element">Element</link>&#32;e)&#32;=&gt;&#32;e&#32;is&#32;<link linkend="_class_feat">Feat</link>,&#32;delegate
<anchor xml:id="__element_container_8cs_source_1l00913"/>00913 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00914"/>00914 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;n2.AddHeader(<emphasis role="stringliteral">&quot;HeaderNoteSmall&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;feats&quot;</emphasis>,&#32;<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__element_container_8cs_source_1l00915"/>00915 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;},&#32;<link linkend="_class_element_container">ElementContainer</link>.NoteMode.CharaMake,&#32;<emphasis role="keyword">false</emphasis>,&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__element_container_8cs_source_1l00916"/>00916 &#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00917"/>00917 
<anchor xml:id="__element_container_8cs_source_1l00918"/>00918 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x0600186C&#32;RID:&#32;6252&#32;RVA:&#32;0x0009E83C&#32;File&#32;Offset:&#32;0x0009CA3C</emphasis>
<anchor xml:id="__element_container_8cs_source_1l00919"/>00919 &#32;&#32;&#32;&#32;[CompilerGenerated]
<anchor xml:id="__element_container_8cs_source_1l00920"/>00920 &#32;&#32;&#32;&#32;<emphasis role="keyword">internal</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;void&#32;&lt;ListElements&gt;g__AddElements|55_0(<link linkend="_class_element_container">ElementContainer</link>&#32;container,&#32;ref&#32;<link linkend="_class_element_container">ElementContainer</link>.&lt;&gt;c__DisplayClass55_0&#32;A_1)
<anchor xml:id="__element_container_8cs_source_1l00921"/>00921 &#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00922"/>00922 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(container&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__element_container_8cs_source_1l00923"/>00923 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00924"/>00924 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__element_container_8cs_source_1l00925"/>00925 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00926"/>00926 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_element">Element</link>&#32;element&#32;<emphasis role="keywordflow">in</emphasis>&#32;container.dict.Values)
<anchor xml:id="__element_container_8cs_source_1l00927"/>00927 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00928"/>00928 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;flag&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__element_container_8cs_source_1l00929"/>00929 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_element">Element</link>&#32;element2&#32;<emphasis role="keywordflow">in</emphasis>&#32;A_1.eles)
<anchor xml:id="__element_container_8cs_source_1l00930"/>00930 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00931"/>00931 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(element.id&#32;==&#32;element2.id)
<anchor xml:id="__element_container_8cs_source_1l00932"/>00932 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00933"/>00933 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;flag&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__element_container_8cs_source_1l00934"/>00934 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__element_container_8cs_source_1l00935"/>00935 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00936"/>00936 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00937"/>00937 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(flag&#32;&amp;&amp;&#32;element.Value&#32;!=&#32;0)
<anchor xml:id="__element_container_8cs_source_1l00938"/>00938 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00939"/>00939 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;A_1.eles.Add(element);
<anchor xml:id="__element_container_8cs_source_1l00940"/>00940 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00941"/>00941 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00942"/>00942 &#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00943"/>00943 
<anchor xml:id="__element_container_8cs_source_1l00944"/>00944 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x040010A1&#32;RID:&#32;4257</emphasis>
<anchor xml:id="__element_container_8cs_source_1l00945"/>00945 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Dictionary&lt;int,&#32;Element&gt;&#32;dict&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Dictionary&lt;int,&#32;Element&gt;();
<anchor xml:id="__element_container_8cs_source_1l00946"/>00946 
<anchor xml:id="__element_container_8cs_source_1l00947"/>00947 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x040010A2&#32;RID:&#32;4258</emphasis>
<anchor xml:id="__element_container_8cs_source_1l00948"/>00948 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_element_container">ElementContainer</link>&#32;parent;
<anchor xml:id="__element_container_8cs_source_1l00949"/>00949 
<anchor xml:id="__element_container_8cs_source_1l00950"/>00950 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x040010A3&#32;RID:&#32;4259</emphasis>
<anchor xml:id="__element_container_8cs_source_1l00951"/>00951 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;sizeElement&#32;=&#32;5;
<anchor xml:id="__element_container_8cs_source_1l00952"/>00952 
<anchor xml:id="__element_container_8cs_source_1l00953"/>00953 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x040010A4&#32;RID:&#32;4260</emphasis>
<anchor xml:id="__element_container_8cs_source_1l00954"/>00954 &#32;&#32;&#32;&#32;[JsonProperty(PropertyName&#32;=&#32;<emphasis role="stringliteral">&quot;A&quot;</emphasis>)]
<anchor xml:id="__element_container_8cs_source_1l00955"/>00955 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;List&lt;int&gt;&#32;list;
<anchor xml:id="__element_container_8cs_source_1l00956"/>00956 
<anchor xml:id="__element_container_8cs_source_1l00957"/>00957 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x02000983&#32;RID:&#32;2435</emphasis>
<anchor xml:id="__element_container_8cs_source_1l00958"/>00958 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">enum</emphasis>&#32;NoteMode
<anchor xml:id="__element_container_8cs_source_1l00959"/>00959 &#32;&#32;&#32;&#32;{
<anchor xml:id="__element_container_8cs_source_1l00960"/>00960 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x040027CF&#32;RID:&#32;10191</emphasis>
<anchor xml:id="__element_container_8cs_source_1l00961"/>00961 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Default,
<anchor xml:id="__element_container_8cs_source_1l00962"/>00962 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x040027D0&#32;RID:&#32;10192</emphasis>
<anchor xml:id="__element_container_8cs_source_1l00963"/>00963 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CharaMake,
<anchor xml:id="__element_container_8cs_source_1l00964"/>00964 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x040027D1&#32;RID:&#32;10193</emphasis>
<anchor xml:id="__element_container_8cs_source_1l00965"/>00965 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CharaMakeAttributes,
<anchor xml:id="__element_container_8cs_source_1l00966"/>00966 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x040027D2&#32;RID:&#32;10194</emphasis>
<anchor xml:id="__element_container_8cs_source_1l00967"/>00967 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_domain">Domain</link>,
<anchor xml:id="__element_container_8cs_source_1l00968"/>00968 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x040027D3&#32;RID:&#32;10195</emphasis>
<anchor xml:id="__element_container_8cs_source_1l00969"/>00969 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_trait">Trait</link>
<anchor xml:id="__element_container_8cs_source_1l00970"/>00970 &#32;&#32;&#32;&#32;}
<anchor xml:id="__element_container_8cs_source_1l00971"/>00971 }
</programlisting></section>
