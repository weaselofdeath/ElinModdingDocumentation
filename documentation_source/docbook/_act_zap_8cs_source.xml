<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__act_zap_8cs_source" xml:lang="en-US">
<title>ActZap.cs</title>
<indexterm><primary>Elin/ActZap.cs</primary></indexterm>
<programlisting linenumbering="unnumbered"><anchor xml:id="__act_zap_8cs_source_1l00001"/>00001 <emphasis role="keyword">using&#32;</emphasis>System;
<anchor xml:id="__act_zap_8cs_source_1l00002"/>00002 <emphasis role="keyword">using&#32;</emphasis>UnityEngine;
<anchor xml:id="__act_zap_8cs_source_1l00003"/>00003 
<anchor xml:id="__act_zap_8cs_source_1l00004"/>00004 <emphasis role="comment">//&#32;Token:&#32;0x02000327&#32;RID:&#32;807</emphasis>
<anchor xml:id="__act_zap_8cs_source_1l00005"/><link linkend="_class_act_zap">00005</link> <emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_act_zap">ActZap</link>&#32;:&#32;<link linkend="_class_act">Act</link>
<anchor xml:id="__act_zap_8cs_source_1l00006"/>00006 {
<anchor xml:id="__act_zap_8cs_source_1l00007"/>00007 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x17000775&#32;RID:&#32;1909</emphasis>
<anchor xml:id="__act_zap_8cs_source_1l00008"/>00008 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;(get)&#32;Token:&#32;0x060019C9&#32;RID:&#32;6601&#32;RVA:&#32;0x000A35A1&#32;File&#32;Offset:&#32;0x000A17A1</emphasis>
<anchor xml:id="__act_zap_8cs_source_1l00009"/>00009 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;MaxRadius
<anchor xml:id="__act_zap_8cs_source_1l00010"/>00010 &#32;&#32;&#32;&#32;{
<anchor xml:id="__act_zap_8cs_source_1l00011"/>00011 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
<anchor xml:id="__act_zap_8cs_source_1l00012"/>00012 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__act_zap_8cs_source_1l00013"/>00013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;2;
<anchor xml:id="__act_zap_8cs_source_1l00014"/>00014 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__act_zap_8cs_source_1l00015"/>00015 &#32;&#32;&#32;&#32;}
<anchor xml:id="__act_zap_8cs_source_1l00016"/>00016 
<anchor xml:id="__act_zap_8cs_source_1l00017"/>00017 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x17000776&#32;RID:&#32;1910</emphasis>
<anchor xml:id="__act_zap_8cs_source_1l00018"/>00018 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;(get)&#32;Token:&#32;0x060019CA&#32;RID:&#32;6602&#32;RVA:&#32;0x000A35A4&#32;File&#32;Offset:&#32;0x000A17A4</emphasis>
<anchor xml:id="__act_zap_8cs_source_1l00019"/>00019 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;PerformDistance
<anchor xml:id="__act_zap_8cs_source_1l00020"/>00020 &#32;&#32;&#32;&#32;{
<anchor xml:id="__act_zap_8cs_source_1l00021"/>00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
<anchor xml:id="__act_zap_8cs_source_1l00022"/>00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__act_zap_8cs_source_1l00023"/>00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;99;
<anchor xml:id="__act_zap_8cs_source_1l00024"/>00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__act_zap_8cs_source_1l00025"/>00025 &#32;&#32;&#32;&#32;}
<anchor xml:id="__act_zap_8cs_source_1l00026"/>00026 
<anchor xml:id="__act_zap_8cs_source_1l00027"/>00027 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x17000777&#32;RID:&#32;1911</emphasis>
<anchor xml:id="__act_zap_8cs_source_1l00028"/>00028 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;(get)&#32;Token:&#32;0x060019CB&#32;RID:&#32;6603&#32;RVA:&#32;0x000A35A8&#32;File&#32;Offset:&#32;0x000A17A8</emphasis>
<anchor xml:id="__act_zap_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<link linkend="_class_target_type">TargetType</link>&#32;<link linkend="_class_target_type">TargetType</link>
<anchor xml:id="__act_zap_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;{
<anchor xml:id="__act_zap_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
<anchor xml:id="__act_zap_8cs_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__act_zap_8cs_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_target_type">TargetType</link>.Ground;
<anchor xml:id="__act_zap_8cs_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__act_zap_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;}
<anchor xml:id="__act_zap_8cs_source_1l00036"/>00036 
<anchor xml:id="__act_zap_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x060019CC&#32;RID:&#32;6604&#32;RVA:&#32;0x000A35B0&#32;File&#32;Offset:&#32;0x000A17B0</emphasis>
<anchor xml:id="__act_zap_8cs_source_1l00038"/>00038 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;Perform()
<anchor xml:id="__act_zap_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;{
<anchor xml:id="__act_zap_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_act">Act</link>.CC.Say(<emphasis role="stringliteral">&quot;zapRod&quot;</emphasis>,&#32;<link linkend="_class_act">Act</link>.CC,&#32;<emphasis role="keyword">this</emphasis>.trait.owner.Name,&#32;<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__act_zap_8cs_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.trait.owner.c_charges&#32;&gt;&#32;0)
<anchor xml:id="__act_zap_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__act_zap_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.trait.owner.ModCharge(-1,&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__act_zap_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_act">Act</link>.CC.PlayEffect(<emphasis role="stringliteral">&quot;rod&quot;</emphasis>,&#32;<emphasis role="keyword">true</emphasis>,&#32;0f,&#32;<emphasis role="keywordflow">default</emphasis>(Vector3));
<anchor xml:id="__act_zap_8cs_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_act">Act</link>.CC.PlaySound(<emphasis role="stringliteral">&quot;rod&quot;</emphasis>,&#32;1f,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__act_zap_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Act.TC&#32;=&#32;<link linkend="_class_act">Act</link>.CC;
<anchor xml:id="__act_zap_8cs_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EffectId&#32;idEffect&#32;=&#32;this.trait.IdEffect;
<anchor xml:id="__act_zap_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;power&#32;=&#32;this.trait.Power&#32;*&#32;(100&#32;+&#32;<link linkend="_class_act">Act</link>.CC.Evalue(305)&#32;*&#32;10&#32;+&#32;<link linkend="_class_act">Act</link>.CC.MAG&#32;/&#32;2&#32;+&#32;<link linkend="_class_act">Act</link>.CC.PER&#32;/&#32;2)&#32;/&#32;100;
<anchor xml:id="__act_zap_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_act_effect">ActEffect</link>.ProcAt(idEffect,&#32;power,&#32;this.trait.owner.blessedState,&#32;<link linkend="_class_act">Act</link>.CC,&#32;<emphasis role="keyword">null</emphasis>,&#32;<link linkend="_class_act">Act</link>.TP,&#32;<emphasis role="keyword">this</emphasis>.trait.IsNegative,&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_struct_act_ref">ActRef</link>
<anchor xml:id="__act_zap_8cs_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__act_zap_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;aliasEle&#32;=&#32;this.trait.aliasEle,
<anchor xml:id="__act_zap_8cs_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;n1&#32;=&#32;this.trait.N1,
<anchor xml:id="__act_zap_8cs_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;act&#32;=&#32;((this.trait.source&#32;!=&#32;null)&#32;?&#32;ACT.Create(this.trait.source)&#32;:&#32;null)
<anchor xml:id="__act_zap_8cs_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__act_zap_8cs_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_act">Act</link>.CC.IsPC&#32;&amp;&amp;&#32;(idEffect&#32;==&#32;EffectId.Identify&#32;||&#32;idEffect&#32;==&#32;EffectId.GreaterIdentify))
<anchor xml:id="__act_zap_8cs_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__act_zap_8cs_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.trait.owner.Thing.Identify(<link linkend="_class_act">Act</link>.CC.IsPCParty,&#32;IDTSource.Identify);
<anchor xml:id="__act_zap_8cs_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__act_zap_8cs_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_act">Act</link>.CC.ModExp(305,&#32;50);
<anchor xml:id="__act_zap_8cs_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__act_zap_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__act_zap_8cs_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_act">Act</link>.CC.Say(<emphasis role="stringliteral">&quot;nothingHappens&quot;</emphasis>,&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__act_zap_8cs_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_act">Act</link>.CC.PlaySound(<emphasis role="stringliteral">&quot;rod_empty&quot;</emphasis>,&#32;1f,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__act_zap_8cs_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__act_zap_8cs_source_1l00065"/>00065 &#32;&#32;&#32;&#32;}
<anchor xml:id="__act_zap_8cs_source_1l00066"/>00066 
<anchor xml:id="__act_zap_8cs_source_1l00067"/>00067 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x040010B3&#32;RID:&#32;4275</emphasis>
<anchor xml:id="__act_zap_8cs_source_1l00068"/>00068 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_trait_rod">TraitRod</link>&#32;trait;
<anchor xml:id="__act_zap_8cs_source_1l00069"/>00069 }
</programlisting></section>
