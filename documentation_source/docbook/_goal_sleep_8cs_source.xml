<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__goal_sleep_8cs_source" xml:lang="en-US">
<title>GoalSleep.cs</title>
<indexterm><primary>Elin/GoalSleep.cs</primary></indexterm>
<programlisting linenumbering="unnumbered"><anchor xml:id="__goal_sleep_8cs_source_1l00001"/>00001 <emphasis role="keyword">using&#32;</emphasis>System;
<anchor xml:id="__goal_sleep_8cs_source_1l00002"/>00002 <emphasis role="keyword">using&#32;</emphasis>System.Collections.Generic;
<anchor xml:id="__goal_sleep_8cs_source_1l00003"/>00003 
<anchor xml:id="__goal_sleep_8cs_source_1l00004"/>00004 <emphasis role="comment">//&#32;Token:&#32;0x0200023F&#32;RID:&#32;575</emphasis>
<anchor xml:id="__goal_sleep_8cs_source_1l00005"/><link linkend="_class_goal_sleep">00005</link> <emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_goal_sleep">GoalSleep</link>&#32;:&#32;<link linkend="_class_goal">Goal</link>
<anchor xml:id="__goal_sleep_8cs_source_1l00006"/>00006 {
<anchor xml:id="__goal_sleep_8cs_source_1l00007"/>00007 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06001003&#32;RID:&#32;4099&#32;RVA:&#32;0x000727C7&#32;File&#32;Offset:&#32;0x000709C7</emphasis>
<anchor xml:id="__goal_sleep_8cs_source_1l00008"/>00008 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;IEnumerable&lt;<link linkend="_class_a_i_act">AIAct</link>.Status&gt;&#32;Run()
<anchor xml:id="__goal_sleep_8cs_source_1l00009"/>00009 &#32;&#32;&#32;&#32;{
<anchor xml:id="__goal_sleep_8cs_source_1l00010"/>00010 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i;
<anchor xml:id="__goal_sleep_8cs_source_1l00011"/>00011 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;num;
<anchor xml:id="__goal_sleep_8cs_source_1l00012"/>00012 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;5;&#32;i&#32;=&#32;num&#32;+&#32;1)
<anchor xml:id="__goal_sleep_8cs_source_1l00013"/>00013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__goal_sleep_8cs_source_1l00014"/>00014 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;yield&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_a_i_act">AIAct</link>.Status.Running;
<anchor xml:id="__goal_sleep_8cs_source_1l00015"/>00015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num&#32;=&#32;i;
<anchor xml:id="__goal_sleep_8cs_source_1l00016"/>00016 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__goal_sleep_8cs_source_1l00017"/>00017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_trait_bed">TraitBed</link>&#32;traitBed&#32;=&#32;this.owner.FindBed();
<anchor xml:id="__goal_sleep_8cs_source_1l00018"/>00018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(traitBed&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__goal_sleep_8cs_source_1l00019"/>00019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__goal_sleep_8cs_source_1l00020"/>00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;traitBed&#32;=&#32;this.owner.TryAssignBed();
<anchor xml:id="__goal_sleep_8cs_source_1l00021"/>00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__goal_sleep_8cs_source_1l00022"/>00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(traitBed&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__goal_sleep_8cs_source_1l00023"/>00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__goal_sleep_8cs_source_1l00024"/>00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.bed&#32;=&#32;traitBed.owner.Thing;
<anchor xml:id="__goal_sleep_8cs_source_1l00025"/>00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__goal_sleep_8cs_source_1l00026"/>00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.bed&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__goal_sleep_8cs_source_1l00027"/>00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__goal_sleep_8cs_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;yield&#32;<emphasis role="keywordflow">return</emphasis>&#32;base.DoGoto(this.bed,&#32;<emphasis role="keyword">new</emphasis>&#32;Func&lt;AIAct.Status&gt;(base.KeepRunning));
<anchor xml:id="__goal_sleep_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__goal_sleep_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.owner.memberType&#32;!=&#32;FactionMemberType.Livestock)
<anchor xml:id="__goal_sleep_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__goal_sleep_8cs_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_base_area">BaseArea</link>&#32;baseArea&#32;=&#32;<link linkend="_class_e_class">EClass</link>._map.FindPublicArea();
<anchor xml:id="__goal_sleep_8cs_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(baseArea&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__goal_sleep_8cs_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__goal_sleep_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;yield&#32;<emphasis role="keywordflow">return</emphasis>&#32;base.DoGoto(baseArea.GetRandomFreePos(),&#32;0,&#32;<emphasis role="keyword">false</emphasis>,&#32;<emphasis role="keyword">new</emphasis>&#32;Func&lt;AIAct.Status&gt;(base.KeepRunning));
<anchor xml:id="__goal_sleep_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__goal_sleep_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__goal_sleep_8cs_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;i&#32;=&#32;0;
<anchor xml:id="__goal_sleep_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(i&#32;&lt;&#32;5&#32;&amp;&amp;&#32;this.owner.pos.HasMultipleChara)
<anchor xml:id="__goal_sleep_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__goal_sleep_8cs_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.owner.MoveRandom();
<anchor xml:id="__goal_sleep_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;yield&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_a_i_act">AIAct</link>.Status.Running;
<anchor xml:id="__goal_sleep_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num&#32;=&#32;i;
<anchor xml:id="__goal_sleep_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;i&#32;=&#32;num&#32;+&#32;1;
<anchor xml:id="__goal_sleep_8cs_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__goal_sleep_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.owner.AddCondition&lt;<link linkend="_class_con_sleep">ConSleep</link>&gt;(3000,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__goal_sleep_8cs_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;yield&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_a_i_act">AIAct</link>.Status.Running;
<anchor xml:id="__goal_sleep_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;yield&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__goal_sleep_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;}
<anchor xml:id="__goal_sleep_8cs_source_1l00050"/>00050 
<anchor xml:id="__goal_sleep_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06001004&#32;RID:&#32;4100&#32;RVA:&#32;0x000727D8&#32;File&#32;Offset:&#32;0x000709D8</emphasis>
<anchor xml:id="__goal_sleep_8cs_source_1l00052"/>00052 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnSimulatePosition()
<anchor xml:id="__goal_sleep_8cs_source_1l00053"/>00053 &#32;&#32;&#32;&#32;{
<anchor xml:id="__goal_sleep_8cs_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.owner.AddCondition&lt;<link linkend="_class_con_sleep">ConSleep</link>&gt;(2000,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__goal_sleep_8cs_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_trait_bed">TraitBed</link>&#32;traitBed&#32;=&#32;this.owner.FindBed();
<anchor xml:id="__goal_sleep_8cs_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.bed&#32;=&#32;(((traitBed&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;?&#32;traitBed.owner.Thing&#32;:&#32;<emphasis role="keyword">null</emphasis>)&#32;??&#32;<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__goal_sleep_8cs_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.bed&#32;==&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;<link linkend="_class_e_class">EClass</link>._zone.IsPCFaction)
<anchor xml:id="__goal_sleep_8cs_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__goal_sleep_8cs_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.owner.TryAssignBed();
<anchor xml:id="__goal_sleep_8cs_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__goal_sleep_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.bed&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;!this.bed.pos.HasChara)
<anchor xml:id="__goal_sleep_8cs_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__goal_sleep_8cs_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.owner.MoveImmediate(this.bed.pos,&#32;<emphasis role="keyword">true</emphasis>,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__goal_sleep_8cs_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__goal_sleep_8cs_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__goal_sleep_8cs_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_base_area">BaseArea</link>&#32;baseArea&#32;=&#32;<link linkend="_class_e_class">EClass</link>._map.FindPublicArea();
<anchor xml:id="__goal_sleep_8cs_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(baseArea&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__goal_sleep_8cs_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__goal_sleep_8cs_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.owner.MoveImmediate(baseArea.GetRandomFreePos(),&#32;<emphasis role="keyword">true</emphasis>,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__goal_sleep_8cs_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__goal_sleep_8cs_source_1l00071"/>00071 &#32;&#32;&#32;&#32;}
<anchor xml:id="__goal_sleep_8cs_source_1l00072"/>00072 
<anchor xml:id="__goal_sleep_8cs_source_1l00073"/>00073 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04000D9A&#32;RID:&#32;3482</emphasis>
<anchor xml:id="__goal_sleep_8cs_source_1l00074"/>00074 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;timer&#32;=&#32;20;
<anchor xml:id="__goal_sleep_8cs_source_1l00075"/>00075 
<anchor xml:id="__goal_sleep_8cs_source_1l00076"/>00076 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04000D9B&#32;RID:&#32;3483</emphasis>
<anchor xml:id="__goal_sleep_8cs_source_1l00077"/>00077 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_thing">Thing</link>&#32;bed;
<anchor xml:id="__goal_sleep_8cs_source_1l00078"/>00078 }
</programlisting></section>
