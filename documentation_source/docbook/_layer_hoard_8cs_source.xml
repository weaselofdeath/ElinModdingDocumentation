<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__layer_hoard_8cs_source" xml:lang="en-US">
<title>LayerHoard.cs</title>
<indexterm><primary>Elin/LayerHoard.cs</primary></indexterm>
<programlisting linenumbering="unnumbered"><anchor xml:id="__layer_hoard_8cs_source_1l00001"/>00001 <emphasis role="keyword">using&#32;</emphasis>System;
<anchor xml:id="__layer_hoard_8cs_source_1l00002"/>00002 <emphasis role="keyword">using&#32;</emphasis>System.Linq;
<anchor xml:id="__layer_hoard_8cs_source_1l00003"/>00003 <emphasis role="keyword">using&#32;</emphasis>UnityEngine;
<anchor xml:id="__layer_hoard_8cs_source_1l00004"/>00004 <emphasis role="keyword">using&#32;</emphasis>UnityEngine.UI;
<anchor xml:id="__layer_hoard_8cs_source_1l00005"/>00005 
<anchor xml:id="__layer_hoard_8cs_source_1l00006"/>00006 <emphasis role="comment">//&#32;Token:&#32;0x0200054D&#32;RID:&#32;1357</emphasis>
<anchor xml:id="__layer_hoard_8cs_source_1l00007"/><link linkend="_class_layer_hoard">00007</link> <emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_layer_hoard">LayerHoard</link>&#32;:&#32;<link linkend="_class_e_layer">ELayer</link>
<anchor xml:id="__layer_hoard_8cs_source_1l00008"/>00008 {
<anchor xml:id="__layer_hoard_8cs_source_1l00009"/>00009 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x17000B22&#32;RID:&#32;2850</emphasis>
<anchor xml:id="__layer_hoard_8cs_source_1l00010"/>00010 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;(get)&#32;Token:&#32;0x060024E0&#32;RID:&#32;9440&#32;RVA:&#32;0x000D044D&#32;File&#32;Offset:&#32;0x000CE64D</emphasis>
<anchor xml:id="__layer_hoard_8cs_source_1l00011"/>00011 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_hoard">Hoard</link>&#32;hoard
<anchor xml:id="__layer_hoard_8cs_source_1l00012"/>00012 &#32;&#32;&#32;&#32;{
<anchor xml:id="__layer_hoard_8cs_source_1l00013"/>00013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
<anchor xml:id="__layer_hoard_8cs_source_1l00014"/>00014 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__layer_hoard_8cs_source_1l00015"/>00015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_e_layer">ELayer</link>.player.hoard;
<anchor xml:id="__layer_hoard_8cs_source_1l00016"/>00016 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__layer_hoard_8cs_source_1l00017"/>00017 &#32;&#32;&#32;&#32;}
<anchor xml:id="__layer_hoard_8cs_source_1l00018"/>00018 
<anchor xml:id="__layer_hoard_8cs_source_1l00019"/>00019 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x060024E1&#32;RID:&#32;9441&#32;RVA:&#32;0x000D045C&#32;File&#32;Offset:&#32;0x000CE65C</emphasis>
<anchor xml:id="__layer_hoard_8cs_source_1l00020"/>00020 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnAfterInit()
<anchor xml:id="__layer_hoard_8cs_source_1l00021"/>00021 &#32;&#32;&#32;&#32;{
<anchor xml:id="__layer_hoard_8cs_source_1l00022"/>00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_e_layer">ELayer</link>.sources.collectibles.Init();
<anchor xml:id="__layer_hoard_8cs_source_1l00023"/>00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_msg">Msg</link>.TalkHomeMemeber(<emphasis role="stringliteral">&quot;layerHoard&quot;</emphasis>);
<anchor xml:id="__layer_hoard_8cs_source_1l00024"/>00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_action_mode">ActionMode</link>.NoMap.Activate(<emphasis role="keyword">true</emphasis>,&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__layer_hoard_8cs_source_1l00025"/>00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.actor&#32;=&#32;Util.Instantiate&lt;<link linkend="_class_hoard_actor">HoardActor</link>&gt;(this.actor,&#32;<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__layer_hoard_8cs_source_1l00026"/>00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.hoard.items.Count&#32;==&#32;0)
<anchor xml:id="__layer_hoard_8cs_source_1l00027"/>00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__layer_hoard_8cs_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.OnClickClear();
<anchor xml:id="__layer_hoard_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__layer_hoard_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__layer_hoard_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__layer_hoard_8cs_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.Reset();
<anchor xml:id="__layer_hoard_8cs_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__layer_hoard_8cs_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;base.InvokeRepeating(<emphasis role="stringliteral">&quot;UpdateMousePos&quot;</emphasis>,&#32;0f,&#32;0.1f);
<anchor xml:id="__layer_hoard_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_e_layer">ELayer</link>.debug.debugHoard)
<anchor xml:id="__layer_hoard_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__layer_hoard_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UIButton[]&#32;array&#32;=&#32;this.debugButtons;
<anchor xml:id="__layer_hoard_8cs_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;array.Length;&#32;i++)
<anchor xml:id="__layer_hoard_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__layer_hoard_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;array[i].SetActive(<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__layer_hoard_8cs_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__layer_hoard_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__layer_hoard_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.layoutMenu.RebuildLayout(<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__layer_hoard_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SoundManager.disableSpread&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__layer_hoard_8cs_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ELayer.Sound.zone.enabled&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__layer_hoard_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ELayer.scene.cam.enabled&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__layer_hoard_8cs_source_1l00047"/>00047 &#32;&#32;&#32;&#32;}
<anchor xml:id="__layer_hoard_8cs_source_1l00048"/>00048 
<anchor xml:id="__layer_hoard_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x060024E2&#32;RID:&#32;9442&#32;RVA:&#32;0x000D0534&#32;File&#32;Offset:&#32;0x000CE734</emphasis>
<anchor xml:id="__layer_hoard_8cs_source_1l00050"/>00050 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Reset()
<anchor xml:id="__layer_hoard_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;{
<anchor xml:id="__layer_hoard_8cs_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.actor.Activate();
<anchor xml:id="__layer_hoard_8cs_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.textMode.text&#32;=&#32;<emphasis role="stringliteral">&quot;[&quot;</emphasis>&#32;+&#32;(<emphasis role="stringliteral">&quot;h_&quot;</emphasis>&#32;+&#32;this.hoard.mode.ToString()).lang()&#32;+&#32;<emphasis role="stringliteral">&quot;]&quot;</emphasis>;
<anchor xml:id="__layer_hoard_8cs_source_1l00054"/>00054 &#32;&#32;&#32;&#32;}
<anchor xml:id="__layer_hoard_8cs_source_1l00055"/>00055 
<anchor xml:id="__layer_hoard_8cs_source_1l00056"/>00056 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x060024E3&#32;RID:&#32;9443&#32;RVA:&#32;0x000D058C&#32;File&#32;Offset:&#32;0x000CE78C</emphasis>
<anchor xml:id="__layer_hoard_8cs_source_1l00057"/>00057 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnKill()
<anchor xml:id="__layer_hoard_8cs_source_1l00058"/>00058 &#32;&#32;&#32;&#32;{
<anchor xml:id="__layer_hoard_8cs_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.actor.Clear();
<anchor xml:id="__layer_hoard_8cs_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityEngine.Object.DestroyImmediate(this.actor.gameObject);
<anchor xml:id="__layer_hoard_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_action_mode">ActionMode</link>.DefaultMode.Activate(<emphasis role="keyword">true</emphasis>,&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__layer_hoard_8cs_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ELayer.ui.cg.alpha&#32;=&#32;1f;
<anchor xml:id="__layer_hoard_8cs_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ELayer.Sound.maxSounds&#32;=&#32;<link linkend="_class_e_layer">ELayer</link>.Sound._maxSounds;
<anchor xml:id="__layer_hoard_8cs_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SoundManager.disableSpread&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__layer_hoard_8cs_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ELayer.Sound.zone.enabled&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__layer_hoard_8cs_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ELayer.scene.cam.enabled&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__layer_hoard_8cs_source_1l00067"/>00067 &#32;&#32;&#32;&#32;}
<anchor xml:id="__layer_hoard_8cs_source_1l00068"/>00068 
<anchor xml:id="__layer_hoard_8cs_source_1l00069"/>00069 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x060024E4&#32;RID:&#32;9444&#32;RVA:&#32;0x000D0610&#32;File&#32;Offset:&#32;0x000CE810</emphasis>
<anchor xml:id="__layer_hoard_8cs_source_1l00070"/>00070 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Update()
<anchor xml:id="__layer_hoard_8cs_source_1l00071"/>00071 &#32;&#32;&#32;&#32;{
<anchor xml:id="__layer_hoard_8cs_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.textScore.gameObject.activeSelf&#32;&amp;&amp;&#32;<emphasis role="keyword">this</emphasis>.hoard.score&#32;!=&#32;<emphasis role="keyword">this</emphasis>.lastScore)
<anchor xml:id="__layer_hoard_8cs_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__layer_hoard_8cs_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.textScore.text&#32;=&#32;this.hoard.score.ToString()&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;/&#32;&quot;</emphasis>&#32;+&#32;this.hoard.hiScore.ToString();
<anchor xml:id="__layer_hoard_8cs_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.lastScore&#32;=&#32;this.hoard.score;
<anchor xml:id="__layer_hoard_8cs_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__layer_hoard_8cs_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Input.GetMouseButtonDown(2))
<anchor xml:id="__layer_hoard_8cs_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__layer_hoard_8cs_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.Reset();
<anchor xml:id="__layer_hoard_8cs_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__layer_hoard_8cs_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_e_layer">ELayer</link>.debug.enable)
<anchor xml:id="__layer_hoard_8cs_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__layer_hoard_8cs_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Input.GetKeyDown(KeyCode.H))
<anchor xml:id="__layer_hoard_8cs_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__layer_hoard_8cs_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.hoard.hentai&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__layer_hoard_8cs_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.hoard.Add(<emphasis role="stringliteral">&quot;lulu&quot;</emphasis>,&#32;2,&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__layer_hoard_8cs_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.hoard.Add(<emphasis role="stringliteral">&quot;tentacle&quot;</emphasis>,&#32;1,&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__layer_hoard_8cs_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.hoard.Add(<emphasis role="stringliteral">&quot;tentacle2&quot;</emphasis>,&#32;1,&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__layer_hoard_8cs_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.hoard.Add(<emphasis role="stringliteral">&quot;tentacle3&quot;</emphasis>,&#32;1,&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__layer_hoard_8cs_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.hoard.Add(<emphasis role="stringliteral">&quot;tentacle4&quot;</emphasis>,&#32;2,&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__layer_hoard_8cs_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_msg">Msg</link>.SayPic(<emphasis role="stringliteral">&quot;UN_farris&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;変態だー！&quot;</emphasis>,&#32;<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__layer_hoard_8cs_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.Reset();
<anchor xml:id="__layer_hoard_8cs_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__layer_hoard_8cs_source_1l00094"/>00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Input.GetKeyDown(KeyCode.M))
<anchor xml:id="__layer_hoard_8cs_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__layer_hoard_8cs_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">try</emphasis>
<anchor xml:id="__layer_hoard_8cs_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__layer_hoard_8cs_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_collectible_actor">CollectibleActor</link>&#32;collectibleActor&#32;=&#32;this.actor.actors.FirstOrDefault((<link linkend="_class_collectible_actor">CollectibleActor</link>&#32;a)&#32;=&gt;&#32;a.item.id&#32;==&#32;<emphasis role="stringliteral">&quot;mani&quot;</emphasis>);
<anchor xml:id="__layer_hoard_8cs_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(collectibleActor&#32;&amp;&amp;&#32;collectibleActor.gameObject.activeInHierarchy)
<anchor xml:id="__layer_hoard_8cs_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__layer_hoard_8cs_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_msg">Msg</link>.Nerun(<emphasis role="stringliteral">&quot;あ・・・&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;UN_nerun&quot;</emphasis>);
<anchor xml:id="__layer_hoard_8cs_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_rigid_explode">RigidExplode</link>&#32;rigidExplode&#32;=&#32;collectibleActor.gameObject.AddComponent&lt;<link linkend="_class_rigid_explode">RigidExplode</link>&gt;();
<anchor xml:id="__layer_hoard_8cs_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rigidExplode.particle&#32;=&#32;this.actor.psExplode;
<anchor xml:id="__layer_hoard_8cs_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rigidExplode.radius&#32;*=&#32;10f;
<anchor xml:id="__layer_hoard_8cs_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rigidExplode.force&#32;*=&#32;10f;
<anchor xml:id="__layer_hoard_8cs_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rigidExplode.chance&#32;=&#32;1f;
<anchor xml:id="__layer_hoard_8cs_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rigidExplode.intervalMin&#32;=&#32;(rigidExplode.intervalMax&#32;=&#32;2f);
<anchor xml:id="__layer_hoard_8cs_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rigidExplode.rb&#32;=&#32;collectibleActor.GetComponent&lt;Rigidbody2D&gt;();
<anchor xml:id="__layer_hoard_8cs_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.actor.updates.Add(rigidExplode);
<anchor xml:id="__layer_hoard_8cs_source_1l00110"/>00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__layer_hoard_8cs_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__layer_hoard_8cs_source_1l00112"/>00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">catch</emphasis>
<anchor xml:id="__layer_hoard_8cs_source_1l00113"/>00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__layer_hoard_8cs_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__layer_hoard_8cs_source_1l00115"/>00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__layer_hoard_8cs_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__layer_hoard_8cs_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UIButton&#32;componentOf&#32;=&#32;InputModuleEX.GetComponentOf&lt;UIButton&gt;();
<anchor xml:id="__layer_hoard_8cs_source_1l00118"/>00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_e_layer">ELayer</link>.ui.GetTopLayer()&#32;!=&#32;<emphasis role="keyword">this</emphasis>&#32;||&#32;(componentOf&#32;&amp;&amp;&#32;componentOf.transform.IsChildOf(base.transform))&#32;||&#32;<emphasis role="keyword">this</emphasis>.hasMouseMoved)
<anchor xml:id="__layer_hoard_8cs_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__layer_hoard_8cs_source_1l00120"/>00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.idleTimer&#32;=&#32;0f;
<anchor xml:id="__layer_hoard_8cs_source_1l00121"/>00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.v&#32;=&#32;1;
<anchor xml:id="__layer_hoard_8cs_source_1l00122"/>00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__layer_hoard_8cs_source_1l00123"/>00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__layer_hoard_8cs_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__layer_hoard_8cs_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.idleTimer&#32;+=&#32;Time.deltaTime;
<anchor xml:id="__layer_hoard_8cs_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.idleTimer&#32;&gt;&#32;1f)
<anchor xml:id="__layer_hoard_8cs_source_1l00127"/>00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__layer_hoard_8cs_source_1l00128"/>00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.v&#32;=&#32;-1;
<anchor xml:id="__layer_hoard_8cs_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__layer_hoard_8cs_source_1l00130"/>00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__layer_hoard_8cs_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(this.cg&#32;??&#32;<link linkend="_class_e_layer">ELayer</link>.ui.cg).alpha&#32;+=&#32;(<emphasis role="keywordtype">float</emphasis>)this.v&#32;*&#32;Time.deltaTime&#32;*&#32;this.fadeSpeed;
<anchor xml:id="__layer_hoard_8cs_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ELayer.Sound.maxSounds&#32;=&#32;this.hoard.maxSounds;
<anchor xml:id="__layer_hoard_8cs_source_1l00133"/>00133 &#32;&#32;&#32;&#32;}
<anchor xml:id="__layer_hoard_8cs_source_1l00134"/>00134 
<anchor xml:id="__layer_hoard_8cs_source_1l00135"/>00135 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x060024E5&#32;RID:&#32;9445&#32;RVA:&#32;0x000D08E8&#32;File&#32;Offset:&#32;0x000CEAE8</emphasis>
<anchor xml:id="__layer_hoard_8cs_source_1l00136"/>00136 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;UpdateMousePos()
<anchor xml:id="__layer_hoard_8cs_source_1l00137"/>00137 &#32;&#32;&#32;&#32;{
<anchor xml:id="__layer_hoard_8cs_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.hasMouseMoved&#32;=&#32;((Input.mousePosition&#32;-&#32;this.lastMousePos).magnitude&#32;&gt;&#32;15f);
<anchor xml:id="__layer_hoard_8cs_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.lastMousePos&#32;=&#32;Input.mousePosition;
<anchor xml:id="__layer_hoard_8cs_source_1l00140"/>00140 &#32;&#32;&#32;&#32;}
<anchor xml:id="__layer_hoard_8cs_source_1l00141"/>00141 
<anchor xml:id="__layer_hoard_8cs_source_1l00142"/>00142 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x060024E6&#32;RID:&#32;9446&#32;RVA:&#32;0x000D0928&#32;File&#32;Offset:&#32;0x000CEB28</emphasis>
<anchor xml:id="__layer_hoard_8cs_source_1l00143"/>00143 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;AddRandom()
<anchor xml:id="__layer_hoard_8cs_source_1l00144"/>00144 &#32;&#32;&#32;&#32;{
<anchor xml:id="__layer_hoard_8cs_source_1l00145"/>00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_source_collectible">SourceCollectible</link>.<link linkend="_class_source_collectible_1_1_row">Row</link>&#32;row&#32;in&#32;<link linkend="_class_e_layer">ELayer</link>.sources.collectibles.rows)
<anchor xml:id="__layer_hoard_8cs_source_1l00146"/>00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__layer_hoard_8cs_source_1l00147"/>00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!row.tag.Contains(<emphasis role="stringliteral">&quot;noSpawn&quot;</emphasis>))
<anchor xml:id="__layer_hoard_8cs_source_1l00148"/>00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__layer_hoard_8cs_source_1l00149"/>00149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;num&#32;=&#32;(row.num&#32;==&#32;0)&#32;?&#32;10&#32;:&#32;row.num;
<anchor xml:id="__layer_hoard_8cs_source_1l00150"/>00150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.hoard.Add(row.id,&#32;<link linkend="_class_e_layer">ELayer</link>.rnd(<link linkend="_class_e_layer">ELayer</link>.rnd(<link linkend="_class_e_layer">ELayer</link>.rnd(<link linkend="_class_e_layer">ELayer</link>.rnd(num&#32;+&#32;1)&#32;+&#32;1)&#32;+&#32;1)&#32;+&#32;1),&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__layer_hoard_8cs_source_1l00151"/>00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__layer_hoard_8cs_source_1l00152"/>00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__layer_hoard_8cs_source_1l00153"/>00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.Reset();
<anchor xml:id="__layer_hoard_8cs_source_1l00154"/>00154 &#32;&#32;&#32;&#32;}
<anchor xml:id="__layer_hoard_8cs_source_1l00155"/>00155 
<anchor xml:id="__layer_hoard_8cs_source_1l00156"/>00156 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x060024E7&#32;RID:&#32;9447&#32;RVA:&#32;0x000D09D8&#32;File&#32;Offset:&#32;0x000CEBD8</emphasis>
<anchor xml:id="__layer_hoard_8cs_source_1l00157"/>00157 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Generate()
<anchor xml:id="__layer_hoard_8cs_source_1l00158"/>00158 &#32;&#32;&#32;&#32;{
<anchor xml:id="__layer_hoard_8cs_source_1l00159"/>00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.hoard.Clear();
<anchor xml:id="__layer_hoard_8cs_source_1l00160"/>00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_source_collectible">SourceCollectible</link>.<link linkend="_class_source_collectible_1_1_row">Row</link>&#32;row&#32;in&#32;<link linkend="_class_e_layer">ELayer</link>.sources.collectibles.rows)
<anchor xml:id="__layer_hoard_8cs_source_1l00161"/>00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__layer_hoard_8cs_source_1l00162"/>00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!row.tag.Contains(<emphasis role="stringliteral">&quot;noSpawn&quot;</emphasis>))
<anchor xml:id="__layer_hoard_8cs_source_1l00163"/>00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__layer_hoard_8cs_source_1l00164"/>00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.hoard.Add(row.id);
<anchor xml:id="__layer_hoard_8cs_source_1l00165"/>00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__layer_hoard_8cs_source_1l00166"/>00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__layer_hoard_8cs_source_1l00167"/>00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.hoard.mode&#32;=&#32;<link linkend="_class_hoard">Hoard</link>.Mode.lux;
<anchor xml:id="__layer_hoard_8cs_source_1l00168"/>00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.Reset();
<anchor xml:id="__layer_hoard_8cs_source_1l00169"/>00169 &#32;&#32;&#32;&#32;}
<anchor xml:id="__layer_hoard_8cs_source_1l00170"/>00170 
<anchor xml:id="__layer_hoard_8cs_source_1l00171"/>00171 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x060024E8&#32;RID:&#32;9448&#32;RVA:&#32;0x000D0A70&#32;File&#32;Offset:&#32;0x000CEC70</emphasis>
<anchor xml:id="__layer_hoard_8cs_source_1l00172"/>00172 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnClickClear()
<anchor xml:id="__layer_hoard_8cs_source_1l00173"/>00173 &#32;&#32;&#32;&#32;{
<anchor xml:id="__layer_hoard_8cs_source_1l00174"/>00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.hoard.Clear();
<anchor xml:id="__layer_hoard_8cs_source_1l00175"/>00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.hoard.Add(<emphasis role="stringliteral">&quot;gold&quot;</emphasis>,&#32;1,&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__layer_hoard_8cs_source_1l00176"/>00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.Reset();
<anchor xml:id="__layer_hoard_8cs_source_1l00177"/>00177 &#32;&#32;&#32;&#32;}
<anchor xml:id="__layer_hoard_8cs_source_1l00178"/>00178 
<anchor xml:id="__layer_hoard_8cs_source_1l00179"/>00179 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x060024E9&#32;RID:&#32;9449&#32;RVA:&#32;0x000D0A98&#32;File&#32;Offset:&#32;0x000CEC98</emphasis>
<anchor xml:id="__layer_hoard_8cs_source_1l00180"/>00180 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnClickNextMode()
<anchor xml:id="__layer_hoard_8cs_source_1l00181"/>00181 &#32;&#32;&#32;&#32;{
<anchor xml:id="__layer_hoard_8cs_source_1l00182"/>00182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.hoard.mode&#32;=&#32;this.hoard.mode.NextEnum&lt;<link linkend="_class_hoard">Hoard</link>.Mode&gt;();
<anchor xml:id="__layer_hoard_8cs_source_1l00183"/>00183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_msg">Msg</link>.Nerun(<emphasis role="stringliteral">&quot;h_filter&quot;</emphasis>.lang((<emphasis role="stringliteral">&quot;h_&quot;</emphasis>&#32;+&#32;this.hoard.mode.ToString()).lang(),&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keyword">null</emphasis>),&#32;<emphasis role="stringliteral">&quot;UN_nerun&quot;</emphasis>);
<anchor xml:id="__layer_hoard_8cs_source_1l00184"/>00184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.Reset();
<anchor xml:id="__layer_hoard_8cs_source_1l00185"/>00185 &#32;&#32;&#32;&#32;}
<anchor xml:id="__layer_hoard_8cs_source_1l00186"/>00186 
<anchor xml:id="__layer_hoard_8cs_source_1l00187"/>00187 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x060024EA&#32;RID:&#32;9450&#32;RVA:&#32;0x000D0B04&#32;File&#32;Offset:&#32;0x000CED04</emphasis>
<anchor xml:id="__layer_hoard_8cs_source_1l00188"/>00188 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnClickConfig()
<anchor xml:id="__layer_hoard_8cs_source_1l00189"/>00189 &#32;&#32;&#32;&#32;{
<anchor xml:id="__layer_hoard_8cs_source_1l00190"/>00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UIContextMenu&#32;uicontextMenu&#32;=&#32;<link linkend="_class_e_layer">ELayer</link>.ui.contextMenu.Create(<emphasis role="stringliteral">&quot;ContextHoard&quot;</emphasis>,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__layer_hoard_8cs_source_1l00191"/>00191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;max&#32;=&#32;this.actor.bgs.Length&#32;-&#32;1;
<anchor xml:id="__layer_hoard_8cs_source_1l00192"/>00192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uicontextMenu.AddSlider(<emphasis role="stringliteral">&quot;room&quot;</emphasis>,&#32;(<emphasis role="keywordtype">float</emphasis>&#32;n)&#32;=&gt;&#32;n.ToString()&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;/&#32;&quot;</emphasis>&#32;+&#32;max.ToString(),&#32;(<emphasis role="keywordtype">float</emphasis>)<emphasis role="keyword">this</emphasis>.hoard.bg,&#32;delegate(<emphasis role="keywordtype">float</emphasis>&#32;v)
<anchor xml:id="__layer_hoard_8cs_source_1l00193"/>00193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__layer_hoard_8cs_source_1l00194"/>00194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.hoard.bg&#32;=&#32;(int)v;
<anchor xml:id="__layer_hoard_8cs_source_1l00195"/>00195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.actor.RefreshBG();
<anchor xml:id="__layer_hoard_8cs_source_1l00196"/>00196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;},&#32;0f,&#32;(float)max,&#32;<emphasis role="keyword">true</emphasis>,&#32;<emphasis role="keyword">false</emphasis>,&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__layer_hoard_8cs_source_1l00197"/>00197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uicontextMenu.AddSlider(<emphasis role="stringliteral">&quot;reflection&quot;</emphasis>,&#32;(<emphasis role="keywordtype">float</emphasis>&#32;n)&#32;=&gt;&#32;n.ToString()&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;%&quot;</emphasis>,&#32;(<emphasis role="keywordtype">float</emphasis>)<emphasis role="keyword">this</emphasis>.hoard.reflection,&#32;delegate(<emphasis role="keywordtype">float</emphasis>&#32;v)
<anchor xml:id="__layer_hoard_8cs_source_1l00198"/>00198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__layer_hoard_8cs_source_1l00199"/>00199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.hoard.reflection&#32;=&#32;(int)v;
<anchor xml:id="__layer_hoard_8cs_source_1l00200"/>00200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.actor.RefreshBG();
<anchor xml:id="__layer_hoard_8cs_source_1l00201"/>00201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;},&#32;0f,&#32;300f,&#32;<emphasis role="keyword">true</emphasis>,&#32;<emphasis role="keyword">false</emphasis>,&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__layer_hoard_8cs_source_1l00202"/>00202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uicontextMenu.AddSlider(<emphasis role="stringliteral">&quot;maxSounds&quot;</emphasis>,&#32;(<emphasis role="keywordtype">float</emphasis>&#32;n)&#32;=&gt;&#32;n.ToString()&#32;??&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>,&#32;(<emphasis role="keywordtype">float</emphasis>)<emphasis role="keyword">this</emphasis>.hoard.maxSounds,&#32;delegate(<emphasis role="keywordtype">float</emphasis>&#32;v)
<anchor xml:id="__layer_hoard_8cs_source_1l00203"/>00203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__layer_hoard_8cs_source_1l00204"/>00204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.hoard.maxSounds&#32;=&#32;(int)v;
<anchor xml:id="__layer_hoard_8cs_source_1l00205"/>00205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;},&#32;0f,&#32;64f,&#32;<emphasis role="keyword">true</emphasis>,&#32;<emphasis role="keyword">false</emphasis>,&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__layer_hoard_8cs_source_1l00206"/>00206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uicontextMenu.AddSlider(<emphasis role="stringliteral">&quot;volume&quot;</emphasis>,&#32;(<emphasis role="keywordtype">float</emphasis>&#32;n)&#32;=&gt;&#32;n.ToString()&#32;??&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>,&#32;(<emphasis role="keywordtype">float</emphasis>)<emphasis role="keyword">this</emphasis>.hoard.volume,&#32;delegate(<emphasis role="keywordtype">float</emphasis>&#32;v)
<anchor xml:id="__layer_hoard_8cs_source_1l00207"/>00207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__layer_hoard_8cs_source_1l00208"/>00208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.hoard.volume&#32;=&#32;(int)v;
<anchor xml:id="__layer_hoard_8cs_source_1l00209"/>00209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;},&#32;0f,&#32;200f,&#32;<emphasis role="keyword">true</emphasis>,&#32;<emphasis role="keyword">false</emphasis>,&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__layer_hoard_8cs_source_1l00210"/>00210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uicontextMenu.AddToggle(<emphasis role="stringliteral">&quot;voice&quot;</emphasis>,&#32;this.hoard.voice,&#32;delegate(<emphasis role="keywordtype">bool</emphasis>&#32;on)
<anchor xml:id="__layer_hoard_8cs_source_1l00211"/>00211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__layer_hoard_8cs_source_1l00212"/>00212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.hoard.voice&#32;=&#32;on;
<anchor xml:id="__layer_hoard_8cs_source_1l00213"/>00213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__layer_hoard_8cs_source_1l00214"/>00214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uicontextMenu.AddToggle(<emphasis role="stringliteral">&quot;shadow&quot;</emphasis>,&#32;this.hoard.shadow,&#32;delegate(<emphasis role="keywordtype">bool</emphasis>&#32;on)
<anchor xml:id="__layer_hoard_8cs_source_1l00215"/>00215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__layer_hoard_8cs_source_1l00216"/>00216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.hoard.shadow&#32;=&#32;on;
<anchor xml:id="__layer_hoard_8cs_source_1l00217"/>00217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__layer_hoard_8cs_source_1l00218"/>00218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uicontextMenu.AddToggle(<emphasis role="stringliteral">&quot;pixelPerfect&quot;</emphasis>,&#32;this.hoard.pixelPerfect,&#32;delegate(<emphasis role="keywordtype">bool</emphasis>&#32;on)
<anchor xml:id="__layer_hoard_8cs_source_1l00219"/>00219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__layer_hoard_8cs_source_1l00220"/>00220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.hoard.pixelPerfect&#32;=&#32;on;
<anchor xml:id="__layer_hoard_8cs_source_1l00221"/>00221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.actor.RefreshZoom();
<anchor xml:id="__layer_hoard_8cs_source_1l00222"/>00222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__layer_hoard_8cs_source_1l00223"/>00223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uicontextMenu.Show();
<anchor xml:id="__layer_hoard_8cs_source_1l00224"/>00224 &#32;&#32;&#32;&#32;}
<anchor xml:id="__layer_hoard_8cs_source_1l00225"/>00225 
<anchor xml:id="__layer_hoard_8cs_source_1l00226"/>00226 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04001462&#32;RID:&#32;5218</emphasis>
<anchor xml:id="__layer_hoard_8cs_source_1l00227"/>00227 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_hoard_actor">HoardActor</link>&#32;actor;
<anchor xml:id="__layer_hoard_8cs_source_1l00228"/>00228 
<anchor xml:id="__layer_hoard_8cs_source_1l00229"/>00229 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04001463&#32;RID:&#32;5219</emphasis>
<anchor xml:id="__layer_hoard_8cs_source_1l00230"/>00230 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;autoList;
<anchor xml:id="__layer_hoard_8cs_source_1l00231"/>00231 
<anchor xml:id="__layer_hoard_8cs_source_1l00232"/>00232 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04001464&#32;RID:&#32;5220</emphasis>
<anchor xml:id="__layer_hoard_8cs_source_1l00233"/>00233 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;autoNum;
<anchor xml:id="__layer_hoard_8cs_source_1l00234"/>00234 
<anchor xml:id="__layer_hoard_8cs_source_1l00235"/>00235 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04001465&#32;RID:&#32;5221</emphasis>
<anchor xml:id="__layer_hoard_8cs_source_1l00236"/>00236 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;idleTimer;
<anchor xml:id="__layer_hoard_8cs_source_1l00237"/>00237 
<anchor xml:id="__layer_hoard_8cs_source_1l00238"/>00238 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04001466&#32;RID:&#32;5222</emphasis>
<anchor xml:id="__layer_hoard_8cs_source_1l00239"/>00239 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;fadeSpeed;
<anchor xml:id="__layer_hoard_8cs_source_1l00240"/>00240 
<anchor xml:id="__layer_hoard_8cs_source_1l00241"/>00241 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04001467&#32;RID:&#32;5223</emphasis>
<anchor xml:id="__layer_hoard_8cs_source_1l00242"/>00242 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;CanvasGroup&#32;cg;
<anchor xml:id="__layer_hoard_8cs_source_1l00243"/>00243 
<anchor xml:id="__layer_hoard_8cs_source_1l00244"/>00244 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04001468&#32;RID:&#32;5224</emphasis>
<anchor xml:id="__layer_hoard_8cs_source_1l00245"/>00245 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;UIText&#32;textMode;
<anchor xml:id="__layer_hoard_8cs_source_1l00246"/>00246 
<anchor xml:id="__layer_hoard_8cs_source_1l00247"/>00247 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04001469&#32;RID:&#32;5225</emphasis>
<anchor xml:id="__layer_hoard_8cs_source_1l00248"/>00248 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;UIText&#32;textScore;
<anchor xml:id="__layer_hoard_8cs_source_1l00249"/>00249 
<anchor xml:id="__layer_hoard_8cs_source_1l00250"/>00250 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x0400146A&#32;RID:&#32;5226</emphasis>
<anchor xml:id="__layer_hoard_8cs_source_1l00251"/>00251 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;UIText&#32;textTime;
<anchor xml:id="__layer_hoard_8cs_source_1l00252"/>00252 
<anchor xml:id="__layer_hoard_8cs_source_1l00253"/>00253 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x0400146B&#32;RID:&#32;5227</emphasis>
<anchor xml:id="__layer_hoard_8cs_source_1l00254"/>00254 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;UIButton[]&#32;debugButtons;
<anchor xml:id="__layer_hoard_8cs_source_1l00255"/>00255 
<anchor xml:id="__layer_hoard_8cs_source_1l00256"/>00256 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x0400146C&#32;RID:&#32;5228</emphasis>
<anchor xml:id="__layer_hoard_8cs_source_1l00257"/>00257 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;LayoutGroup&#32;layoutMenu;
<anchor xml:id="__layer_hoard_8cs_source_1l00258"/>00258 
<anchor xml:id="__layer_hoard_8cs_source_1l00259"/>00259 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x0400146D&#32;RID:&#32;5229</emphasis>
<anchor xml:id="__layer_hoard_8cs_source_1l00260"/>00260 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;lastScore;
<anchor xml:id="__layer_hoard_8cs_source_1l00261"/>00261 
<anchor xml:id="__layer_hoard_8cs_source_1l00262"/>00262 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x0400146E&#32;RID:&#32;5230</emphasis>
<anchor xml:id="__layer_hoard_8cs_source_1l00263"/>00263 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;v;
<anchor xml:id="__layer_hoard_8cs_source_1l00264"/>00264 
<anchor xml:id="__layer_hoard_8cs_source_1l00265"/>00265 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x0400146F&#32;RID:&#32;5231</emphasis>
<anchor xml:id="__layer_hoard_8cs_source_1l00266"/>00266 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Vector3&#32;lastMousePos;
<anchor xml:id="__layer_hoard_8cs_source_1l00267"/>00267 
<anchor xml:id="__layer_hoard_8cs_source_1l00268"/>00268 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04001470&#32;RID:&#32;5232</emphasis>
<anchor xml:id="__layer_hoard_8cs_source_1l00269"/>00269 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;hasMouseMoved;
<anchor xml:id="__layer_hoard_8cs_source_1l00270"/>00270 }
</programlisting></section>
