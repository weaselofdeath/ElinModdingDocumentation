<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__u_i_auto_turn_8cs_source" xml:lang="en-US">
<title>UIAutoTurn.cs</title>
<indexterm><primary>Elin/UIAutoTurn.cs</primary></indexterm>
<programlisting linenumbering="unnumbered"><anchor xml:id="__u_i_auto_turn_8cs_source_1l00001"/>00001 <emphasis role="keyword">using&#32;</emphasis>System;
<anchor xml:id="__u_i_auto_turn_8cs_source_1l00002"/>00002 <emphasis role="keyword">using&#32;</emphasis>UnityEngine;
<anchor xml:id="__u_i_auto_turn_8cs_source_1l00003"/>00003 <emphasis role="keyword">using&#32;</emphasis>UnityEngine.UI;
<anchor xml:id="__u_i_auto_turn_8cs_source_1l00004"/>00004 
<anchor xml:id="__u_i_auto_turn_8cs_source_1l00005"/>00005 <emphasis role="comment">//&#32;Token:&#32;0x020005E2&#32;RID:&#32;1506</emphasis>
<anchor xml:id="__u_i_auto_turn_8cs_source_1l00006"/><link linkend="_class_u_i_auto_turn">00006</link> <emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_u_i_auto_turn">UIAutoTurn</link>&#32;:&#32;<link linkend="_class_e_mono">EMono</link>
<anchor xml:id="__u_i_auto_turn_8cs_source_1l00007"/>00007 {
<anchor xml:id="__u_i_auto_turn_8cs_source_1l00008"/>00008 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002964&#32;RID:&#32;10596&#32;RVA:&#32;0x000E954D&#32;File&#32;Offset:&#32;0x000E774D</emphasis>
<anchor xml:id="__u_i_auto_turn_8cs_source_1l00009"/>00009 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Awake()
<anchor xml:id="__u_i_auto_turn_8cs_source_1l00010"/>00010 &#32;&#32;&#32;&#32;{
<anchor xml:id="__u_i_auto_turn_8cs_source_1l00011"/>00011 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;base.InvokeRepeating(<emphasis role="stringliteral">&quot;_Update&quot;</emphasis>,&#32;0f,&#32;0.05f);
<anchor xml:id="__u_i_auto_turn_8cs_source_1l00012"/>00012 &#32;&#32;&#32;&#32;}
<anchor xml:id="__u_i_auto_turn_8cs_source_1l00013"/>00013 
<anchor xml:id="__u_i_auto_turn_8cs_source_1l00014"/>00014 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002965&#32;RID:&#32;10597&#32;RVA:&#32;0x000E9564&#32;File&#32;Offset:&#32;0x000E7764</emphasis>
<anchor xml:id="__u_i_auto_turn_8cs_source_1l00015"/>00015 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;_Update()
<anchor xml:id="__u_i_auto_turn_8cs_source_1l00016"/>00016 &#32;&#32;&#32;&#32;{
<anchor xml:id="__u_i_auto_turn_8cs_source_1l00017"/>00017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;now&#32;=&#32;0f;
<anchor xml:id="__u_i_auto_turn_8cs_source_1l00018"/>00018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;num&#32;=&#32;0f;
<anchor xml:id="__u_i_auto_turn_8cs_source_1l00019"/>00019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.hint&#32;=&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__u_i_auto_turn_8cs_source_1l00020"/>00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_e_mono">EMono</link>.core.IsGameStarted)
<anchor xml:id="__u_i_auto_turn_8cs_source_1l00021"/>00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__u_i_auto_turn_8cs_source_1l00022"/>00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_e_mono">EMono</link>.pc.WillConsumeTurn())
<anchor xml:id="__u_i_auto_turn_8cs_source_1l00023"/>00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__u_i_auto_turn_8cs_source_1l00024"/>00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num&#32;=&#32;1f;
<anchor xml:id="__u_i_auto_turn_8cs_source_1l00025"/>00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;<link linkend="_class_e_mono">EMono</link>.pc.conditions.Count&#32;-&#32;1;&#32;i&#32;&gt;=&#32;0;&#32;i--)
<anchor xml:id="__u_i_auto_turn_8cs_source_1l00026"/>00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__u_i_auto_turn_8cs_source_1l00027"/>00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_e_mono">EMono</link>.pc.conditions[i].ConsumeTurn)
<anchor xml:id="__u_i_auto_turn_8cs_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__u_i_auto_turn_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.hint&#32;=&#32;<link linkend="_class_e_mono">EMono</link>.pc.conditions[i].GetText().ToTitleCase(<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__u_i_auto_turn_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__u_i_auto_turn_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__u_i_auto_turn_8cs_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__u_i_auto_turn_8cs_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_e_mono">EMono</link>.pc.HasNoGoal)
<anchor xml:id="__u_i_auto_turn_8cs_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__u_i_auto_turn_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_a_i_progress">AIProgress</link>&#32;progress&#32;=&#32;<link linkend="_class_e_mono">EMono</link>.pc.ai.GetProgress();
<anchor xml:id="__u_i_auto_turn_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_e_mono">EMono</link>.pc.ai.IsAutoTurn&#32;||&#32;progress&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__u_i_auto_turn_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__u_i_auto_turn_8cs_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(progress&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__u_i_auto_turn_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__u_i_auto_turn_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.hint&#32;=&#32;progress.TextHint;
<anchor xml:id="__u_i_auto_turn_8cs_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num&#32;=&#32;(float)(progress.ShowProgress&#32;?&#32;progress.MaxProgress&#32;:&#32;0);
<anchor xml:id="__u_i_auto_turn_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;now&#32;=&#32;(float)(progress.ShowProgress&#32;?&#32;progress.progress&#32;:&#32;0);
<anchor xml:id="__u_i_auto_turn_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__u_i_auto_turn_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__u_i_auto_turn_8cs_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__u_i_auto_turn_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num&#32;=&#32;(float)<link linkend="_class_e_mono">EMono</link>.pc.ai.MaxProgress;
<anchor xml:id="__u_i_auto_turn_8cs_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;now&#32;=&#32;(float)(<link linkend="_class_e_mono">EMono</link>.pc.ai.ShowProgress&#32;?&#32;<link linkend="_class_e_mono">EMono</link>.pc.ai.CurrentProgress&#32;:&#32;0);
<anchor xml:id="__u_i_auto_turn_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__u_i_auto_turn_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__u_i_auto_turn_8cs_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__u_i_auto_turn_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__u_i_auto_turn_8cs_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!this.gauge.gameObject.activeSelf&#32;&amp;&#32;num&#32;!=&#32;0f)
<anchor xml:id="__u_i_auto_turn_8cs_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__u_i_auto_turn_8cs_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.gauge.bar.rectTransform.sizeDelta&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector2(0f,&#32;this.gauge.bar.rectTransform.sizeDelta.y);
<anchor xml:id="__u_i_auto_turn_8cs_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__u_i_auto_turn_8cs_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.gauge.SetActive(num&#32;!=&#32;0f);
<anchor xml:id="__u_i_auto_turn_8cs_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(num&#32;==&#32;0f)
<anchor xml:id="__u_i_auto_turn_8cs_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__u_i_auto_turn_8cs_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__u_i_auto_turn_8cs_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__u_i_auto_turn_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.gauge.textNow.SetActive(this.hint&#32;!=&#32;<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__u_i_auto_turn_8cs_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.count++;
<anchor xml:id="__u_i_auto_turn_8cs_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.gauge.UpdateValue(now,&#32;num);
<anchor xml:id="__u_i_auto_turn_8cs_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.hint&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__u_i_auto_turn_8cs_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__u_i_auto_turn_8cs_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.gauge.textNow.SetText(this.hint);
<anchor xml:id="__u_i_auto_turn_8cs_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__u_i_auto_turn_8cs_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.icon.sprite&#32;=&#32;this.iconSprites[this.count&#32;/&#32;5&#32;%&#32;2];
<anchor xml:id="__u_i_auto_turn_8cs_source_1l00069"/>00069 &#32;&#32;&#32;&#32;}
<anchor xml:id="__u_i_auto_turn_8cs_source_1l00070"/>00070 
<anchor xml:id="__u_i_auto_turn_8cs_source_1l00071"/>00071 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x0400174E&#32;RID:&#32;5966</emphasis>
<anchor xml:id="__u_i_auto_turn_8cs_source_1l00072"/>00072 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Image&#32;icon;
<anchor xml:id="__u_i_auto_turn_8cs_source_1l00073"/>00073 
<anchor xml:id="__u_i_auto_turn_8cs_source_1l00074"/>00074 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x0400174F&#32;RID:&#32;5967</emphasis>
<anchor xml:id="__u_i_auto_turn_8cs_source_1l00075"/>00075 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Sprite[]&#32;iconSprites;
<anchor xml:id="__u_i_auto_turn_8cs_source_1l00076"/>00076 
<anchor xml:id="__u_i_auto_turn_8cs_source_1l00077"/>00077 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04001750&#32;RID:&#32;5968</emphasis>
<anchor xml:id="__u_i_auto_turn_8cs_source_1l00078"/>00078 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Gauge&#32;gauge;
<anchor xml:id="__u_i_auto_turn_8cs_source_1l00079"/>00079 
<anchor xml:id="__u_i_auto_turn_8cs_source_1l00080"/>00080 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04001751&#32;RID:&#32;5969</emphasis>
<anchor xml:id="__u_i_auto_turn_8cs_source_1l00081"/>00081 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;hint;
<anchor xml:id="__u_i_auto_turn_8cs_source_1l00082"/>00082 
<anchor xml:id="__u_i_auto_turn_8cs_source_1l00083"/>00083 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04001752&#32;RID:&#32;5970</emphasis>
<anchor xml:id="__u_i_auto_turn_8cs_source_1l00084"/>00084 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;count;
<anchor xml:id="__u_i_auto_turn_8cs_source_1l00085"/>00085 }
</programlisting></section>
