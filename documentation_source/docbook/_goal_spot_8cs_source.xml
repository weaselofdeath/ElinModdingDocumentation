<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__goal_spot_8cs_source" xml:lang="en-US">
<title>GoalSpot.cs</title>
<indexterm><primary>Elin/GoalSpot.cs</primary></indexterm>
<programlisting linenumbering="unnumbered"><anchor xml:id="__goal_spot_8cs_source_1l00001"/>00001 <emphasis role="keyword">using&#32;</emphasis>System;
<anchor xml:id="__goal_spot_8cs_source_1l00002"/>00002 <emphasis role="keyword">using&#32;</emphasis>System.Collections.Generic;
<anchor xml:id="__goal_spot_8cs_source_1l00003"/>00003 
<anchor xml:id="__goal_spot_8cs_source_1l00004"/>00004 <emphasis role="comment">//&#32;Token:&#32;0x02000238&#32;RID:&#32;568</emphasis>
<anchor xml:id="__goal_spot_8cs_source_1l00005"/><link linkend="_class_goal_spot">00005</link> <emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_goal_spot">GoalSpot</link>&#32;:&#32;<link linkend="_class_goal">Goal</link>
<anchor xml:id="__goal_spot_8cs_source_1l00006"/>00006 {
<anchor xml:id="__goal_spot_8cs_source_1l00007"/>00007 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06000FE2&#32;RID:&#32;4066&#32;RVA:&#32;0x0007224B&#32;File&#32;Offset:&#32;0x0007044B</emphasis>
<anchor xml:id="__goal_spot_8cs_source_1l00008"/>00008 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;IEnumerable&lt;<link linkend="_class_a_i_act">AIAct</link>.Status&gt;&#32;Run()
<anchor xml:id="__goal_spot_8cs_source_1l00009"/>00009 &#32;&#32;&#32;&#32;{
<anchor xml:id="__goal_spot_8cs_source_1l00010"/>00010 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_trait">Trait</link>&#32;random&#32;=&#32;<link linkend="_class_e_class">EClass</link>._map.Installed.traits.GetTraitSet&lt;<link linkend="_class_trait_spot_search">TraitSpotSearch</link>&gt;().GetRandom();
<anchor xml:id="__goal_spot_8cs_source_1l00011"/>00011 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(random&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__goal_spot_8cs_source_1l00012"/>00012 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__goal_spot_8cs_source_1l00013"/>00013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;yield&#32;<emphasis role="keywordflow">return</emphasis>&#32;base.DoGoto(random.GetRandomPoint(<emphasis role="keyword">null</emphasis>),&#32;0,&#32;<emphasis role="keyword">false</emphasis>,&#32;<emphasis role="keyword">new</emphasis>&#32;Func&lt;AIAct.Status&gt;(<emphasis role="keyword">this</emphasis>.Cancel));
<anchor xml:id="__goal_spot_8cs_source_1l00014"/>00014 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.owner.SetAI(<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_goal_search">GoalSearch</link>());
<anchor xml:id="__goal_spot_8cs_source_1l00015"/>00015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__goal_spot_8cs_source_1l00016"/>00016 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;yield&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__goal_spot_8cs_source_1l00017"/>00017 &#32;&#32;&#32;&#32;}
<anchor xml:id="__goal_spot_8cs_source_1l00018"/>00018 }
</programlisting></section>
