<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__path_progress_8cs_source" xml:lang="en-US">
<title>PathProgress.cs</title>
<indexterm><primary>Elin/PathProgress.cs</primary></indexterm>
<programlisting linenumbering="unnumbered"><anchor xml:id="__path_progress_8cs_source_1l00001"/>00001 <emphasis role="keyword">using&#32;</emphasis>System;
<anchor xml:id="__path_progress_8cs_source_1l00002"/>00002 <emphasis role="keyword">using&#32;</emphasis>System.Collections.Generic;
<anchor xml:id="__path_progress_8cs_source_1l00003"/>00003 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_algorithms">Algorithms</link>;
<anchor xml:id="__path_progress_8cs_source_1l00004"/>00004 
<anchor xml:id="__path_progress_8cs_source_1l00005"/>00005 <emphasis role="comment">//&#32;Token:&#32;0x020000BD&#32;RID:&#32;189</emphasis>
<anchor xml:id="__path_progress_8cs_source_1l00006"/><link linkend="_class_path_progress">00006</link> <emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_path_progress">PathProgress</link>
<anchor xml:id="__path_progress_8cs_source_1l00007"/>00007 {
<anchor xml:id="__path_progress_8cs_source_1l00008"/>00008 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x1700010B&#32;RID:&#32;267</emphasis>
<anchor xml:id="__path_progress_8cs_source_1l00009"/>00009 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;(get)&#32;Token:&#32;0x060004E6&#32;RID:&#32;1254&#32;RVA:&#32;0x00022311&#32;File&#32;Offset:&#32;0x00020511</emphasis>
<anchor xml:id="__path_progress_8cs_source_1l00010"/>00010 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;HasPath
<anchor xml:id="__path_progress_8cs_source_1l00011"/>00011 &#32;&#32;&#32;&#32;{
<anchor xml:id="__path_progress_8cs_source_1l00012"/>00012 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
<anchor xml:id="__path_progress_8cs_source_1l00013"/>00013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__path_progress_8cs_source_1l00014"/>00014 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this.state&#32;==&#32;PathProgress.State.PathReady&#32;&amp;&amp;&#32;this.nodes.Count&#32;&gt;=&#32;1;
<anchor xml:id="__path_progress_8cs_source_1l00015"/>00015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_progress_8cs_source_1l00016"/>00016 &#32;&#32;&#32;&#32;}
<anchor xml:id="__path_progress_8cs_source_1l00017"/>00017 
<anchor xml:id="__path_progress_8cs_source_1l00018"/>00018 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x060004E7&#32;RID:&#32;1255&#32;RVA:&#32;0x0002232F&#32;File&#32;Offset:&#32;0x0002052F</emphasis>
<anchor xml:id="__path_progress_8cs_source_1l00019"/>00019 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;IsDestinationReached(<link linkend="_class_point">Point</link>&#32;pos)
<anchor xml:id="__path_progress_8cs_source_1l00020"/>00020 &#32;&#32;&#32;&#32;{
<anchor xml:id="__path_progress_8cs_source_1l00021"/>00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Util.Distance(pos.x,&#32;pos.z,&#32;<emphasis role="keyword">this</emphasis>.destPoint.x,&#32;<emphasis role="keyword">this</emphasis>.destPoint.z)&#32;&lt;=&#32;this.destDist;
<anchor xml:id="__path_progress_8cs_source_1l00022"/>00022 &#32;&#32;&#32;&#32;}
<anchor xml:id="__path_progress_8cs_source_1l00023"/>00023 
<anchor xml:id="__path_progress_8cs_source_1l00024"/>00024 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x060004E8&#32;RID:&#32;1256&#32;RVA:&#32;0x00022364&#32;File&#32;Offset:&#32;0x00020564</emphasis>
<anchor xml:id="__path_progress_8cs_source_1l00025"/>00025 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;RequestPath(<link linkend="_class_point">Point</link>&#32;_startPoint,&#32;<link linkend="_class_point">Point</link>&#32;_destPoint,&#32;<emphasis role="keywordtype">int</emphasis>&#32;_destDist,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;_ignoreConnection,&#32;<emphasis role="keywordtype">int</emphasis>&#32;_searchLimit&#32;=&#32;-1)
<anchor xml:id="__path_progress_8cs_source_1l00026"/>00026 &#32;&#32;&#32;&#32;{
<anchor xml:id="__path_progress_8cs_source_1l00027"/>00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_startPoint.cell.isSurrounded4d&#32;||&#32;_destPoint.cell.isSurrounded4d)
<anchor xml:id="__path_progress_8cs_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__path_progress_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.state&#32;=&#32;<link linkend="_class_path_progress">PathProgress</link>.State.Fail;
<anchor xml:id="__path_progress_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.nodeIndex&#32;=&#32;0;
<anchor xml:id="__path_progress_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.nodes.Clear();
<anchor xml:id="__path_progress_8cs_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__path_progress_8cs_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_progress_8cs_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.startPoint.Set(_startPoint);
<anchor xml:id="__path_progress_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.destPoint.Set(_destPoint);
<anchor xml:id="__path_progress_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.destDist&#32;=&#32;_destDist;
<anchor xml:id="__path_progress_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.ignoreConnection&#32;=&#32;_ignoreConnection;
<anchor xml:id="__path_progress_8cs_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.searchLimit&#32;=&#32;((_searchLimit&#32;==&#32;-1)&#32;?&#32;PathManager.Instance.searchLimit&#32;:&#32;_searchLimit);
<anchor xml:id="__path_progress_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_path_manager">PathManager</link>.Instance.RequestPath(<emphasis role="keyword">this</emphasis>);
<anchor xml:id="__path_progress_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;}
<anchor xml:id="__path_progress_8cs_source_1l00041"/>00041 
<anchor xml:id="__path_progress_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x060004E9&#32;RID:&#32;1257&#32;RVA:&#32;0x000223F4&#32;File&#32;Offset:&#32;0x000205F4</emphasis>
<anchor xml:id="__path_progress_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;RequestPathImmediate(<link linkend="_class_point">Point</link>&#32;_startPoint,&#32;<link linkend="_class_point">Point</link>&#32;_destPoint,&#32;<emphasis role="keywordtype">int</emphasis>&#32;_destDist,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;_ignoreConnection,&#32;<emphasis role="keywordtype">int</emphasis>&#32;_searchLimit&#32;=&#32;-1)
<anchor xml:id="__path_progress_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;{
<anchor xml:id="__path_progress_8cs_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_startPoint.cell.isSurrounded4d&#32;||&#32;_destPoint.cell.isSurrounded4d)
<anchor xml:id="__path_progress_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__path_progress_8cs_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.state&#32;=&#32;<link linkend="_class_path_progress">PathProgress</link>.State.Fail;
<anchor xml:id="__path_progress_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.nodeIndex&#32;=&#32;0;
<anchor xml:id="__path_progress_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.nodes.Clear();
<anchor xml:id="__path_progress_8cs_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__path_progress_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_progress_8cs_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.startPoint.Set(_startPoint);
<anchor xml:id="__path_progress_8cs_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.destPoint.Set(_destPoint);
<anchor xml:id="__path_progress_8cs_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.destDist&#32;=&#32;_destDist;
<anchor xml:id="__path_progress_8cs_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.ignoreConnection&#32;=&#32;_ignoreConnection;
<anchor xml:id="__path_progress_8cs_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.searchLimit&#32;=&#32;((_searchLimit&#32;==&#32;-1)&#32;?&#32;PathManager.Instance.searchLimit&#32;:&#32;_searchLimit);
<anchor xml:id="__path_progress_8cs_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_path_manager">PathManager</link>.Instance.RequestPathImmediate(<emphasis role="keyword">this</emphasis>);
<anchor xml:id="__path_progress_8cs_source_1l00058"/>00058 &#32;&#32;&#32;&#32;}
<anchor xml:id="__path_progress_8cs_source_1l00059"/>00059 
<anchor xml:id="__path_progress_8cs_source_1l00060"/>00060 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04000657&#32;RID:&#32;1623</emphasis>
<anchor xml:id="__path_progress_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_interface_i_pathfind_walker">IPathfindWalker</link>&#32;walker;
<anchor xml:id="__path_progress_8cs_source_1l00062"/>00062 
<anchor xml:id="__path_progress_8cs_source_1l00063"/>00063 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04000658&#32;RID:&#32;1624</emphasis>
<anchor xml:id="__path_progress_8cs_source_1l00064"/>00064 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;List&lt;PathFinderNode&gt;&#32;nodes&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;PathFinderNode&gt;();
<anchor xml:id="__path_progress_8cs_source_1l00065"/>00065 
<anchor xml:id="__path_progress_8cs_source_1l00066"/>00066 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04000659&#32;RID:&#32;1625</emphasis>
<anchor xml:id="__path_progress_8cs_source_1l00067"/>00067 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_point">Point</link>&#32;startPoint&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_point">Point</link>();
<anchor xml:id="__path_progress_8cs_source_1l00068"/>00068 
<anchor xml:id="__path_progress_8cs_source_1l00069"/>00069 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x0400065A&#32;RID:&#32;1626</emphasis>
<anchor xml:id="__path_progress_8cs_source_1l00070"/>00070 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_point">Point</link>&#32;destPoint&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_point">Point</link>();
<anchor xml:id="__path_progress_8cs_source_1l00071"/>00071 
<anchor xml:id="__path_progress_8cs_source_1l00072"/>00072 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x0400065B&#32;RID:&#32;1627</emphasis>
<anchor xml:id="__path_progress_8cs_source_1l00073"/>00073 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;nodeIndex;
<anchor xml:id="__path_progress_8cs_source_1l00074"/>00074 
<anchor xml:id="__path_progress_8cs_source_1l00075"/>00075 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x0400065C&#32;RID:&#32;1628</emphasis>
<anchor xml:id="__path_progress_8cs_source_1l00076"/>00076 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;PathProgress.State&#32;state;
<anchor xml:id="__path_progress_8cs_source_1l00077"/>00077 
<anchor xml:id="__path_progress_8cs_source_1l00078"/>00078 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x0400065D&#32;RID:&#32;1629</emphasis>
<anchor xml:id="__path_progress_8cs_source_1l00079"/>00079 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;destDist;
<anchor xml:id="__path_progress_8cs_source_1l00080"/>00080 
<anchor xml:id="__path_progress_8cs_source_1l00081"/>00081 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x0400065E&#32;RID:&#32;1630</emphasis>
<anchor xml:id="__path_progress_8cs_source_1l00082"/>00082 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;searchLimit;
<anchor xml:id="__path_progress_8cs_source_1l00083"/>00083 
<anchor xml:id="__path_progress_8cs_source_1l00084"/>00084 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x0400065F&#32;RID:&#32;1631</emphasis>
<anchor xml:id="__path_progress_8cs_source_1l00085"/>00085 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;ignoreConnection;
<anchor xml:id="__path_progress_8cs_source_1l00086"/>00086 
<anchor xml:id="__path_progress_8cs_source_1l00087"/>00087 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04000660&#32;RID:&#32;1632</emphasis>
<anchor xml:id="__path_progress_8cs_source_1l00088"/>00088 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;PathManager.MoveType&#32;moveType;
<anchor xml:id="__path_progress_8cs_source_1l00089"/>00089 
<anchor xml:id="__path_progress_8cs_source_1l00090"/>00090 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x02000808&#32;RID:&#32;2056</emphasis>
<anchor xml:id="__path_progress_8cs_source_1l00091"/>00091 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">enum</emphasis>&#32;State
<anchor xml:id="__path_progress_8cs_source_1l00092"/>00092 &#32;&#32;&#32;&#32;{
<anchor xml:id="__path_progress_8cs_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04002294&#32;RID:&#32;8852</emphasis>
<anchor xml:id="__path_progress_8cs_source_1l00094"/>00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Idle,
<anchor xml:id="__path_progress_8cs_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04002295&#32;RID:&#32;8853</emphasis>
<anchor xml:id="__path_progress_8cs_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Searching,
<anchor xml:id="__path_progress_8cs_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04002296&#32;RID:&#32;8854</emphasis>
<anchor xml:id="__path_progress_8cs_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PathReady,
<anchor xml:id="__path_progress_8cs_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04002297&#32;RID:&#32;8855</emphasis>
<anchor xml:id="__path_progress_8cs_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Fail
<anchor xml:id="__path_progress_8cs_source_1l00101"/>00101 &#32;&#32;&#32;&#32;}
<anchor xml:id="__path_progress_8cs_source_1l00102"/>00102 }
</programlisting></section>
