<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__render_data_8cs_source" xml:lang="en-US">
<title>RenderData.cs</title>
<indexterm><primary>Elin/RenderData.cs</primary></indexterm>
<programlisting linenumbering="unnumbered"><anchor xml:id="__render_data_8cs_source_1l00001"/>00001 <emphasis role="keyword">using&#32;</emphasis>System;
<anchor xml:id="__render_data_8cs_source_1l00002"/>00002 <emphasis role="keyword">using&#32;</emphasis>UnityEngine;
<anchor xml:id="__render_data_8cs_source_1l00003"/>00003 
<anchor xml:id="__render_data_8cs_source_1l00004"/>00004 <emphasis role="comment">//&#32;Token:&#32;0x02000196&#32;RID:&#32;406</emphasis>
<anchor xml:id="__render_data_8cs_source_1l00005"/><link linkend="_class_render_data">00005</link> <emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_render_data">RenderData</link>&#32;:&#32;<link linkend="_class_e_scriptable">EScriptable</link>,&#32;<link linkend="_interface_i_renderer">IRenderer</link>
<anchor xml:id="__render_data_8cs_source_1l00006"/>00006 {
<anchor xml:id="__render_data_8cs_source_1l00007"/>00007 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x170002E5&#32;RID:&#32;741</emphasis>
<anchor xml:id="__render_data_8cs_source_1l00008"/>00008 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;(get)&#32;Token:&#32;0x06000BC2&#32;RID:&#32;3010&#32;RVA:&#32;0x00048949&#32;File&#32;Offset:&#32;0x00046B49</emphasis>
<anchor xml:id="__render_data_8cs_source_1l00009"/>00009 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;Quaternion&#32;shadowRotation
<anchor xml:id="__render_data_8cs_source_1l00010"/>00010 &#32;&#32;&#32;&#32;{
<anchor xml:id="__render_data_8cs_source_1l00011"/>00011 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
<anchor xml:id="__render_data_8cs_source_1l00012"/>00012 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__render_data_8cs_source_1l00013"/>00013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Quaternion.Euler(0f,&#32;0f,&#32;<link linkend="_class_render_data">RenderData</link>.renderSetting.shadowAngle);
<anchor xml:id="__render_data_8cs_source_1l00014"/>00014 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__render_data_8cs_source_1l00015"/>00015 &#32;&#32;&#32;&#32;}
<anchor xml:id="__render_data_8cs_source_1l00016"/>00016 
<anchor xml:id="__render_data_8cs_source_1l00017"/>00017 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x170002E6&#32;RID:&#32;742</emphasis>
<anchor xml:id="__render_data_8cs_source_1l00018"/>00018 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;(get)&#32;Token:&#32;0x06000BC3&#32;RID:&#32;3011&#32;RVA:&#32;0x00048964&#32;File&#32;Offset:&#32;0x00046B64</emphasis>
<anchor xml:id="__render_data_8cs_source_1l00019"/>00019 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;Vector3&#32;shadowScale
<anchor xml:id="__render_data_8cs_source_1l00020"/>00020 &#32;&#32;&#32;&#32;{
<anchor xml:id="__render_data_8cs_source_1l00021"/>00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
<anchor xml:id="__render_data_8cs_source_1l00022"/>00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__render_data_8cs_source_1l00023"/>00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_render_data">RenderData</link>.renderSetting.shadowScale;
<anchor xml:id="__render_data_8cs_source_1l00024"/>00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__render_data_8cs_source_1l00025"/>00025 &#32;&#32;&#32;&#32;}
<anchor xml:id="__render_data_8cs_source_1l00026"/>00026 
<anchor xml:id="__render_data_8cs_source_1l00027"/>00027 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x170002E7&#32;RID:&#32;743</emphasis>
<anchor xml:id="__render_data_8cs_source_1l00028"/>00028 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;(get)&#32;Token:&#32;0x06000BC4&#32;RID:&#32;3012&#32;RVA:&#32;0x00048970&#32;File&#32;Offset:&#32;0x00046B70</emphasis>
<anchor xml:id="__render_data_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;Vector3&#32;shadowOffset
<anchor xml:id="__render_data_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;{
<anchor xml:id="__render_data_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
<anchor xml:id="__render_data_8cs_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__render_data_8cs_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_render_data">RenderData</link>.renderSetting.shadowOffset;
<anchor xml:id="__render_data_8cs_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__render_data_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;}
<anchor xml:id="__render_data_8cs_source_1l00036"/>00036 
<anchor xml:id="__render_data_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x170002E8&#32;RID:&#32;744</emphasis>
<anchor xml:id="__render_data_8cs_source_1l00038"/>00038 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;(get)&#32;Token:&#32;0x06000BC5&#32;RID:&#32;3013&#32;RVA:&#32;0x0004897C&#32;File&#32;Offset:&#32;0x00046B7C</emphasis>
<anchor xml:id="__render_data_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;SkipOnMap
<anchor xml:id="__render_data_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;{
<anchor xml:id="__render_data_8cs_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
<anchor xml:id="__render_data_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__render_data_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__render_data_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__render_data_8cs_source_1l00045"/>00045 &#32;&#32;&#32;&#32;}
<anchor xml:id="__render_data_8cs_source_1l00046"/>00046 
<anchor xml:id="__render_data_8cs_source_1l00047"/>00047 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x170002E9&#32;RID:&#32;745</emphasis>
<anchor xml:id="__render_data_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;(get)&#32;Token:&#32;0x06000BC6&#32;RID:&#32;3014&#32;RVA:&#32;0x0004897F&#32;File&#32;Offset:&#32;0x00046B7F</emphasis>
<anchor xml:id="__render_data_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;pathSprite
<anchor xml:id="__render_data_8cs_source_1l00050"/>00050 &#32;&#32;&#32;&#32;{
<anchor xml:id="__render_data_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
<anchor xml:id="__render_data_8cs_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__render_data_8cs_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="stringliteral">&quot;Scene/Render/Data/&quot;</emphasis>;
<anchor xml:id="__render_data_8cs_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__render_data_8cs_source_1l00055"/>00055 &#32;&#32;&#32;&#32;}
<anchor xml:id="__render_data_8cs_source_1l00056"/>00056 
<anchor xml:id="__render_data_8cs_source_1l00057"/>00057 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x170002EA&#32;RID:&#32;746</emphasis>
<anchor xml:id="__render_data_8cs_source_1l00058"/>00058 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;(get)&#32;Token:&#32;0x06000BC7&#32;RID:&#32;3015&#32;RVA:&#32;0x00048986&#32;File&#32;Offset:&#32;0x00046B86</emphasis>
<anchor xml:id="__render_data_8cs_source_1l00059"/>00059 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;prefabName
<anchor xml:id="__render_data_8cs_source_1l00060"/>00060 &#32;&#32;&#32;&#32;{
<anchor xml:id="__render_data_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
<anchor xml:id="__render_data_8cs_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__render_data_8cs_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="stringliteral">&quot;ThingActor&quot;</emphasis>;
<anchor xml:id="__render_data_8cs_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__render_data_8cs_source_1l00065"/>00065 &#32;&#32;&#32;&#32;}
<anchor xml:id="__render_data_8cs_source_1l00066"/>00066 
<anchor xml:id="__render_data_8cs_source_1l00067"/>00067 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06000BC8&#32;RID:&#32;3016&#32;RVA:&#32;0x0004898D&#32;File&#32;Offset:&#32;0x00046B8D</emphasis>
<anchor xml:id="__render_data_8cs_source_1l00068"/>00068 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">virtual</emphasis>&#32;<link linkend="_class_card_actor">CardActor</link>&#32;CreateActor()
<anchor xml:id="__render_data_8cs_source_1l00069"/>00069 &#32;&#32;&#32;&#32;{
<anchor xml:id="__render_data_8cs_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__render_data_8cs_source_1l00071"/>00071 &#32;&#32;&#32;&#32;}
<anchor xml:id="__render_data_8cs_source_1l00072"/>00072 
<anchor xml:id="__render_data_8cs_source_1l00073"/>00073 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x170002EB&#32;RID:&#32;747</emphasis>
<anchor xml:id="__render_data_8cs_source_1l00074"/>00074 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;(get)&#32;Token:&#32;0x06000BC9&#32;RID:&#32;3017&#32;RVA:&#32;0x00048990&#32;File&#32;Offset:&#32;0x00046B90</emphasis>
<anchor xml:id="__render_data_8cs_source_1l00075"/>00075 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;ForceAltHeldPosition
<anchor xml:id="__render_data_8cs_source_1l00076"/>00076 &#32;&#32;&#32;&#32;{
<anchor xml:id="__render_data_8cs_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
<anchor xml:id="__render_data_8cs_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__render_data_8cs_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__render_data_8cs_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__render_data_8cs_source_1l00081"/>00081 &#32;&#32;&#32;&#32;}
<anchor xml:id="__render_data_8cs_source_1l00082"/>00082 
<anchor xml:id="__render_data_8cs_source_1l00083"/>00083 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06000BCA&#32;RID:&#32;3018&#32;RVA:&#32;0x00048993&#32;File&#32;Offset:&#32;0x00046B93</emphasis>
<anchor xml:id="__render_data_8cs_source_1l00084"/>00084 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Awake()
<anchor xml:id="__render_data_8cs_source_1l00085"/>00085 &#32;&#32;&#32;&#32;{
<anchor xml:id="__render_data_8cs_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.Init();
<anchor xml:id="__render_data_8cs_source_1l00087"/>00087 &#32;&#32;&#32;&#32;}
<anchor xml:id="__render_data_8cs_source_1l00088"/>00088 
<anchor xml:id="__render_data_8cs_source_1l00089"/>00089 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06000BCB&#32;RID:&#32;3019&#32;RVA:&#32;0x0004899C&#32;File&#32;Offset:&#32;0x00046B9C</emphasis>
<anchor xml:id="__render_data_8cs_source_1l00090"/>00090 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Init()
<anchor xml:id="__render_data_8cs_source_1l00091"/>00091 &#32;&#32;&#32;&#32;{
<anchor xml:id="__render_data_8cs_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.initialized)
<anchor xml:id="__render_data_8cs_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__render_data_8cs_source_1l00094"/>00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__render_data_8cs_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__render_data_8cs_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.initialized&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__render_data_8cs_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this._offset&#32;=&#32;this.offset;
<anchor xml:id="__render_data_8cs_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_mesh_pass">MeshPass</link>&#32;meshPass&#32;=&#32;this.pass;
<anchor xml:id="__render_data_8cs_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.hasSubPass&#32;=&#32;((meshPass&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;?&#32;meshPass.subPass&#32;:&#32;<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__render_data_8cs_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_mesh_pass">MeshPass</link>&#32;meshPass2&#32;=&#32;this.pass;
<anchor xml:id="__render_data_8cs_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.hasSnowPass&#32;=&#32;((meshPass2&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;?&#32;meshPass2.snowPass&#32;:&#32;<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__render_data_8cs_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.OnInit();
<anchor xml:id="__render_data_8cs_source_1l00103"/>00103 &#32;&#32;&#32;&#32;}
<anchor xml:id="__render_data_8cs_source_1l00104"/>00104 
<anchor xml:id="__render_data_8cs_source_1l00105"/>00105 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06000BCC&#32;RID:&#32;3020&#32;RVA:&#32;0x00048A05&#32;File&#32;Offset:&#32;0x00046C05</emphasis>
<anchor xml:id="__render_data_8cs_source_1l00106"/>00106 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnInit()
<anchor xml:id="__render_data_8cs_source_1l00107"/>00107 &#32;&#32;&#32;&#32;{
<anchor xml:id="__render_data_8cs_source_1l00108"/>00108 &#32;&#32;&#32;&#32;}
<anchor xml:id="__render_data_8cs_source_1l00109"/>00109 
<anchor xml:id="__render_data_8cs_source_1l00110"/>00110 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06000BCD&#32;RID:&#32;3021&#32;RVA:&#32;0x00048A07&#32;File&#32;Offset:&#32;0x00046C07</emphasis>
<anchor xml:id="__render_data_8cs_source_1l00111"/>00111 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;ConvertTile(<emphasis role="keywordtype">int</emphasis>&#32;tile)
<anchor xml:id="__render_data_8cs_source_1l00112"/>00112 &#32;&#32;&#32;&#32;{
<anchor xml:id="__render_data_8cs_source_1l00113"/>00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;tile&#32;/&#32;100&#32;*&#32;(int)this.pass.pmesh.tiling.x&#32;+&#32;tile&#32;%&#32;100;
<anchor xml:id="__render_data_8cs_source_1l00114"/>00114 &#32;&#32;&#32;&#32;}
<anchor xml:id="__render_data_8cs_source_1l00115"/>00115 
<anchor xml:id="__render_data_8cs_source_1l00116"/>00116 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06000BCE&#32;RID:&#32;3022&#32;RVA:&#32;0x00048A2C&#32;File&#32;Offset:&#32;0x00046C2C</emphasis>
<anchor xml:id="__render_data_8cs_source_1l00117"/>00117 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;RenderToRenderCam(<link linkend="_class_render_param">RenderParam</link>&#32;p)
<anchor xml:id="__render_data_8cs_source_1l00118"/>00118 &#32;&#32;&#32;&#32;{
<anchor xml:id="__render_data_8cs_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;renderPos&#32;=&#32;<link linkend="_class_e_class">EClass</link>.scene.camSupport.renderPos;
<anchor xml:id="__render_data_8cs_source_1l00120"/>00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.multiSize)
<anchor xml:id="__render_data_8cs_source_1l00121"/>00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__render_data_8cs_source_1l00122"/>00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;renderPos.y&#32;-=&#32;0.8f;
<anchor xml:id="__render_data_8cs_source_1l00123"/>00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__render_data_8cs_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p.x&#32;=&#32;renderPos.x;
<anchor xml:id="__render_data_8cs_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p.y&#32;=&#32;renderPos.y;
<anchor xml:id="__render_data_8cs_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p.z&#32;=&#32;renderPos.z;
<anchor xml:id="__render_data_8cs_source_1l00127"/>00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.Draw(p);
<anchor xml:id="__render_data_8cs_source_1l00128"/>00128 &#32;&#32;&#32;&#32;}
<anchor xml:id="__render_data_8cs_source_1l00129"/>00129 
<anchor xml:id="__render_data_8cs_source_1l00130"/>00130 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06000BCF&#32;RID:&#32;3023&#32;RVA:&#32;0x00048A8C&#32;File&#32;Offset:&#32;0x00046C8C</emphasis>
<anchor xml:id="__render_data_8cs_source_1l00131"/>00131 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Draw(<link linkend="_class_render_param">RenderParam</link>&#32;p,&#32;<emphasis role="keywordtype">int</emphasis>&#32;tile)
<anchor xml:id="__render_data_8cs_source_1l00132"/>00132 &#32;&#32;&#32;&#32;{
<anchor xml:id="__render_data_8cs_source_1l00133"/>00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p.tile&#32;=&#32;(float)tile;
<anchor xml:id="__render_data_8cs_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.Draw(p);
<anchor xml:id="__render_data_8cs_source_1l00135"/>00135 &#32;&#32;&#32;&#32;}
<anchor xml:id="__render_data_8cs_source_1l00136"/>00136 
<anchor xml:id="__render_data_8cs_source_1l00137"/>00137 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06000BD0&#32;RID:&#32;3024&#32;RVA:&#32;0x00048AA0&#32;File&#32;Offset:&#32;0x00046CA0</emphasis>
<anchor xml:id="__render_data_8cs_source_1l00138"/>00138 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Draw(<link linkend="_class_render_param">RenderParam</link>&#32;p)
<anchor xml:id="__render_data_8cs_source_1l00139"/>00139 &#32;&#32;&#32;&#32;{
<anchor xml:id="__render_data_8cs_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_mesh_pass">MeshPass</link>&#32;meshPass&#32;=&#32;(this.hasSubPass&#32;&amp;&amp;&#32;<link linkend="_class_sub_pass_data">SubPassData</link>.Current.enable)&#32;?&#32;this.pass.subPass&#32;:&#32;this.pass;
<anchor xml:id="__render_data_8cs_source_1l00141"/>00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_mesh_batch">MeshBatch</link>&#32;meshBatch&#32;=&#32;meshPass.batches[meshPass.batchIdx];
<anchor xml:id="__render_data_8cs_source_1l00142"/>00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;num&#32;=&#32;(p.tile&#32;&gt;&#32;0f)&#32;?&#32;1&#32;:&#32;-1;
<anchor xml:id="__render_data_8cs_source_1l00143"/>00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.useOffsetBack)
<anchor xml:id="__render_data_8cs_source_1l00144"/>00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__render_data_8cs_source_1l00145"/>00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this._offset&#32;=&#32;((p.dir&#32;==&#32;2&#32;||&#32;p.dir&#32;==&#32;3)&#32;?&#32;this.offsetBack&#32;:&#32;this.offset);
<anchor xml:id="__render_data_8cs_source_1l00146"/>00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__render_data_8cs_source_1l00147"/>00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(meshPass&#32;==&#32;this.pass.subPass)
<anchor xml:id="__render_data_8cs_source_1l00148"/>00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__render_data_8cs_source_1l00149"/>00149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;meshBatch.colors[meshPass.idx]&#32;=&#32;p.color&#32;-&#32;1572864f;
<anchor xml:id="__render_data_8cs_source_1l00150"/>00150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;meshBatch.matrices[meshPass.idx].SetTRS(p.NewVector3&#32;+&#32;<emphasis role="keyword">this</emphasis>._offset&#32;+&#32;<link linkend="_class_sub_pass_data">SubPassData</link>.Current.offset,&#32;<link linkend="_class_sub_pass_data">SubPassData</link>.Current.rotation,&#32;<link linkend="_class_sub_pass_data">SubPassData</link>.Current.scale);
<anchor xml:id="__render_data_8cs_source_1l00151"/>00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__render_data_8cs_source_1l00152"/>00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__render_data_8cs_source_1l00153"/>00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__render_data_8cs_source_1l00154"/>00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;meshBatch.colors[meshPass.idx]&#32;=&#32;p.color;
<anchor xml:id="__render_data_8cs_source_1l00155"/>00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;meshBatch.matrices[meshPass.idx].m03&#32;=&#32;p.x&#32;+&#32;this._offset.x&#32;*&#32;(float)num;
<anchor xml:id="__render_data_8cs_source_1l00156"/>00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;meshBatch.matrices[meshPass.idx].m13&#32;=&#32;p.y&#32;+&#32;this._offset.y;
<anchor xml:id="__render_data_8cs_source_1l00157"/>00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;meshBatch.matrices[meshPass.idx].m23&#32;=&#32;p.z&#32;+&#32;this._offset.z;
<anchor xml:id="__render_data_8cs_source_1l00158"/>00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__render_data_8cs_source_1l00159"/>00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;meshBatch.tiles[meshPass.idx]&#32;=&#32;p.tile&#32;+&#32;(float)(p.liquidLv&#32;*&#32;10000&#32;*&#32;num);
<anchor xml:id="__render_data_8cs_source_1l00160"/>00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;meshPass.idx++;
<anchor xml:id="__render_data_8cs_source_1l00161"/>00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(meshPass.idx&#32;==&#32;meshPass.batchSize)
<anchor xml:id="__render_data_8cs_source_1l00162"/>00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__render_data_8cs_source_1l00163"/>00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;meshPass.NextBatch();
<anchor xml:id="__render_data_8cs_source_1l00164"/>00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__render_data_8cs_source_1l00165"/>00165 &#32;&#32;&#32;&#32;}
<anchor xml:id="__render_data_8cs_source_1l00166"/>00166 
<anchor xml:id="__render_data_8cs_source_1l00167"/>00167 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06000BD1&#32;RID:&#32;3025&#32;RVA:&#32;0x00048C75&#32;File&#32;Offset:&#32;0x00046E75</emphasis>
<anchor xml:id="__render_data_8cs_source_1l00168"/>00168 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnValidate()
<anchor xml:id="__render_data_8cs_source_1l00169"/>00169 &#32;&#32;&#32;&#32;{
<anchor xml:id="__render_data_8cs_source_1l00170"/>00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this._offset&#32;=&#32;this.offset;
<anchor xml:id="__render_data_8cs_source_1l00171"/>00171 &#32;&#32;&#32;&#32;}
<anchor xml:id="__render_data_8cs_source_1l00172"/>00172 
<anchor xml:id="__render_data_8cs_source_1l00173"/>00173 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06000BD2&#32;RID:&#32;3026&#32;RVA:&#32;0x00048C84&#32;File&#32;Offset:&#32;0x00046E84</emphasis>
<anchor xml:id="__render_data_8cs_source_1l00174"/>00174 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;DrawRepeatTo(<link linkend="_class_render_param">RenderParam</link>&#32;p,&#32;<emphasis role="keywordtype">float</emphasis>&#32;maxY,&#32;<emphasis role="keywordtype">float</emphasis>&#32;height,&#32;ref&#32;Vector3&#32;peakFix,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;skipFirst&#32;=&#32;<emphasis role="keyword">false</emphasis>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;fire&#32;=&#32;0,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isBlock&#32;=&#32;<emphasis role="keyword">false</emphasis>)
<anchor xml:id="__render_data_8cs_source_1l00175"/>00175 &#32;&#32;&#32;&#32;{
<anchor xml:id="__render_data_8cs_source_1l00176"/>00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;num&#32;=&#32;(int)((maxY&#32;+&#32;height&#32;+&#32;peakFix.x&#32;-&#32;p.y)&#32;/&#32;peakFix.y);
<anchor xml:id="__render_data_8cs_source_1l00177"/>00177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;snow&#32;=&#32;p.snow;
<anchor xml:id="__render_data_8cs_source_1l00178"/>00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(num&#32;==&#32;0)
<anchor xml:id="__render_data_8cs_source_1l00179"/>00179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__render_data_8cs_source_1l00180"/>00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!skipFirst)
<anchor xml:id="__render_data_8cs_source_1l00181"/>00181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__render_data_8cs_source_1l00182"/>00182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.Draw(p);
<anchor xml:id="__render_data_8cs_source_1l00183"/>00183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__render_data_8cs_source_1l00184"/>00184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__render_data_8cs_source_1l00185"/>00185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__render_data_8cs_source_1l00186"/>00186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.orgY&#32;=&#32;p.y;
<anchor xml:id="__render_data_8cs_source_1l00187"/>00187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.orgZ&#32;=&#32;p.z;
<anchor xml:id="__render_data_8cs_source_1l00188"/>00188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p.snow&#32;=&#32;(!isBlock&#32;&amp;&amp;&#32;snow);
<anchor xml:id="__render_data_8cs_source_1l00189"/>00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;num&#32;+&#32;1;&#32;i++)
<anchor xml:id="__render_data_8cs_source_1l00190"/>00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__render_data_8cs_source_1l00191"/>00191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(i&#32;==&#32;num)
<anchor xml:id="__render_data_8cs_source_1l00192"/>00192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__render_data_8cs_source_1l00193"/>00193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p.y&#32;=&#32;maxY&#32;+&#32;height&#32;-&#32;peakFix.y;
<anchor xml:id="__render_data_8cs_source_1l00194"/>00194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p.z&#32;-=&#32;peakFix.z&#32;+&#32;peakFix.x;
<anchor xml:id="__render_data_8cs_source_1l00195"/>00195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p.snow&#32;=&#32;snow;
<anchor xml:id="__render_data_8cs_source_1l00196"/>00196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__render_data_8cs_source_1l00197"/>00197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(skipFirst)
<anchor xml:id="__render_data_8cs_source_1l00198"/>00198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__render_data_8cs_source_1l00199"/>00199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(i&#32;!=&#32;0&#32;&amp;&amp;&#32;num&#32;&gt;&#32;1)
<anchor xml:id="__render_data_8cs_source_1l00200"/>00200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__render_data_8cs_source_1l00201"/>00201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.Draw(p);
<anchor xml:id="__render_data_8cs_source_1l00202"/>00202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__render_data_8cs_source_1l00203"/>00203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__render_data_8cs_source_1l00204"/>00204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__render_data_8cs_source_1l00205"/>00205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__render_data_8cs_source_1l00206"/>00206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.Draw(p);
<anchor xml:id="__render_data_8cs_source_1l00207"/>00207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__render_data_8cs_source_1l00208"/>00208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(fire&#32;&gt;&#32;0&#32;&amp;&amp;&#32;i&#32;!=&#32;num)
<anchor xml:id="__render_data_8cs_source_1l00209"/>00209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__render_data_8cs_source_1l00210"/>00210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_e_class">EClass</link>.screen.tileMap.rendererEffect.Draw(p,&#32;fire);
<anchor xml:id="__render_data_8cs_source_1l00211"/>00211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fire--;
<anchor xml:id="__render_data_8cs_source_1l00212"/>00212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__render_data_8cs_source_1l00213"/>00213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p.y&#32;+=&#32;peakFix.y;
<anchor xml:id="__render_data_8cs_source_1l00214"/>00214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p.z&#32;+=&#32;peakFix.z;
<anchor xml:id="__render_data_8cs_source_1l00215"/>00215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__render_data_8cs_source_1l00216"/>00216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p.y&#32;=&#32;this.orgY;
<anchor xml:id="__render_data_8cs_source_1l00217"/>00217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p.z&#32;=&#32;this.orgZ;
<anchor xml:id="__render_data_8cs_source_1l00218"/>00218 &#32;&#32;&#32;&#32;}
<anchor xml:id="__render_data_8cs_source_1l00219"/>00219 
<anchor xml:id="__render_data_8cs_source_1l00220"/>00220 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06000BD3&#32;RID:&#32;3027&#32;RVA:&#32;0x00048DB8&#32;File&#32;Offset:&#32;0x00046FB8</emphasis>
<anchor xml:id="__render_data_8cs_source_1l00221"/>00221 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;DrawRepeat(<link linkend="_class_render_param">RenderParam</link>&#32;p,&#32;<emphasis role="keywordtype">int</emphasis>&#32;count,&#32;<emphasis role="keywordtype">float</emphasis>&#32;size,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;skipFirst&#32;=&#32;<emphasis role="keyword">false</emphasis>)
<anchor xml:id="__render_data_8cs_source_1l00222"/>00222 &#32;&#32;&#32;&#32;{
<anchor xml:id="__render_data_8cs_source_1l00223"/>00223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(count&#32;==&#32;1)
<anchor xml:id="__render_data_8cs_source_1l00224"/>00224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__render_data_8cs_source_1l00225"/>00225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!skipFirst)
<anchor xml:id="__render_data_8cs_source_1l00226"/>00226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__render_data_8cs_source_1l00227"/>00227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.Draw(p);
<anchor xml:id="__render_data_8cs_source_1l00228"/>00228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__render_data_8cs_source_1l00229"/>00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__render_data_8cs_source_1l00230"/>00230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__render_data_8cs_source_1l00231"/>00231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;snow&#32;=&#32;p.snow;
<anchor xml:id="__render_data_8cs_source_1l00232"/>00232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.orgY&#32;=&#32;p.y;
<anchor xml:id="__render_data_8cs_source_1l00233"/>00233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.orgZ&#32;=&#32;p.z;
<anchor xml:id="__render_data_8cs_source_1l00234"/>00234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p.snow&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__render_data_8cs_source_1l00235"/>00235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;count;&#32;i++)
<anchor xml:id="__render_data_8cs_source_1l00236"/>00236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__render_data_8cs_source_1l00237"/>00237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(i&#32;==&#32;count&#32;-&#32;1)
<anchor xml:id="__render_data_8cs_source_1l00238"/>00238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__render_data_8cs_source_1l00239"/>00239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p.snow&#32;=&#32;snow;
<anchor xml:id="__render_data_8cs_source_1l00240"/>00240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__render_data_8cs_source_1l00241"/>00241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(i&#32;!=&#32;0&#32;||&#32;!skipFirst)
<anchor xml:id="__render_data_8cs_source_1l00242"/>00242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__render_data_8cs_source_1l00243"/>00243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.Draw(p);
<anchor xml:id="__render_data_8cs_source_1l00244"/>00244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__render_data_8cs_source_1l00245"/>00245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p.y&#32;+=&#32;RenderData.renderSetting.peakFix.y&#32;*&#32;size;
<anchor xml:id="__render_data_8cs_source_1l00246"/>00246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p.z&#32;+=&#32;RenderData.renderSetting.peakFix.z&#32;*&#32;size;
<anchor xml:id="__render_data_8cs_source_1l00247"/>00247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__render_data_8cs_source_1l00248"/>00248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p.y&#32;=&#32;this.orgY;
<anchor xml:id="__render_data_8cs_source_1l00249"/>00249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p.z&#32;=&#32;this.orgZ;
<anchor xml:id="__render_data_8cs_source_1l00250"/>00250 &#32;&#32;&#32;&#32;}
<anchor xml:id="__render_data_8cs_source_1l00251"/>00251 
<anchor xml:id="__render_data_8cs_source_1l00252"/>00252 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06000BD4&#32;RID:&#32;3028&#32;RVA:&#32;0x00048E76&#32;File&#32;Offset:&#32;0x00047076</emphasis>
<anchor xml:id="__render_data_8cs_source_1l00253"/>00253 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;DrawWithRotation(<link linkend="_class_render_param">RenderParam</link>&#32;p,&#32;<emphasis role="keywordtype">float</emphasis>&#32;angle)
<anchor xml:id="__render_data_8cs_source_1l00254"/>00254 &#32;&#32;&#32;&#32;{
<anchor xml:id="__render_data_8cs_source_1l00255"/>00255 &#32;&#32;&#32;&#32;}
<anchor xml:id="__render_data_8cs_source_1l00256"/>00256 
<anchor xml:id="__render_data_8cs_source_1l00257"/>00257 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06000BD5&#32;RID:&#32;3029&#32;RVA:&#32;0x00048E78&#32;File&#32;Offset:&#32;0x00047078</emphasis>
<anchor xml:id="__render_data_8cs_source_1l00258"/>00258 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;DrawShadow(<link linkend="_class_render_param">RenderParam</link>&#32;p)
<anchor xml:id="__render_data_8cs_source_1l00259"/>00259 &#32;&#32;&#32;&#32;{
<anchor xml:id="__render_data_8cs_source_1l00260"/>00260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;num&#32;=&#32;(p.tile&#32;&gt;&#32;0f)&#32;?&#32;1&#32;:&#32;-1;
<anchor xml:id="__render_data_8cs_source_1l00261"/>00261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_mesh_pass">MeshPass</link>&#32;shadowPass&#32;=&#32;this.pass.shadowPass;
<anchor xml:id="__render_data_8cs_source_1l00262"/>00262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_mesh_batch">MeshBatch</link>&#32;meshBatch&#32;=&#32;shadowPass.batches[shadowPass.batchIdx];
<anchor xml:id="__render_data_8cs_source_1l00263"/>00263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;meshBatch.matrices[shadowPass.idx].SetTRS(p.NewVector3&#32;+&#32;<emphasis role="keyword">this</emphasis>.offset&#32;+&#32;<link linkend="_class_render_data">RenderData</link>.shadowOffset,&#32;<link linkend="_class_render_data">RenderData</link>.shadowRotation,&#32;<link linkend="_class_render_data">RenderData</link>.shadowScale);
<anchor xml:id="__render_data_8cs_source_1l00264"/>00264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;meshBatch.tiles[shadowPass.idx]&#32;=&#32;p.tile;
<anchor xml:id="__render_data_8cs_source_1l00265"/>00265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;shadowPass.idx++;
<anchor xml:id="__render_data_8cs_source_1l00266"/>00266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(shadowPass.idx&#32;==&#32;shadowPass.batchSize)
<anchor xml:id="__render_data_8cs_source_1l00267"/>00267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__render_data_8cs_source_1l00268"/>00268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;shadowPass.NextBatch();
<anchor xml:id="__render_data_8cs_source_1l00269"/>00269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__render_data_8cs_source_1l00270"/>00270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.multiSize)
<anchor xml:id="__render_data_8cs_source_1l00271"/>00271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__render_data_8cs_source_1l00272"/>00272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;shadowPass&#32;=&#32;this.pass.shadowPass;
<anchor xml:id="__render_data_8cs_source_1l00273"/>00273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_mesh_batch">MeshBatch</link>&#32;meshBatch2&#32;=&#32;shadowPass.batches[shadowPass.batchIdx];
<anchor xml:id="__render_data_8cs_source_1l00274"/>00274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;meshBatch2.matrices[shadowPass.idx].SetTRS(p.v&#32;+&#32;<emphasis role="keyword">this</emphasis>.offsetShadow,&#32;<link linkend="_class_render_data">RenderData</link>.shadowRotation,&#32;<link linkend="_class_render_data">RenderData</link>.shadowScale);
<anchor xml:id="__render_data_8cs_source_1l00275"/>00275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;meshBatch2.tiles[shadowPass.idx]&#32;=&#32;p.tile&#32;-&#32;this.pass.pmesh.tiling.x&#32;*&#32;(float)num;
<anchor xml:id="__render_data_8cs_source_1l00276"/>00276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;shadowPass.idx++;
<anchor xml:id="__render_data_8cs_source_1l00277"/>00277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(shadowPass.idx&#32;==&#32;shadowPass.batchSize)
<anchor xml:id="__render_data_8cs_source_1l00278"/>00278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__render_data_8cs_source_1l00279"/>00279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;shadowPass.NextBatch();
<anchor xml:id="__render_data_8cs_source_1l00280"/>00280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__render_data_8cs_source_1l00281"/>00281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__render_data_8cs_source_1l00282"/>00282 &#32;&#32;&#32;&#32;}
<anchor xml:id="__render_data_8cs_source_1l00283"/>00283 
<anchor xml:id="__render_data_8cs_source_1l00284"/>00284 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04000ABB&#32;RID:&#32;2747</emphasis>
<anchor xml:id="__render_data_8cs_source_1l00285"/>00285 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;HeldLightMod&#32;=&#32;1572864;
<anchor xml:id="__render_data_8cs_source_1l00286"/>00286 
<anchor xml:id="__render_data_8cs_source_1l00287"/>00287 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04000ABC&#32;RID:&#32;2748</emphasis>
<anchor xml:id="__render_data_8cs_source_1l00288"/>00288 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;Quaternion&#32;deadRotation&#32;=&#32;Quaternion.Euler(0f,&#32;0f,&#32;90f);
<anchor xml:id="__render_data_8cs_source_1l00289"/>00289 
<anchor xml:id="__render_data_8cs_source_1l00290"/>00290 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04000ABD&#32;RID:&#32;2749</emphasis>
<anchor xml:id="__render_data_8cs_source_1l00291"/>00291 &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;Vector3&#32;_offset;
<anchor xml:id="__render_data_8cs_source_1l00292"/>00292 
<anchor xml:id="__render_data_8cs_source_1l00293"/>00293 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04000ABE&#32;RID:&#32;2750</emphasis>
<anchor xml:id="__render_data_8cs_source_1l00294"/>00294 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class_game_setting_1_1_render_setting">GameSetting.RenderSetting</link>&#32;renderSetting;
<anchor xml:id="__render_data_8cs_source_1l00295"/>00295 
<anchor xml:id="__render_data_8cs_source_1l00296"/>00296 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04000ABF&#32;RID:&#32;2751</emphasis>
<anchor xml:id="__render_data_8cs_source_1l00297"/>00297 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;idShadow;
<anchor xml:id="__render_data_8cs_source_1l00298"/>00298 
<anchor xml:id="__render_data_8cs_source_1l00299"/>00299 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04000AC0&#32;RID:&#32;2752</emphasis>
<anchor xml:id="__render_data_8cs_source_1l00300"/>00300 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_mesh_pass">MeshPass</link>&#32;pass;
<anchor xml:id="__render_data_8cs_source_1l00301"/>00301 
<anchor xml:id="__render_data_8cs_source_1l00302"/>00302 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04000AC1&#32;RID:&#32;2753</emphasis>
<anchor xml:id="__render_data_8cs_source_1l00303"/>00303 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Vector3&#32;offset;
<anchor xml:id="__render_data_8cs_source_1l00304"/>00304 
<anchor xml:id="__render_data_8cs_source_1l00305"/>00305 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04000AC2&#32;RID:&#32;2754</emphasis>
<anchor xml:id="__render_data_8cs_source_1l00306"/>00306 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Vector3&#32;offsetBack;
<anchor xml:id="__render_data_8cs_source_1l00307"/>00307 
<anchor xml:id="__render_data_8cs_source_1l00308"/>00308 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04000AC3&#32;RID:&#32;2755</emphasis>
<anchor xml:id="__render_data_8cs_source_1l00309"/>00309 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Vector3&#32;offsetShadow;
<anchor xml:id="__render_data_8cs_source_1l00310"/>00310 
<anchor xml:id="__render_data_8cs_source_1l00311"/>00311 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04000AC4&#32;RID:&#32;2756</emphasis>
<anchor xml:id="__render_data_8cs_source_1l00312"/>00312 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Vector3&#32;heldPos;
<anchor xml:id="__render_data_8cs_source_1l00313"/>00313 
<anchor xml:id="__render_data_8cs_source_1l00314"/>00314 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04000AC5&#32;RID:&#32;2757</emphasis>
<anchor xml:id="__render_data_8cs_source_1l00315"/>00315 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Vector2&#32;imagePivot&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector2(0.5f,&#32;0.25f);
<anchor xml:id="__render_data_8cs_source_1l00316"/>00316 
<anchor xml:id="__render_data_8cs_source_1l00317"/>00317 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04000AC6&#32;RID:&#32;2758</emphasis>
<anchor xml:id="__render_data_8cs_source_1l00318"/>00318 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Vector2&#32;imageScale&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector2(1f,&#32;1f);
<anchor xml:id="__render_data_8cs_source_1l00319"/>00319 
<anchor xml:id="__render_data_8cs_source_1l00320"/>00320 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04000AC7&#32;RID:&#32;2759</emphasis>
<anchor xml:id="__render_data_8cs_source_1l00321"/>00321 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Vector2&#32;size;
<anchor xml:id="__render_data_8cs_source_1l00322"/>00322 
<anchor xml:id="__render_data_8cs_source_1l00323"/>00323 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04000AC8&#32;RID:&#32;2760</emphasis>
<anchor xml:id="__render_data_8cs_source_1l00324"/>00324 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;multiSize;
<anchor xml:id="__render_data_8cs_source_1l00325"/>00325 
<anchor xml:id="__render_data_8cs_source_1l00326"/>00326 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04000AC9&#32;RID:&#32;2761</emphasis>
<anchor xml:id="__render_data_8cs_source_1l00327"/>00327 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;animate;
<anchor xml:id="__render_data_8cs_source_1l00328"/>00328 
<anchor xml:id="__render_data_8cs_source_1l00329"/>00329 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04000ACA&#32;RID:&#32;2762</emphasis>
<anchor xml:id="__render_data_8cs_source_1l00330"/>00330 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;useOffsetBack;
<anchor xml:id="__render_data_8cs_source_1l00331"/>00331 
<anchor xml:id="__render_data_8cs_source_1l00332"/>00332 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04000ACB&#32;RID:&#32;2763</emphasis>
<anchor xml:id="__render_data_8cs_source_1l00333"/>00333 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;persistActor;
<anchor xml:id="__render_data_8cs_source_1l00334"/>00334 
<anchor xml:id="__render_data_8cs_source_1l00335"/>00335 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04000ACC&#32;RID:&#32;2764</emphasis>
<anchor xml:id="__render_data_8cs_source_1l00336"/>00336 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;symmetry&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__render_data_8cs_source_1l00337"/>00337 
<anchor xml:id="__render_data_8cs_source_1l00338"/>00338 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04000ACD&#32;RID:&#32;2765</emphasis>
<anchor xml:id="__render_data_8cs_source_1l00339"/>00339 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;hangedFixZ;
<anchor xml:id="__render_data_8cs_source_1l00340"/>00340 
<anchor xml:id="__render_data_8cs_source_1l00341"/>00341 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04000ACE&#32;RID:&#32;2766</emphasis>
<anchor xml:id="__render_data_8cs_source_1l00342"/>00342 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;stackZ;
<anchor xml:id="__render_data_8cs_source_1l00343"/>00343 
<anchor xml:id="__render_data_8cs_source_1l00344"/>00344 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04000ACF&#32;RID:&#32;2767</emphasis>
<anchor xml:id="__render_data_8cs_source_1l00345"/>00345 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_sub_pass_data">SubPassData</link>&#32;subCrate;
<anchor xml:id="__render_data_8cs_source_1l00346"/>00346 
<anchor xml:id="__render_data_8cs_source_1l00347"/>00347 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04000AD0&#32;RID:&#32;2768</emphasis>
<anchor xml:id="__render_data_8cs_source_1l00348"/>00348 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_source_pref">SourcePref</link>&#32;shadowPref;
<anchor xml:id="__render_data_8cs_source_1l00349"/>00349 
<anchor xml:id="__render_data_8cs_source_1l00350"/>00350 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04000AD1&#32;RID:&#32;2769</emphasis>
<anchor xml:id="__render_data_8cs_source_1l00351"/>00351 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_render_data">RenderData</link>&#32;subData;
<anchor xml:id="__render_data_8cs_source_1l00352"/>00352 
<anchor xml:id="__render_data_8cs_source_1l00353"/>00353 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04000AD2&#32;RID:&#32;2770</emphasis>
<anchor xml:id="__render_data_8cs_source_1l00354"/>00354 &#32;&#32;&#32;&#32;[NonSerialized]
<anchor xml:id="__render_data_8cs_source_1l00355"/>00355 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;initialized;
<anchor xml:id="__render_data_8cs_source_1l00356"/>00356 
<anchor xml:id="__render_data_8cs_source_1l00357"/>00357 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04000AD3&#32;RID:&#32;2771</emphasis>
<anchor xml:id="__render_data_8cs_source_1l00358"/>00358 &#32;&#32;&#32;&#32;[NonSerialized]
<anchor xml:id="__render_data_8cs_source_1l00359"/>00359 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Sprite&#32;_sprite;
<anchor xml:id="__render_data_8cs_source_1l00360"/>00360 
<anchor xml:id="__render_data_8cs_source_1l00361"/>00361 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04000AD4&#32;RID:&#32;2772</emphasis>
<anchor xml:id="__render_data_8cs_source_1l00362"/>00362 &#32;&#32;&#32;&#32;[NonSerialized]
<anchor xml:id="__render_data_8cs_source_1l00363"/>00363 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;hasSubPass;
<anchor xml:id="__render_data_8cs_source_1l00364"/>00364 
<anchor xml:id="__render_data_8cs_source_1l00365"/>00365 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04000AD5&#32;RID:&#32;2773</emphasis>
<anchor xml:id="__render_data_8cs_source_1l00366"/>00366 &#32;&#32;&#32;&#32;[NonSerialized]
<anchor xml:id="__render_data_8cs_source_1l00367"/>00367 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;hasSnowPass;
<anchor xml:id="__render_data_8cs_source_1l00368"/>00368 
<anchor xml:id="__render_data_8cs_source_1l00369"/>00369 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04000AD6&#32;RID:&#32;2774</emphasis>
<anchor xml:id="__render_data_8cs_source_1l00370"/>00370 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;orgX;
<anchor xml:id="__render_data_8cs_source_1l00371"/>00371 
<anchor xml:id="__render_data_8cs_source_1l00372"/>00372 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04000AD7&#32;RID:&#32;2775</emphasis>
<anchor xml:id="__render_data_8cs_source_1l00373"/>00373 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;orgY;
<anchor xml:id="__render_data_8cs_source_1l00374"/>00374 
<anchor xml:id="__render_data_8cs_source_1l00375"/>00375 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04000AD8&#32;RID:&#32;2776</emphasis>
<anchor xml:id="__render_data_8cs_source_1l00376"/>00376 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;orgZ;
<anchor xml:id="__render_data_8cs_source_1l00377"/>00377 }
</programlisting></section>
