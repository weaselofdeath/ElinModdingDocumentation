<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__map_8cs_source" xml:lang="en-US">
<title>Map.cs</title>
<indexterm><primary>Elin/Map.cs</primary></indexterm>
<programlisting linenumbering="unnumbered"><anchor xml:id="__map_8cs_source_1l00001"/>00001 <emphasis role="keyword">using&#32;</emphasis>System;
<anchor xml:id="__map_8cs_source_1l00002"/>00002 <emphasis role="keyword">using&#32;</emphasis>System.Collections.Generic;
<anchor xml:id="__map_8cs_source_1l00003"/>00003 <emphasis role="keyword">using&#32;</emphasis>System.IO;
<anchor xml:id="__map_8cs_source_1l00004"/>00004 <emphasis role="keyword">using&#32;</emphasis>System.Linq;
<anchor xml:id="__map_8cs_source_1l00005"/>00005 <emphasis role="keyword">using&#32;</emphasis>System.Runtime.CompilerServices;
<anchor xml:id="__map_8cs_source_1l00006"/>00006 <emphasis role="keyword">using&#32;</emphasis>System.Runtime.Serialization;
<anchor xml:id="__map_8cs_source_1l00007"/>00007 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_algorithms">Algorithms</link>;
<anchor xml:id="__map_8cs_source_1l00008"/>00008 <emphasis role="keyword">using&#32;</emphasis>FloodSpill;
<anchor xml:id="__map_8cs_source_1l00009"/>00009 <emphasis role="keyword">using&#32;</emphasis>Ionic.Zip;
<anchor xml:id="__map_8cs_source_1l00010"/>00010 <emphasis role="keyword">using&#32;</emphasis>Newtonsoft.Json;
<anchor xml:id="__map_8cs_source_1l00011"/>00011 <emphasis role="keyword">using&#32;</emphasis>UnityEngine;
<anchor xml:id="__map_8cs_source_1l00012"/>00012 
<anchor xml:id="__map_8cs_source_1l00013"/>00013 <emphasis role="comment">//&#32;Token:&#32;0x0200068C&#32;RID:&#32;1676</emphasis>
<anchor xml:id="__map_8cs_source_1l00014"/><link linkend="_class_map">00014</link> <emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_map">Map</link>&#32;:&#32;<link linkend="_class_map_bounds">MapBounds</link>,&#32;<link linkend="_interface_i_pathfind_grid">IPathfindGrid</link>
<anchor xml:id="__map_8cs_source_1l00015"/>00015 {
<anchor xml:id="__map_8cs_source_1l00016"/>00016 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x17000D5F&#32;RID:&#32;3423</emphasis>
<anchor xml:id="__map_8cs_source_1l00017"/>00017 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;(get)&#32;Token:&#32;0x06002EF6&#32;RID:&#32;12022&#32;RVA:&#32;0x00107261&#32;File&#32;Offset:&#32;0x00105461</emphasis>
<anchor xml:id="__map_8cs_source_1l00018"/>00018 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;(set)&#32;Token:&#32;0x06002EF7&#32;RID:&#32;12023&#32;RVA:&#32;0x0010726F&#32;File&#32;Offset:&#32;0x0010546F</emphasis>
<anchor xml:id="__map_8cs_source_1l00019"/>00019 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isBreakerDown
<anchor xml:id="__map_8cs_source_1l00020"/>00020 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00021"/>00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
<anchor xml:id="__map_8cs_source_1l00022"/>00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00023"/>00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this.bits[0];
<anchor xml:id="__map_8cs_source_1l00024"/>00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00025"/>00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">set</emphasis>
<anchor xml:id="__map_8cs_source_1l00026"/>00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00027"/>00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.bits[0]&#32;=&#32;value;
<anchor xml:id="__map_8cs_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00030"/>00030 
<anchor xml:id="__map_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x17000D60&#32;RID:&#32;3424</emphasis>
<anchor xml:id="__map_8cs_source_1l00032"/>00032 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;(get)&#32;Token:&#32;0x06002EF8&#32;RID:&#32;12024&#32;RVA:&#32;0x0010727E&#32;File&#32;Offset:&#32;0x0010547E</emphasis>
<anchor xml:id="__map_8cs_source_1l00033"/>00033 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_props_stocked">PropsStocked</link>&#32;Stocked
<anchor xml:id="__map_8cs_source_1l00034"/>00034 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
<anchor xml:id="__map_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this.props.stocked;
<anchor xml:id="__map_8cs_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00040"/>00040 
<anchor xml:id="__map_8cs_source_1l00041"/>00041 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x17000D61&#32;RID:&#32;3425</emphasis>
<anchor xml:id="__map_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;(get)&#32;Token:&#32;0x06002EF9&#32;RID:&#32;12025&#32;RVA:&#32;0x0010728B&#32;File&#32;Offset:&#32;0x0010548B</emphasis>
<anchor xml:id="__map_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_props_installed">PropsInstalled</link>&#32;Installed
<anchor xml:id="__map_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
<anchor xml:id="__map_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this.props.installed;
<anchor xml:id="__map_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00050"/>00050 
<anchor xml:id="__map_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x17000D62&#32;RID:&#32;3426</emphasis>
<anchor xml:id="__map_8cs_source_1l00052"/>00052 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;(get)&#32;Token:&#32;0x06002EFA&#32;RID:&#32;12026&#32;RVA:&#32;0x00107298&#32;File&#32;Offset:&#32;0x00105498</emphasis>
<anchor xml:id="__map_8cs_source_1l00053"/>00053 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_props_roaming">PropsRoaming</link>&#32;Roaming
<anchor xml:id="__map_8cs_source_1l00054"/>00054 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
<anchor xml:id="__map_8cs_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this.props.roaming;
<anchor xml:id="__map_8cs_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00059"/>00059 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00060"/>00060 
<anchor xml:id="__map_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x17000D63&#32;RID:&#32;3427</emphasis>
<anchor xml:id="__map_8cs_source_1l00062"/>00062 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;(get)&#32;Token:&#32;0x06002EFB&#32;RID:&#32;12027&#32;RVA:&#32;0x001072A5&#32;File&#32;Offset:&#32;0x001054A5</emphasis>
<anchor xml:id="__map_8cs_source_1l00063"/>00063 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;sizeModifier
<anchor xml:id="__map_8cs_source_1l00064"/>00064 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
<anchor xml:id="__map_8cs_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1f&#32;/&#32;(16384f&#32;/&#32;(float)this.SizeXZ);
<anchor xml:id="__map_8cs_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00069"/>00069 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00070"/>00070 
<anchor xml:id="__map_8cs_source_1l00071"/>00071 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x17000D64&#32;RID:&#32;3428</emphasis>
<anchor xml:id="__map_8cs_source_1l00072"/>00072 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;(get)&#32;Token:&#32;0x06002EFC&#32;RID:&#32;12028&#32;RVA:&#32;0x001072BA&#32;File&#32;Offset:&#32;0x001054BA</emphasis>
<anchor xml:id="__map_8cs_source_1l00073"/>00073 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isGenerated
<anchor xml:id="__map_8cs_source_1l00074"/>00074 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
<anchor xml:id="__map_8cs_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this.Size&#32;!=&#32;0;
<anchor xml:id="__map_8cs_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00079"/>00079 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00080"/>00080 
<anchor xml:id="__map_8cs_source_1l00081"/>00081 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x17000D65&#32;RID:&#32;3429</emphasis>
<anchor xml:id="__map_8cs_source_1l00082"/>00082 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;(get)&#32;Token:&#32;0x06002EFD&#32;RID:&#32;12029&#32;RVA:&#32;0x001072C5&#32;File&#32;Offset:&#32;0x001054C5</emphasis>
<anchor xml:id="__map_8cs_source_1l00083"/>00083 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;IsIndoor
<anchor xml:id="__map_8cs_source_1l00084"/>00084 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
<anchor xml:id="__map_8cs_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this.config.indoor;
<anchor xml:id="__map_8cs_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00089"/>00089 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00090"/>00090 
<anchor xml:id="__map_8cs_source_1l00091"/>00091 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x17000D66&#32;RID:&#32;3430</emphasis>
<anchor xml:id="__map_8cs_source_1l00092"/>00092 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;(get)&#32;Token:&#32;0x06002EFE&#32;RID:&#32;12030&#32;RVA:&#32;0x001072D2&#32;File&#32;Offset:&#32;0x001054D2</emphasis>
<anchor xml:id="__map_8cs_source_1l00093"/>00093 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;SizeXZ
<anchor xml:id="__map_8cs_source_1l00094"/>00094 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
<anchor xml:id="__map_8cs_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this.Size&#32;*&#32;this.Size;
<anchor xml:id="__map_8cs_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00099"/>00099 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00100"/>00100 
<anchor xml:id="__map_8cs_source_1l00101"/>00101 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x17000D67&#32;RID:&#32;3431</emphasis>
<anchor xml:id="__map_8cs_source_1l00102"/>00102 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;(get)&#32;Token:&#32;0x06002EFF&#32;RID:&#32;12031&#32;RVA:&#32;0x001072E1&#32;File&#32;Offset:&#32;0x001054E1</emphasis>
<anchor xml:id="__map_8cs_source_1l00103"/>00103 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;IEnumerable&lt;Card&gt;&#32;Cards
<anchor xml:id="__map_8cs_source_1l00104"/>00104 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
<anchor xml:id="__map_8cs_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this.things.Concat(this.charas);
<anchor xml:id="__map_8cs_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00109"/>00109 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00110"/>00110 
<anchor xml:id="__map_8cs_source_1l00111"/>00111 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F00&#32;RID:&#32;12032&#32;RVA:&#32;0x001072F4&#32;File&#32;Offset:&#32;0x001054F4</emphasis>
<anchor xml:id="__map_8cs_source_1l00112"/>00112 &#32;&#32;&#32;&#32;[OnSerializing]
<anchor xml:id="__map_8cs_source_1l00113"/>00113 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnSerializing(StreamingContext&#32;context)
<anchor xml:id="__map_8cs_source_1l00114"/>00114 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00115"/>00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this._bits&#32;=&#32;(int)this.bits.Bits;
<anchor xml:id="__map_8cs_source_1l00116"/>00116 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00117"/>00117 
<anchor xml:id="__map_8cs_source_1l00118"/>00118 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F01&#32;RID:&#32;12033&#32;RVA:&#32;0x00107307&#32;File&#32;Offset:&#32;0x00105507</emphasis>
<anchor xml:id="__map_8cs_source_1l00119"/>00119 &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnSerializing()
<anchor xml:id="__map_8cs_source_1l00120"/>00120 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00121"/>00121 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00122"/>00122 
<anchor xml:id="__map_8cs_source_1l00123"/>00123 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F02&#32;RID:&#32;12034&#32;RVA:&#32;0x00107309&#32;File&#32;Offset:&#32;0x00105509</emphasis>
<anchor xml:id="__map_8cs_source_1l00124"/>00124 &#32;&#32;&#32;&#32;[OnDeserialized]
<anchor xml:id="__map_8cs_source_1l00125"/>00125 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnDeserialized(StreamingContext&#32;context)
<anchor xml:id="__map_8cs_source_1l00126"/>00126 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00127"/>00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.bits.Bits&#32;=&#32;(uint)this._bits;
<anchor xml:id="__map_8cs_source_1l00128"/>00128 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00129"/>00129 
<anchor xml:id="__map_8cs_source_1l00130"/>00130 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F04&#32;RID:&#32;12036&#32;RVA:&#32;0x00107418&#32;File&#32;Offset:&#32;0x00105618</emphasis>
<anchor xml:id="__map_8cs_source_1l00131"/>00131 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;CreateNew(<emphasis role="keywordtype">int</emphasis>&#32;size,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;setReference&#32;=&#32;<emphasis role="keyword">true</emphasis>)
<anchor xml:id="__map_8cs_source_1l00132"/>00132 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00133"/>00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Debug.Log(<emphasis role="stringliteral">&quot;Map&#32;CreateNew:&quot;</emphasis>);
<anchor xml:id="__map_8cs_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.Size&#32;=&#32;size;
<anchor xml:id="__map_8cs_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.cells&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_cell">Cell</link>[this.Size,&#32;this.Size];
<anchor xml:id="__map_8cs_source_1l00136"/>00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.bounds&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_map_bounds">MapBounds</link>
<anchor xml:id="__map_8cs_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x&#32;=&#32;0,
<anchor xml:id="__map_8cs_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;z&#32;=&#32;0,
<anchor xml:id="__map_8cs_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;maxX&#32;=&#32;this.Size&#32;-&#32;1,
<anchor xml:id="__map_8cs_source_1l00141"/>00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;maxZ&#32;=&#32;this.Size&#32;-&#32;1,
<anchor xml:id="__map_8cs_source_1l00142"/>00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Size&#32;=&#32;this.Size
<anchor xml:id="__map_8cs_source_1l00143"/>00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__map_8cs_source_1l00144"/>00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;base.SetBounds(0,&#32;0,&#32;this.Size&#32;-&#32;1,&#32;this.Size&#32;-&#32;1);
<anchor xml:id="__map_8cs_source_1l00145"/>00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.ForeachXYZ(delegate(<emphasis role="keywordtype">int</emphasis>&#32;x,&#32;<emphasis role="keywordtype">int</emphasis>&#32;z)
<anchor xml:id="__map_8cs_source_1l00146"/>00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00147"/>00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.cells[x,&#32;z]&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_cell">Cell</link>
<anchor xml:id="__map_8cs_source_1l00148"/>00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00149"/>00149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x&#32;=&#32;(byte)x,
<anchor xml:id="__map_8cs_source_1l00150"/>00150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;z&#32;=&#32;(<emphasis role="keywordtype">byte</emphasis>)z
<anchor xml:id="__map_8cs_source_1l00151"/>00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__map_8cs_source_1l00152"/>00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__map_8cs_source_1l00153"/>00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(setReference)
<anchor xml:id="__map_8cs_source_1l00154"/>00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00155"/>00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.SetReference();
<anchor xml:id="__map_8cs_source_1l00156"/>00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00157"/>00157 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00158"/>00158 
<anchor xml:id="__map_8cs_source_1l00159"/>00159 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F05&#32;RID:&#32;12037&#32;RVA:&#32;0x001074C4&#32;File&#32;Offset:&#32;0x001056C4</emphasis>
<anchor xml:id="__map_8cs_source_1l00160"/>00160 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;SetZone(<link linkend="_class_zone">Zone</link>&#32;_zone)
<anchor xml:id="__map_8cs_source_1l00161"/>00161 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00162"/>00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.zone&#32;=&#32;_zone;
<anchor xml:id="__map_8cs_source_1l00163"/>00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.zone.bounds&#32;=&#32;this.bounds;
<anchor xml:id="__map_8cs_source_1l00164"/>00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.bounds.Size&#32;=&#32;this.Size;
<anchor xml:id="__map_8cs_source_1l00165"/>00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.SetReference();
<anchor xml:id="__map_8cs_source_1l00166"/>00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.props.Init();
<anchor xml:id="__map_8cs_source_1l00167"/>00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EClass.scene.profile&#32;=&#32;<link linkend="_class_scene_profile">SceneProfile</link>.Load(this.config.idSceneProfile.IsEmpty(<emphasis role="stringliteral">&quot;default&quot;</emphasis>));
<anchor xml:id="__map_8cs_source_1l00168"/>00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!this.config.idFowProfile.IsEmpty())
<anchor xml:id="__map_8cs_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00170"/>00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.fowProfile&#32;=&#32;<link linkend="_class_fow_profile">FowProfile</link>.Load(this.config.idFowProfile);
<anchor xml:id="__map_8cs_source_1l00171"/>00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00172"/>00172 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00173"/>00173 
<anchor xml:id="__map_8cs_source_1l00174"/>00174 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F06&#32;RID:&#32;12038&#32;RVA:&#32;0x00107558&#32;File&#32;Offset:&#32;0x00105758</emphasis>
<anchor xml:id="__map_8cs_source_1l00175"/>00175 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;SetReference()
<anchor xml:id="__map_8cs_source_1l00176"/>00176 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00177"/>00177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CellDetail.map&#32;=&#32;<emphasis role="keyword">this</emphasis>;
<anchor xml:id="__map_8cs_source_1l00178"/>00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Point.map&#32;=&#32;<emphasis role="keyword">this</emphasis>;
<anchor xml:id="__map_8cs_source_1l00179"/>00179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Wall.map&#32;=&#32;<emphasis role="keyword">this</emphasis>;
<anchor xml:id="__map_8cs_source_1l00180"/>00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Cell.map&#32;=&#32;<emphasis role="keyword">this</emphasis>;
<anchor xml:id="__map_8cs_source_1l00181"/>00181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Fov.map&#32;=&#32;<emphasis role="keyword">this</emphasis>;
<anchor xml:id="__map_8cs_source_1l00182"/>00182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Cell.Size&#32;=&#32;this.Size;
<anchor xml:id="__map_8cs_source_1l00183"/>00183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Cell.cells&#32;=&#32;this.cells;
<anchor xml:id="__map_8cs_source_1l00184"/>00184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_interface_i_pathfinder">IPathfinder</link>&#32;pathfinder&#32;=&#32;<link linkend="_class_path_manager">PathManager</link>.Instance.pathfinder;
<anchor xml:id="__map_8cs_source_1l00185"/>00185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_algorithms_1_1_weight_cell">WeightCell</link>[,]&#32;weightMap&#32;=&#32;this.cells;
<anchor xml:id="__map_8cs_source_1l00186"/>00186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pathfinder.Init(<emphasis role="keyword">this</emphasis>,&#32;weightMap,&#32;this.Size);
<anchor xml:id="__map_8cs_source_1l00187"/>00187 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00188"/>00188 
<anchor xml:id="__map_8cs_source_1l00189"/>00189 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F07&#32;RID:&#32;12039&#32;RVA:&#32;0x001075B8&#32;File&#32;Offset:&#32;0x001057B8</emphasis>
<anchor xml:id="__map_8cs_source_1l00190"/>00190 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnDeactivate()
<anchor xml:id="__map_8cs_source_1l00191"/>00191 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00192"/>00192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.charas.ForeachReverse(delegate(<link linkend="_class_chara">Chara</link>&#32;c)
<anchor xml:id="__map_8cs_source_1l00193"/>00193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00194"/>00194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;c.ai&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_no_goal">NoGoal</link>();
<anchor xml:id="__map_8cs_source_1l00195"/>00195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(c.IsGlobal)
<anchor xml:id="__map_8cs_source_1l00196"/>00196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00197"/>00197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.zone.RemoveCard(c);
<anchor xml:id="__map_8cs_source_1l00198"/>00198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;c.currentZone&#32;=&#32;this.zone;
<anchor xml:id="__map_8cs_source_1l00199"/>00199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00200"/>00200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__map_8cs_source_1l00201"/>00201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_thing">Thing</link>&#32;thing&#32;<emphasis role="keywordflow">in</emphasis>&#32;this.things)
<anchor xml:id="__map_8cs_source_1l00202"/>00202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00203"/>00203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(thing.renderer.hasActor)
<anchor xml:id="__map_8cs_source_1l00204"/>00204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00205"/>00205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;thing.renderer.KillActor();
<anchor xml:id="__map_8cs_source_1l00206"/>00206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00207"/>00207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00208"/>00208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_e_class">EClass</link>.player.ClearMapHighlights();
<anchor xml:id="__map_8cs_source_1l00209"/>00209 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00210"/>00210 
<anchor xml:id="__map_8cs_source_1l00211"/>00211 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F08&#32;RID:&#32;12040&#32;RVA:&#32;0x00107640&#32;File&#32;Offset:&#32;0x00105840</emphasis>
<anchor xml:id="__map_8cs_source_1l00212"/>00212 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Resize(<emphasis role="keywordtype">int</emphasis>&#32;newSize)
<anchor xml:id="__map_8cs_source_1l00213"/>00213 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00214"/>00214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_point">Point</link>&#32;p&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_point">Point</link>(0,&#32;0);
<anchor xml:id="__map_8cs_source_1l00215"/>00215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_thing">Thing</link>&#32;thing&#32;<emphasis role="keywordflow">in</emphasis>&#32;<link linkend="_class_e_class">EClass</link>._map.things)
<anchor xml:id="__map_8cs_source_1l00216"/>00216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00217"/>00217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(thing.pos.x&#32;&gt;=&#32;newSize&#32;||&#32;thing.pos.z&#32;&gt;=&#32;newSize)
<anchor xml:id="__map_8cs_source_1l00218"/>00218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00219"/>00219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.MoveCard(p,&#32;thing);
<anchor xml:id="__map_8cs_source_1l00220"/>00220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00221"/>00221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00222"/>00222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_chara">Chara</link>&#32;chara&#32;<emphasis role="keywordflow">in</emphasis>&#32;<link linkend="_class_e_class">EClass</link>._map.charas)
<anchor xml:id="__map_8cs_source_1l00223"/>00223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00224"/>00224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(chara.pos.x&#32;&gt;=&#32;newSize&#32;||&#32;chara.pos.z&#32;&gt;=&#32;newSize)
<anchor xml:id="__map_8cs_source_1l00225"/>00225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00226"/>00226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.MoveCard(p,&#32;chara);
<anchor xml:id="__map_8cs_source_1l00227"/>00227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00228"/>00228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00229"/>00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.bounds.Size&#32;=&#32;newSize;
<anchor xml:id="__map_8cs_source_1l00230"/>00230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.Size&#32;=&#32;newSize;
<anchor xml:id="__map_8cs_source_1l00231"/>00231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.maxX&#32;=&#32;(this.maxZ&#32;=&#32;this.Size);
<anchor xml:id="__map_8cs_source_1l00232"/>00232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.cells&#32;=&#32;Util.ResizeArray&lt;<link linkend="_class_cell">Cell</link>&gt;(<link linkend="_class_e_class">EClass</link>._map.cells,&#32;newSize,&#32;newSize,&#32;(<emphasis role="keywordtype">int</emphasis>&#32;x,&#32;<emphasis role="keywordtype">int</emphasis>&#32;y)&#32;=&gt;&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_cell">Cell</link>
<anchor xml:id="__map_8cs_source_1l00233"/>00233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00234"/>00234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x&#32;=&#32;(byte)x,
<anchor xml:id="__map_8cs_source_1l00235"/>00235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;z&#32;=&#32;(<emphasis role="keywordtype">byte</emphasis>)y,
<anchor xml:id="__map_8cs_source_1l00236"/>00236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;isSeen&#32;=&#32;<emphasis role="keyword">true</emphasis>
<anchor xml:id="__map_8cs_source_1l00237"/>00237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__map_8cs_source_1l00238"/>00238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.Reload();
<anchor xml:id="__map_8cs_source_1l00239"/>00239 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00240"/>00240 
<anchor xml:id="__map_8cs_source_1l00241"/>00241 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F09&#32;RID:&#32;12041&#32;RVA:&#32;0x00107790&#32;File&#32;Offset:&#32;0x00105990</emphasis>
<anchor xml:id="__map_8cs_source_1l00242"/>00242 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Shift(Vector2Int&#32;offset)
<anchor xml:id="__map_8cs_source_1l00243"/>00243 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00244"/>00244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TweenUtil.Tween(0.1f,&#32;<emphasis role="keyword">null</emphasis>,&#32;delegate()
<anchor xml:id="__map_8cs_source_1l00245"/>00245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00246"/>00246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_card">Card</link>&#32;card&#32;<emphasis role="keywordflow">in</emphasis>&#32;<link linkend="_class_e_class">EClass</link>._map.things.Concat(<link linkend="_class_e_class">EClass</link>._map.charas))
<anchor xml:id="__map_8cs_source_1l00247"/>00247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00248"/>00248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;card.pos.x&#32;+=&#32;offset.x;
<anchor xml:id="__map_8cs_source_1l00249"/>00249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;card.pos.z&#32;+=&#32;offset.y;
<anchor xml:id="__map_8cs_source_1l00250"/>00250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;card.pos.Clamp(<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__map_8cs_source_1l00251"/>00251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00252"/>00252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_cell">Cell</link>[,]&#32;array&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_cell">Cell</link>[this.Size,&#32;this.Size];
<anchor xml:id="__map_8cs_source_1l00253"/>00253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;this.Size;&#32;i++)
<anchor xml:id="__map_8cs_source_1l00254"/>00254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00255"/>00255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;num&#32;=&#32;i&#32;-&#32;offset.y;
<anchor xml:id="__map_8cs_source_1l00256"/>00256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;j&#32;=&#32;0;&#32;j&#32;&lt;&#32;this.Size;&#32;j++)
<anchor xml:id="__map_8cs_source_1l00257"/>00257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00258"/>00258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;num2&#32;=&#32;j&#32;-&#32;offset.x;
<anchor xml:id="__map_8cs_source_1l00259"/>00259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(num2&#32;&gt;=&#32;0&#32;&amp;&amp;&#32;num2&#32;&lt;&#32;this.Size&#32;&amp;&amp;&#32;num&#32;&gt;=&#32;0&#32;&amp;&amp;&#32;num&#32;&lt;&#32;this.Size)
<anchor xml:id="__map_8cs_source_1l00260"/>00260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00261"/>00261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;array[j,&#32;i]&#32;=&#32;this.cells[num2,&#32;num];
<anchor xml:id="__map_8cs_source_1l00262"/>00262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00263"/>00263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__map_8cs_source_1l00264"/>00264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00265"/>00265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;array[j,&#32;i]&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_cell">Cell</link>
<anchor xml:id="__map_8cs_source_1l00266"/>00266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00267"/>00267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x&#32;=&#32;(byte)j,
<anchor xml:id="__map_8cs_source_1l00268"/>00268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;z&#32;=&#32;(<emphasis role="keywordtype">byte</emphasis>)i
<anchor xml:id="__map_8cs_source_1l00269"/>00269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__map_8cs_source_1l00270"/>00270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00271"/>00271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00272"/>00272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00273"/>00273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.cells&#32;=&#32;array;
<anchor xml:id="__map_8cs_source_1l00274"/>00274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.bounds.x&#32;+=&#32;offset.x;
<anchor xml:id="__map_8cs_source_1l00275"/>00275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.bounds.z&#32;+=&#32;offset.y;
<anchor xml:id="__map_8cs_source_1l00276"/>00276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.bounds.maxX&#32;+=&#32;offset.x;
<anchor xml:id="__map_8cs_source_1l00277"/>00277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.bounds.maxZ&#32;+=&#32;offset.y;
<anchor xml:id="__map_8cs_source_1l00278"/>00278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.bounds.x&#32;&lt;&#32;0)
<anchor xml:id="__map_8cs_source_1l00279"/>00279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00280"/>00280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.bounds.x&#32;=&#32;0;
<anchor xml:id="__map_8cs_source_1l00281"/>00281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00282"/>00282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.bounds.z&#32;&lt;&#32;0)
<anchor xml:id="__map_8cs_source_1l00283"/>00283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00284"/>00284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.bounds.z&#32;=&#32;0;
<anchor xml:id="__map_8cs_source_1l00285"/>00285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00286"/>00286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.bounds.maxX&#32;&gt;&#32;<emphasis role="keyword">this</emphasis>.Size)
<anchor xml:id="__map_8cs_source_1l00287"/>00287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00288"/>00288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.bounds.maxX&#32;=&#32;this.Size;
<anchor xml:id="__map_8cs_source_1l00289"/>00289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00290"/>00290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.bounds.maxZ&#32;&gt;&#32;<emphasis role="keyword">this</emphasis>.Size)
<anchor xml:id="__map_8cs_source_1l00291"/>00291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00292"/>00292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.bounds.maxZ&#32;=&#32;this.Size;
<anchor xml:id="__map_8cs_source_1l00293"/>00293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00294"/>00294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.Reload();
<anchor xml:id="__map_8cs_source_1l00295"/>00295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__map_8cs_source_1l00296"/>00296 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00297"/>00297 
<anchor xml:id="__map_8cs_source_1l00298"/>00298 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F0A&#32;RID:&#32;12042&#32;RVA:&#32;0x001077CC&#32;File&#32;Offset:&#32;0x001059CC</emphasis>
<anchor xml:id="__map_8cs_source_1l00299"/>00299 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Reload()
<anchor xml:id="__map_8cs_source_1l00300"/>00300 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00301"/>00301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.rooms&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_room_manager">RoomManager</link>();
<anchor xml:id="__map_8cs_source_1l00302"/>00302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.SetReference();
<anchor xml:id="__map_8cs_source_1l00303"/>00303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;<emphasis role="keywordtype">id</emphasis>&#32;=&#32;<link linkend="_class_game">Game</link>.id;
<anchor xml:id="__map_8cs_source_1l00304"/>00304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_e_class">EClass</link>.game.Save(<emphasis role="keyword">false</emphasis>,&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__map_8cs_source_1l00305"/>00305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_e_class">EClass</link>.scene.Init(<link linkend="_class_scene">Scene</link>.Mode.None);
<anchor xml:id="__map_8cs_source_1l00306"/>00306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_game">Game</link>.Load(<emphasis role="keywordtype">id</emphasis>);
<anchor xml:id="__map_8cs_source_1l00307"/>00307 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.RevealAll(<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__map_8cs_source_1l00308"/>00308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TweenUtil.Tween(0.1f,&#32;<emphasis role="keyword">null</emphasis>,&#32;delegate()
<anchor xml:id="__map_8cs_source_1l00309"/>00309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00310"/>00310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.ReloadRoom();
<anchor xml:id="__map_8cs_source_1l00311"/>00311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__map_8cs_source_1l00312"/>00312 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00313"/>00313 
<anchor xml:id="__map_8cs_source_1l00314"/>00314 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F0B&#32;RID:&#32;12043&#32;RVA:&#32;0x0010782C&#32;File&#32;Offset:&#32;0x00105A2C</emphasis>
<anchor xml:id="__map_8cs_source_1l00315"/>00315 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;ReloadRoom()
<anchor xml:id="__map_8cs_source_1l00316"/>00316 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00317"/>00317 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;List&lt;Thing&gt;&#32;list&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;Thing&gt;();
<anchor xml:id="__map_8cs_source_1l00318"/>00318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_thing">Thing</link>&#32;thing&#32;<emphasis role="keywordflow">in</emphasis>&#32;this.things)
<anchor xml:id="__map_8cs_source_1l00319"/>00319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00320"/>00320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(thing.trait.IsDoor)
<anchor xml:id="__map_8cs_source_1l00321"/>00321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00322"/>00322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;list.Add(thing);
<anchor xml:id="__map_8cs_source_1l00323"/>00323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00324"/>00324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00325"/>00325 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_thing">Thing</link>&#32;thing2&#32;<emphasis role="keywordflow">in</emphasis>&#32;list)
<anchor xml:id="__map_8cs_source_1l00326"/>00326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00327"/>00327 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_point">Point</link>&#32;pos&#32;=&#32;thing2.pos;
<anchor xml:id="__map_8cs_source_1l00328"/>00328 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_e_class">EClass</link>._zone.RemoveCard(thing2);
<anchor xml:id="__map_8cs_source_1l00329"/>00329 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_e_class">EClass</link>._zone.AddCard(thing2,&#32;pos);
<anchor xml:id="__map_8cs_source_1l00330"/>00330 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;thing2.Install();
<anchor xml:id="__map_8cs_source_1l00331"/>00331 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00332"/>00332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.rooms.RefreshAll();
<anchor xml:id="__map_8cs_source_1l00333"/>00333 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00334"/>00334 
<anchor xml:id="__map_8cs_source_1l00335"/>00335 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F0C&#32;RID:&#32;12044&#32;RVA:&#32;0x001078FC&#32;File&#32;Offset:&#32;0x00105AFC</emphasis>
<anchor xml:id="__map_8cs_source_1l00336"/>00336 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Reset()
<anchor xml:id="__map_8cs_source_1l00337"/>00337 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00338"/>00338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;this.Size;&#32;i++)
<anchor xml:id="__map_8cs_source_1l00339"/>00339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00340"/>00340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;j&#32;=&#32;0;&#32;j&#32;&lt;&#32;this.Size;&#32;j++)
<anchor xml:id="__map_8cs_source_1l00341"/>00341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00342"/>00342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.cells[i,&#32;j].Reset();
<anchor xml:id="__map_8cs_source_1l00343"/>00343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00344"/>00344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00345"/>00345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.SetReference();
<anchor xml:id="__map_8cs_source_1l00346"/>00346 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00347"/>00347 
<anchor xml:id="__map_8cs_source_1l00348"/>00348 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F0D&#32;RID:&#32;12045&#32;RVA:&#32;0x00107944&#32;File&#32;Offset:&#32;0x00105B44</emphasis>
<anchor xml:id="__map_8cs_source_1l00349"/>00349 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;ResetEditorPos()
<anchor xml:id="__map_8cs_source_1l00350"/>00350 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00351"/>00351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_e_class">EClass</link>._zone.Revive();
<anchor xml:id="__map_8cs_source_1l00352"/>00352 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_chara">Chara</link>&#32;chara&#32;<emphasis role="keywordflow">in</emphasis>&#32;this.charas)
<anchor xml:id="__map_8cs_source_1l00353"/>00353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00354"/>00354 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(chara.isPlayerCreation&#32;&amp;&amp;&#32;chara.orgPos&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__map_8cs_source_1l00355"/>00355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00356"/>00356 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.MoveCard(chara.orgPos,&#32;chara);
<anchor xml:id="__map_8cs_source_1l00357"/>00357 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00358"/>00358 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00359"/>00359 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_thing">Thing</link>&#32;thing&#32;<emphasis role="keywordflow">in</emphasis>&#32;this.things)
<anchor xml:id="__map_8cs_source_1l00360"/>00360 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00361"/>00361 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(thing.trait&#32;is&#32;<link linkend="_class_trait_door">TraitDoor</link>)
<anchor xml:id="__map_8cs_source_1l00362"/>00362 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00363"/>00363 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(thing.trait&#32;as&#32;<link linkend="_class_trait_door">TraitDoor</link>).ForceClose();
<anchor xml:id="__map_8cs_source_1l00364"/>00364 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00365"/>00365 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00366"/>00366 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00367"/>00367 
<anchor xml:id="__map_8cs_source_1l00368"/>00368 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F0E&#32;RID:&#32;12046&#32;RVA:&#32;0x00107A10&#32;File&#32;Offset:&#32;0x00105C10</emphasis>
<anchor xml:id="__map_8cs_source_1l00369"/>00369 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Save(<emphasis role="keywordtype">string</emphasis>&#32;path,&#32;<link linkend="_class_zone_export_data">ZoneExportData</link>&#32;export&#32;=&#32;<emphasis role="keyword">null</emphasis>,&#32;<link linkend="_class_partial_map">PartialMap</link>&#32;partial&#32;=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__map_8cs_source_1l00370"/>00370 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00371"/>00371 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.version&#32;=&#32;<link linkend="_class_e_class">EClass</link>.core.version;
<anchor xml:id="__map_8cs_source_1l00372"/>00372 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Debug.Log(<emphasis role="stringliteral">&quot;#io&#32;saving&#32;map:&quot;</emphasis>&#32;+&#32;path);
<anchor xml:id="__map_8cs_source_1l00373"/>00373 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;IO.CreateDirectory(path);
<anchor xml:id="__map_8cs_source_1l00374"/>00374 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;num&#32;=&#32;0;
<anchor xml:id="__map_8cs_source_1l00375"/>00375 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;num2&#32;=&#32;0;
<anchor xml:id="__map_8cs_source_1l00376"/>00376 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;num3&#32;=&#32;this.Size;
<anchor xml:id="__map_8cs_source_1l00377"/>00377 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;num4&#32;=&#32;this.Size;
<anchor xml:id="__map_8cs_source_1l00378"/>00378 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(partial&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__map_8cs_source_1l00379"/>00379 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00380"/>00380 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num&#32;=&#32;partial.offsetX;
<anchor xml:id="__map_8cs_source_1l00381"/>00381 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num2&#32;=&#32;partial.offsetZ;
<anchor xml:id="__map_8cs_source_1l00382"/>00382 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num3&#32;=&#32;partial.w;
<anchor xml:id="__map_8cs_source_1l00383"/>00383 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num4&#32;=&#32;partial.h;
<anchor xml:id="__map_8cs_source_1l00384"/>00384 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00385"/>00385 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;num5&#32;=&#32;num3&#32;*&#32;num4;
<anchor xml:id="__map_8cs_source_1l00386"/>00386 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;array&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>[num5];
<anchor xml:id="__map_8cs_source_1l00387"/>00387 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;array2&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>[num5];
<anchor xml:id="__map_8cs_source_1l00388"/>00388 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;array3&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>[num5];
<anchor xml:id="__map_8cs_source_1l00389"/>00389 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;array4&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>[num5];
<anchor xml:id="__map_8cs_source_1l00390"/>00390 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;array5&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>[num5];
<anchor xml:id="__map_8cs_source_1l00391"/>00391 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;array6&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>[num5];
<anchor xml:id="__map_8cs_source_1l00392"/>00392 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;array7&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>[num5];
<anchor xml:id="__map_8cs_source_1l00393"/>00393 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;array8&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>[num5];
<anchor xml:id="__map_8cs_source_1l00394"/>00394 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;array9&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>[num5];
<anchor xml:id="__map_8cs_source_1l00395"/>00395 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;array10&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>[num5];
<anchor xml:id="__map_8cs_source_1l00396"/>00396 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;array11&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>[num5];
<anchor xml:id="__map_8cs_source_1l00397"/>00397 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;array12&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>[num5];
<anchor xml:id="__map_8cs_source_1l00398"/>00398 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;array13&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>[num5];
<anchor xml:id="__map_8cs_source_1l00399"/>00399 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;array14&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>[num5];
<anchor xml:id="__map_8cs_source_1l00400"/>00400 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;array15&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>[num5];
<anchor xml:id="__map_8cs_source_1l00401"/>00401 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;array16&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>[num5];
<anchor xml:id="__map_8cs_source_1l00402"/>00402 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;array17&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>[num5];
<anchor xml:id="__map_8cs_source_1l00403"/>00403 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;array18&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>[num5];
<anchor xml:id="__map_8cs_source_1l00404"/>00404 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;array19&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>[num5];
<anchor xml:id="__map_8cs_source_1l00405"/>00405 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.cellEffects.Clear();
<anchor xml:id="__map_8cs_source_1l00406"/>00406 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;num6&#32;=&#32;0;
<anchor xml:id="__map_8cs_source_1l00407"/>00407 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;num;&#32;i&#32;&lt;&#32;num&#32;+&#32;num3;&#32;i++)
<anchor xml:id="__map_8cs_source_1l00408"/>00408 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00409"/>00409 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;j&#32;=&#32;num2;&#32;j&#32;&lt;&#32;num2&#32;+&#32;num4;&#32;j++)
<anchor xml:id="__map_8cs_source_1l00410"/>00410 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00411"/>00411 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_cell">Cell</link>&#32;cell&#32;=&#32;this.cells[i,&#32;j];
<anchor xml:id="__map_8cs_source_1l00412"/>00412 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;array[num6]&#32;=&#32;cell.objVal;
<anchor xml:id="__map_8cs_source_1l00413"/>00413 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;array3[num6]&#32;=&#32;cell._blockMat;
<anchor xml:id="__map_8cs_source_1l00414"/>00414 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;array2[num6]&#32;=&#32;cell._block;
<anchor xml:id="__map_8cs_source_1l00415"/>00415 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;array5[num6]&#32;=&#32;cell._floorMat;
<anchor xml:id="__map_8cs_source_1l00416"/>00416 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;array4[num6]&#32;=&#32;cell._floor;
<anchor xml:id="__map_8cs_source_1l00417"/>00417 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;array6[num6]&#32;=&#32;cell.obj;
<anchor xml:id="__map_8cs_source_1l00418"/>00418 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;array7[num6]&#32;=&#32;cell.objMat;
<anchor xml:id="__map_8cs_source_1l00419"/>00419 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;array8[num6]&#32;=&#32;cell.decal;
<anchor xml:id="__map_8cs_source_1l00420"/>00420 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;array9[num6]&#32;=&#32;cell._dirs;
<anchor xml:id="__map_8cs_source_1l00421"/>00421 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;array12[num6]&#32;=&#32;cell.height;
<anchor xml:id="__map_8cs_source_1l00422"/>00422 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;array13[num6]&#32;=&#32;cell._bridge;
<anchor xml:id="__map_8cs_source_1l00423"/>00423 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;array14[num6]&#32;=&#32;cell._bridgeMat;
<anchor xml:id="__map_8cs_source_1l00424"/>00424 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;array15[num6]&#32;=&#32;cell.bridgeHeight;
<anchor xml:id="__map_8cs_source_1l00425"/>00425 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;array17[num6]&#32;=&#32;cell._roofBlockDir;
<anchor xml:id="__map_8cs_source_1l00426"/>00426 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;array18[num6]&#32;=&#32;cell._roofBlock;
<anchor xml:id="__map_8cs_source_1l00427"/>00427 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;array19[num6]&#32;=&#32;cell._roofBlockMat;
<anchor xml:id="__map_8cs_source_1l00428"/>00428 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;array16[num6]&#32;=&#32;cell.bridgePillar;
<anchor xml:id="__map_8cs_source_1l00429"/>00429 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;array10[num6]&#32;=&#32;array10[num6].SetBit(1,&#32;cell.isSeen);
<anchor xml:id="__map_8cs_source_1l00430"/>00430 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;array10[num6]&#32;=&#32;array10[num6].SetBit(2,&#32;cell.isHarvested);
<anchor xml:id="__map_8cs_source_1l00431"/>00431 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;array10[num6]&#32;=&#32;array10[num6].SetBit(3,&#32;cell.impassable);
<anchor xml:id="__map_8cs_source_1l00432"/>00432 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;array10[num6]&#32;=&#32;array10[num6].SetBit(4,&#32;cell.isModified);
<anchor xml:id="__map_8cs_source_1l00433"/>00433 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;array10[num6]&#32;=&#32;array10[num6].SetBit(5,&#32;cell.isClearSnow);
<anchor xml:id="__map_8cs_source_1l00434"/>00434 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;array10[num6]&#32;=&#32;array10[num6].SetBit(6,&#32;cell.isForceFloat);
<anchor xml:id="__map_8cs_source_1l00435"/>00435 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;array10[num6]&#32;=&#32;array10[num6].SetBit(7,&#32;cell.isToggleWallPillar);
<anchor xml:id="__map_8cs_source_1l00436"/>00436 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;array11[num6]&#32;=&#32;array11[num6].SetBit(0,&#32;cell.isWatered);
<anchor xml:id="__map_8cs_source_1l00437"/>00437 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;array11[num6]&#32;=&#32;array11[num6].SetBit(1,&#32;cell.isObjDyed);
<anchor xml:id="__map_8cs_source_1l00438"/>00438 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cell.effect&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__map_8cs_source_1l00439"/>00439 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00440"/>00440 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.cellEffects[j&#32;*&#32;num4&#32;+&#32;i]&#32;=&#32;cell.effect;
<anchor xml:id="__map_8cs_source_1l00441"/>00441 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00442"/>00442 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num6++;
<anchor xml:id="__map_8cs_source_1l00443"/>00443 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00444"/>00444 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00445"/>00445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;IO.WriteLZ4(path&#32;+&#32;<emphasis role="stringliteral">&quot;objVals&quot;</emphasis>,&#32;array);
<anchor xml:id="__map_8cs_source_1l00446"/>00446 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;IO.WriteLZ4(path&#32;+&#32;<emphasis role="stringliteral">&quot;blocks&quot;</emphasis>,&#32;array2);
<anchor xml:id="__map_8cs_source_1l00447"/>00447 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;IO.WriteLZ4(path&#32;+&#32;<emphasis role="stringliteral">&quot;blockMats&quot;</emphasis>,&#32;array3);
<anchor xml:id="__map_8cs_source_1l00448"/>00448 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;IO.WriteLZ4(path&#32;+&#32;<emphasis role="stringliteral">&quot;floors&quot;</emphasis>,&#32;array4);
<anchor xml:id="__map_8cs_source_1l00449"/>00449 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;IO.WriteLZ4(path&#32;+&#32;<emphasis role="stringliteral">&quot;floorMats&quot;</emphasis>,&#32;array5);
<anchor xml:id="__map_8cs_source_1l00450"/>00450 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;IO.WriteLZ4(path&#32;+&#32;<emphasis role="stringliteral">&quot;objs&quot;</emphasis>,&#32;array6);
<anchor xml:id="__map_8cs_source_1l00451"/>00451 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;IO.WriteLZ4(path&#32;+&#32;<emphasis role="stringliteral">&quot;objMats&quot;</emphasis>,&#32;array7);
<anchor xml:id="__map_8cs_source_1l00452"/>00452 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;IO.WriteLZ4(path&#32;+&#32;<emphasis role="stringliteral">&quot;decal&quot;</emphasis>,&#32;array8);
<anchor xml:id="__map_8cs_source_1l00453"/>00453 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;IO.WriteLZ4(path&#32;+&#32;<emphasis role="stringliteral">&quot;flags&quot;</emphasis>,&#32;array10);
<anchor xml:id="__map_8cs_source_1l00454"/>00454 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;IO.WriteLZ4(path&#32;+&#32;<emphasis role="stringliteral">&quot;flags2&quot;</emphasis>,&#32;array11);
<anchor xml:id="__map_8cs_source_1l00455"/>00455 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;IO.WriteLZ4(path&#32;+&#32;<emphasis role="stringliteral">&quot;dirs&quot;</emphasis>,&#32;array9);
<anchor xml:id="__map_8cs_source_1l00456"/>00456 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;IO.WriteLZ4(path&#32;+&#32;<emphasis role="stringliteral">&quot;heights&quot;</emphasis>,&#32;array12);
<anchor xml:id="__map_8cs_source_1l00457"/>00457 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;IO.WriteLZ4(path&#32;+&#32;<emphasis role="stringliteral">&quot;bridges&quot;</emphasis>,&#32;array13);
<anchor xml:id="__map_8cs_source_1l00458"/>00458 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;IO.WriteLZ4(path&#32;+&#32;<emphasis role="stringliteral">&quot;bridgeMats&quot;</emphasis>,&#32;array14);
<anchor xml:id="__map_8cs_source_1l00459"/>00459 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;IO.WriteLZ4(path&#32;+&#32;<emphasis role="stringliteral">&quot;bridgeHeights&quot;</emphasis>,&#32;array15);
<anchor xml:id="__map_8cs_source_1l00460"/>00460 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;IO.WriteLZ4(path&#32;+&#32;<emphasis role="stringliteral">&quot;bridgePillars&quot;</emphasis>,&#32;array16);
<anchor xml:id="__map_8cs_source_1l00461"/>00461 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;IO.WriteLZ4(path&#32;+&#32;<emphasis role="stringliteral">&quot;roofBlocks&quot;</emphasis>,&#32;array18);
<anchor xml:id="__map_8cs_source_1l00462"/>00462 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;IO.WriteLZ4(path&#32;+&#32;<emphasis role="stringliteral">&quot;roofBlockMats&quot;</emphasis>,&#32;array19);
<anchor xml:id="__map_8cs_source_1l00463"/>00463 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;IO.WriteLZ4(path&#32;+&#32;<emphasis role="stringliteral">&quot;roofBlockDirs&quot;</emphasis>,&#32;array17);
<anchor xml:id="__map_8cs_source_1l00464"/>00464 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.things.Sort((<link linkend="_class_thing">Thing</link>&#32;a,&#32;<link linkend="_class_thing">Thing</link>&#32;b)&#32;=&gt;&#32;a.stackOrder&#32;-&#32;b.stackOrder);
<anchor xml:id="__map_8cs_source_1l00465"/>00465 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(export&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__map_8cs_source_1l00466"/>00466 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00467"/>00467 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_chara">Chara</link>&#32;chara&#32;<emphasis role="keywordflow">in</emphasis>&#32;this.charas)
<anchor xml:id="__map_8cs_source_1l00468"/>00468 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00469"/>00469 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!chara.IsGlobal)
<anchor xml:id="__map_8cs_source_1l00470"/>00470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00471"/>00471 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.serializedCharas.Add(chara);
<anchor xml:id="__map_8cs_source_1l00472"/>00472 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00473"/>00473 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00474"/>00474 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_game_i_o">GameIO</link>.SaveFile(path&#32;+&#32;<emphasis role="stringliteral">&quot;map&quot;</emphasis>,&#32;<emphasis role="keyword">this</emphasis>);
<anchor xml:id="__map_8cs_source_1l00475"/>00475 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00476"/>00476 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__map_8cs_source_1l00477"/>00477 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00478"/>00478 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;export.serializedCards.cards.Clear();
<anchor xml:id="__map_8cs_source_1l00479"/>00479 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(partial&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__map_8cs_source_1l00480"/>00480 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00481"/>00481 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_chara">Chara</link>&#32;chara2&#32;<emphasis role="keywordflow">in</emphasis>&#32;this.charas)
<anchor xml:id="__map_8cs_source_1l00482"/>00482 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00483"/>00483 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(export.usermap)
<anchor xml:id="__map_8cs_source_1l00484"/>00484 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00485"/>00485 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!chara2.trait.IsUnique&#32;&amp;&amp;&#32;!chara2.IsPC)
<anchor xml:id="__map_8cs_source_1l00486"/>00486 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00487"/>00487 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;export.serializedCards.Add(chara2);
<anchor xml:id="__map_8cs_source_1l00488"/>00488 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00489"/>00489 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00490"/>00490 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!chara2.IsGlobal&#32;&amp;&amp;&#32;chara2.isPlayerCreation)
<anchor xml:id="__map_8cs_source_1l00491"/>00491 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00492"/>00492 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;export.serializedCards.Add(chara2);
<anchor xml:id="__map_8cs_source_1l00493"/>00493 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00494"/>00494 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00495"/>00495 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;(List&lt;Thing&gt;.Enumerator&#32;enumerator2&#32;=&#32;this.things.GetEnumerator())
<anchor xml:id="__map_8cs_source_1l00496"/>00496 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00497"/>00497 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(enumerator2.MoveNext())
<anchor xml:id="__map_8cs_source_1l00498"/>00498 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00499"/>00499 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_thing">Thing</link>&#32;thing&#32;=&#32;enumerator2.Current;
<anchor xml:id="__map_8cs_source_1l00500"/>00500 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(thing.isPlayerCreation&#32;&amp;&amp;&#32;thing.c_altName&#32;!=&#32;<emphasis role="stringliteral">&quot;DebugContainer&quot;</emphasis>)
<anchor xml:id="__map_8cs_source_1l00501"/>00501 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00502"/>00502 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;export.serializedCards.Add(thing);
<anchor xml:id="__map_8cs_source_1l00503"/>00503 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00504"/>00504 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00505"/>00505 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">goto</emphasis>&#32;IL_66C;
<anchor xml:id="__map_8cs_source_1l00506"/>00506 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00507"/>00507 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00508"/>00508 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_thing">Thing</link>&#32;thing2&#32;<emphasis role="keywordflow">in</emphasis>&#32;this.things)
<anchor xml:id="__map_8cs_source_1l00509"/>00509 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00510"/>00510 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((<link linkend="_class_action_mode">ActionMode</link>.Copy.IsActive&#32;||&#32;thing2.trait.CanCopyInBlueprint)&#32;&amp;&amp;&#32;thing2.pos.x&#32;&gt;=&#32;num&#32;&amp;&amp;&#32;thing2.pos.z&#32;&gt;=&#32;num2&#32;&amp;&amp;&#32;thing2.pos.x&#32;&lt;&#32;num&#32;+&#32;num3&#32;&amp;&amp;&#32;thing2.pos.z&#32;&lt;&#32;num2&#32;+&#32;num4)
<anchor xml:id="__map_8cs_source_1l00511"/>00511 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00512"/>00512 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;export.serializedCards.Add(thing2);
<anchor xml:id="__map_8cs_source_1l00513"/>00513 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00514"/>00514 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00515"/>00515 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;IL_66C:
<anchor xml:id="__map_8cs_source_1l00516"/>00516 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;List&lt;Thing&gt;&#32;list&#32;=&#32;this.things;
<anchor xml:id="__map_8cs_source_1l00517"/>00517 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.things&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;Thing&gt;();
<anchor xml:id="__map_8cs_source_1l00518"/>00518 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_game_i_o">GameIO</link>.SaveFile(path&#32;+&#32;<emphasis role="stringliteral">&quot;map&quot;</emphasis>,&#32;<emphasis role="keyword">this</emphasis>);
<anchor xml:id="__map_8cs_source_1l00519"/>00519 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.things&#32;=&#32;list;
<anchor xml:id="__map_8cs_source_1l00520"/>00520 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00521"/>00521 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.serializedCharas.Clear();
<anchor xml:id="__map_8cs_source_1l00522"/>00522 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00523"/>00523 
<anchor xml:id="__map_8cs_source_1l00524"/>00524 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F0F&#32;RID:&#32;12047&#32;RVA:&#32;0x001080F4&#32;File&#32;Offset:&#32;0x001062F4</emphasis>
<anchor xml:id="__map_8cs_source_1l00525"/>00525 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Load(<emphasis role="keywordtype">string</emphasis>&#32;path,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<emphasis role="keyword">import</emphasis>&#32;=&#32;<emphasis role="keyword">false</emphasis>,&#32;<link linkend="_class_partial_map">PartialMap</link>&#32;partial&#32;=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__map_8cs_source_1l00526"/>00526 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00527"/>00527 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_map">Map</link>.&lt;&gt;c__DisplayClass67_0&#32;CS$&lt;&gt;8__locals1&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_map">Map</link>.&lt;&gt;c__DisplayClass67_0();
<anchor xml:id="__map_8cs_source_1l00528"/>00528 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CS$&lt;&gt;8__locals1.path&#32;=&#32;path;
<anchor xml:id="__map_8cs_source_1l00529"/>00529 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CS$&lt;&gt;8__locals1.&lt;&gt;4__this&#32;=&#32;<emphasis role="keyword">this</emphasis>;
<anchor xml:id="__map_8cs_source_1l00530"/>00530 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(partial&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__map_8cs_source_1l00531"/>00531 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00532"/>00532 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Debug.Log(<emphasis role="stringliteral">&quot;Map&#32;Load:&quot;</emphasis>&#32;+&#32;CS$&lt;&gt;8__locals1.path);
<anchor xml:id="__map_8cs_source_1l00533"/>00533 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00534"/>00534 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;num&#32;=&#32;this.Size;
<anchor xml:id="__map_8cs_source_1l00535"/>00535 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;num2&#32;=&#32;this.Size;
<anchor xml:id="__map_8cs_source_1l00536"/>00536 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(partial&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__map_8cs_source_1l00537"/>00537 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00538"/>00538 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num&#32;=&#32;partial.w;
<anchor xml:id="__map_8cs_source_1l00539"/>00539 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num2&#32;=&#32;partial.h;
<anchor xml:id="__map_8cs_source_1l00540"/>00540 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Debug.Log(num.ToString()&#32;+&#32;<emphasis role="stringliteral">&quot;/&quot;</emphasis>&#32;+&#32;num2.ToString());
<anchor xml:id="__map_8cs_source_1l00541"/>00541 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00542"/>00542 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CS$&lt;&gt;8__locals1.size&#32;=&#32;num&#32;*&#32;num2;
<anchor xml:id="__map_8cs_source_1l00543"/>00543 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.cells&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_cell">Cell</link>[num,&#32;num2];
<anchor xml:id="__map_8cs_source_1l00544"/>00544 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.bounds.maxX&#32;==&#32;0)
<anchor xml:id="__map_8cs_source_1l00545"/>00545 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00546"/>00546 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.bounds.SetBounds(0,&#32;0,&#32;num&#32;-&#32;1,&#32;num2&#32;-&#32;1);
<anchor xml:id="__map_8cs_source_1l00547"/>00547 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00548"/>00548 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;base.SetBounds(0,&#32;0,&#32;num&#32;-&#32;1,&#32;num2&#32;-&#32;1);
<anchor xml:id="__map_8cs_source_1l00549"/>00549 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;array&#32;=&#32;CS$&lt;&gt;8__locals1.&lt;Load&gt;g__TryLoad|0(<emphasis role="stringliteral">&quot;objVals&quot;</emphasis>);
<anchor xml:id="__map_8cs_source_1l00550"/>00550 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;array2&#32;=&#32;CS$&lt;&gt;8__locals1.&lt;Load&gt;g__TryLoad|0(<emphasis role="stringliteral">&quot;blockMats&quot;</emphasis>);
<anchor xml:id="__map_8cs_source_1l00551"/>00551 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;array3&#32;=&#32;CS$&lt;&gt;8__locals1.&lt;Load&gt;g__TryLoad|0(<emphasis role="stringliteral">&quot;blocks&quot;</emphasis>);
<anchor xml:id="__map_8cs_source_1l00552"/>00552 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;array4&#32;=&#32;CS$&lt;&gt;8__locals1.&lt;Load&gt;g__TryLoad|0(<emphasis role="stringliteral">&quot;floorMats&quot;</emphasis>);
<anchor xml:id="__map_8cs_source_1l00553"/>00553 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;array5&#32;=&#32;CS$&lt;&gt;8__locals1.&lt;Load&gt;g__TryLoad|0(<emphasis role="stringliteral">&quot;floors&quot;</emphasis>);
<anchor xml:id="__map_8cs_source_1l00554"/>00554 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;array6&#32;=&#32;CS$&lt;&gt;8__locals1.&lt;Load&gt;g__TryLoad|0(<emphasis role="stringliteral">&quot;objs&quot;</emphasis>);
<anchor xml:id="__map_8cs_source_1l00555"/>00555 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;array7&#32;=&#32;CS$&lt;&gt;8__locals1.&lt;Load&gt;g__TryLoad|0(<emphasis role="stringliteral">&quot;objMats&quot;</emphasis>);
<anchor xml:id="__map_8cs_source_1l00556"/>00556 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;array8&#32;=&#32;CS$&lt;&gt;8__locals1.&lt;Load&gt;g__TryLoad|0(<emphasis role="stringliteral">&quot;decal&quot;</emphasis>);
<anchor xml:id="__map_8cs_source_1l00557"/>00557 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;array9&#32;=&#32;CS$&lt;&gt;8__locals1.&lt;Load&gt;g__TryLoad|0(<emphasis role="stringliteral">&quot;dirs&quot;</emphasis>);
<anchor xml:id="__map_8cs_source_1l00558"/>00558 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;array10&#32;=&#32;CS$&lt;&gt;8__locals1.&lt;Load&gt;g__TryLoad|0(<emphasis role="stringliteral">&quot;flags&quot;</emphasis>);
<anchor xml:id="__map_8cs_source_1l00559"/>00559 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;array11&#32;=&#32;CS$&lt;&gt;8__locals1.&lt;Load&gt;g__TryLoad|0(<emphasis role="stringliteral">&quot;flags2&quot;</emphasis>);
<anchor xml:id="__map_8cs_source_1l00560"/>00560 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;array12&#32;=&#32;CS$&lt;&gt;8__locals1.&lt;Load&gt;g__TryLoad|0(<emphasis role="stringliteral">&quot;heights&quot;</emphasis>);
<anchor xml:id="__map_8cs_source_1l00561"/>00561 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;array13&#32;=&#32;CS$&lt;&gt;8__locals1.&lt;Load&gt;g__TryLoad|0(<emphasis role="stringliteral">&quot;bridges&quot;</emphasis>);
<anchor xml:id="__map_8cs_source_1l00562"/>00562 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;array14&#32;=&#32;CS$&lt;&gt;8__locals1.&lt;Load&gt;g__TryLoad|0(<emphasis role="stringliteral">&quot;bridgeMats&quot;</emphasis>);
<anchor xml:id="__map_8cs_source_1l00563"/>00563 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;array15&#32;=&#32;CS$&lt;&gt;8__locals1.&lt;Load&gt;g__TryLoad|0(<emphasis role="stringliteral">&quot;bridgeHeights&quot;</emphasis>);
<anchor xml:id="__map_8cs_source_1l00564"/>00564 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;array16&#32;=&#32;CS$&lt;&gt;8__locals1.&lt;Load&gt;g__TryLoad|0(<emphasis role="stringliteral">&quot;bridgePillars&quot;</emphasis>);
<anchor xml:id="__map_8cs_source_1l00565"/>00565 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;array17&#32;=&#32;CS$&lt;&gt;8__locals1.&lt;Load&gt;g__TryLoad|0(<emphasis role="stringliteral">&quot;roofBlocks&quot;</emphasis>);
<anchor xml:id="__map_8cs_source_1l00566"/>00566 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;array18&#32;=&#32;CS$&lt;&gt;8__locals1.&lt;Load&gt;g__TryLoad|0(<emphasis role="stringliteral">&quot;roofBlockMats&quot;</emphasis>);
<anchor xml:id="__map_8cs_source_1l00567"/>00567 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;array19&#32;=&#32;CS$&lt;&gt;8__locals1.&lt;Load&gt;g__TryLoad|0(<emphasis role="stringliteral">&quot;roofBlockDirs&quot;</emphasis>);
<anchor xml:id="__map_8cs_source_1l00568"/>00568 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(array16.Length&#32;&lt;&#32;CS$&lt;&gt;8__locals1.size)
<anchor xml:id="__map_8cs_source_1l00569"/>00569 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00570"/>00570 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;array16&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>[CS$&lt;&gt;8__locals1.size];
<anchor xml:id="__map_8cs_source_1l00571"/>00571 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00572"/>00572 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(array.Length&#32;&lt;&#32;CS$&lt;&gt;8__locals1.size)
<anchor xml:id="__map_8cs_source_1l00573"/>00573 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00574"/>00574 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;array&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>[CS$&lt;&gt;8__locals1.size];
<anchor xml:id="__map_8cs_source_1l00575"/>00575 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00576"/>00576 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(array11.Length&#32;&lt;&#32;CS$&lt;&gt;8__locals1.size)
<anchor xml:id="__map_8cs_source_1l00577"/>00577 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00578"/>00578 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;array11&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>[CS$&lt;&gt;8__locals1.size];
<anchor xml:id="__map_8cs_source_1l00579"/>00579 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00580"/>00580 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CS$&lt;&gt;8__locals1.&lt;Load&gt;g__Validate|1(ref&#32;array,&#32;<emphasis role="stringliteral">&quot;objVals&quot;</emphasis>);
<anchor xml:id="__map_8cs_source_1l00581"/>00581 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CS$&lt;&gt;8__locals1.&lt;Load&gt;g__Validate|1(ref&#32;array2,&#32;<emphasis role="stringliteral">&quot;blockMats&quot;</emphasis>);
<anchor xml:id="__map_8cs_source_1l00582"/>00582 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CS$&lt;&gt;8__locals1.&lt;Load&gt;g__Validate|1(ref&#32;array3,&#32;<emphasis role="stringliteral">&quot;blocks&quot;</emphasis>);
<anchor xml:id="__map_8cs_source_1l00583"/>00583 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CS$&lt;&gt;8__locals1.&lt;Load&gt;g__Validate|1(ref&#32;array4,&#32;<emphasis role="stringliteral">&quot;floorMats&quot;</emphasis>);
<anchor xml:id="__map_8cs_source_1l00584"/>00584 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CS$&lt;&gt;8__locals1.&lt;Load&gt;g__Validate|1(ref&#32;array5,&#32;<emphasis role="stringliteral">&quot;floors&quot;</emphasis>);
<anchor xml:id="__map_8cs_source_1l00585"/>00585 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CS$&lt;&gt;8__locals1.&lt;Load&gt;g__Validate|1(ref&#32;array6,&#32;<emphasis role="stringliteral">&quot;objs&quot;</emphasis>);
<anchor xml:id="__map_8cs_source_1l00586"/>00586 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CS$&lt;&gt;8__locals1.&lt;Load&gt;g__Validate|1(ref&#32;array7,&#32;<emphasis role="stringliteral">&quot;objMats&quot;</emphasis>);
<anchor xml:id="__map_8cs_source_1l00587"/>00587 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CS$&lt;&gt;8__locals1.&lt;Load&gt;g__Validate|1(ref&#32;array8,&#32;<emphasis role="stringliteral">&quot;decal&quot;</emphasis>);
<anchor xml:id="__map_8cs_source_1l00588"/>00588 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CS$&lt;&gt;8__locals1.&lt;Load&gt;g__Validate|1(ref&#32;array9,&#32;<emphasis role="stringliteral">&quot;dirs&quot;</emphasis>);
<anchor xml:id="__map_8cs_source_1l00589"/>00589 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CS$&lt;&gt;8__locals1.&lt;Load&gt;g__Validate|1(ref&#32;array10,&#32;<emphasis role="stringliteral">&quot;flags&quot;</emphasis>);
<anchor xml:id="__map_8cs_source_1l00590"/>00590 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CS$&lt;&gt;8__locals1.&lt;Load&gt;g__Validate|1(ref&#32;array11,&#32;<emphasis role="stringliteral">&quot;flags2&quot;</emphasis>);
<anchor xml:id="__map_8cs_source_1l00591"/>00591 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CS$&lt;&gt;8__locals1.&lt;Load&gt;g__Validate|1(ref&#32;array12,&#32;<emphasis role="stringliteral">&quot;heights&quot;</emphasis>);
<anchor xml:id="__map_8cs_source_1l00592"/>00592 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CS$&lt;&gt;8__locals1.&lt;Load&gt;g__Validate|1(ref&#32;array13,&#32;<emphasis role="stringliteral">&quot;bridges&quot;</emphasis>);
<anchor xml:id="__map_8cs_source_1l00593"/>00593 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CS$&lt;&gt;8__locals1.&lt;Load&gt;g__Validate|1(ref&#32;array14,&#32;<emphasis role="stringliteral">&quot;bridgeMats&quot;</emphasis>);
<anchor xml:id="__map_8cs_source_1l00594"/>00594 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CS$&lt;&gt;8__locals1.&lt;Load&gt;g__Validate|1(ref&#32;array15,&#32;<emphasis role="stringliteral">&quot;bridgeHeights&quot;</emphasis>);
<anchor xml:id="__map_8cs_source_1l00595"/>00595 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CS$&lt;&gt;8__locals1.&lt;Load&gt;g__Validate|1(ref&#32;array16,&#32;<emphasis role="stringliteral">&quot;bridgePillars&quot;</emphasis>);
<anchor xml:id="__map_8cs_source_1l00596"/>00596 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CS$&lt;&gt;8__locals1.&lt;Load&gt;g__Validate|1(ref&#32;array17,&#32;<emphasis role="stringliteral">&quot;roofBlocks&quot;</emphasis>);
<anchor xml:id="__map_8cs_source_1l00597"/>00597 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CS$&lt;&gt;8__locals1.&lt;Load&gt;g__Validate|1(ref&#32;array18,&#32;<emphasis role="stringliteral">&quot;roofBlockMats&quot;</emphasis>);
<anchor xml:id="__map_8cs_source_1l00598"/>00598 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CS$&lt;&gt;8__locals1.&lt;Load&gt;g__Validate|1(ref&#32;array19,&#32;<emphasis role="stringliteral">&quot;roofBlockDirs&quot;</emphasis>);
<anchor xml:id="__map_8cs_source_1l00599"/>00599 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;num3&#32;=&#32;0;
<anchor xml:id="__map_8cs_source_1l00600"/>00600 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;num;&#32;i++)
<anchor xml:id="__map_8cs_source_1l00601"/>00601 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00602"/>00602 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;j&#32;=&#32;0;&#32;j&#32;&lt;&#32;num2;&#32;j++)
<anchor xml:id="__map_8cs_source_1l00603"/>00603 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00604"/>00604 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.cells[i,&#32;j]&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_cell">Cell</link>
<anchor xml:id="__map_8cs_source_1l00605"/>00605 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00606"/>00606 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x&#32;=&#32;(byte)i,
<anchor xml:id="__map_8cs_source_1l00607"/>00607 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;z&#32;=&#32;(<emphasis role="keywordtype">byte</emphasis>)j,
<anchor xml:id="__map_8cs_source_1l00608"/>00608 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;objVal&#32;=&#32;array[num3],
<anchor xml:id="__map_8cs_source_1l00609"/>00609 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_blockMat&#32;=&#32;array2[num3],
<anchor xml:id="__map_8cs_source_1l00610"/>00610 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_block&#32;=&#32;array3[num3],
<anchor xml:id="__map_8cs_source_1l00611"/>00611 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_floorMat&#32;=&#32;array4[num3],
<anchor xml:id="__map_8cs_source_1l00612"/>00612 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_floor&#32;=&#32;array5[num3],
<anchor xml:id="__map_8cs_source_1l00613"/>00613 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;obj&#32;=&#32;array6[num3],
<anchor xml:id="__map_8cs_source_1l00614"/>00614 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;objMat&#32;=&#32;array7[num3],
<anchor xml:id="__map_8cs_source_1l00615"/>00615 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;decal&#32;=&#32;array8[num3],
<anchor xml:id="__map_8cs_source_1l00616"/>00616 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_dirs&#32;=&#32;array9[num3],
<anchor xml:id="__map_8cs_source_1l00617"/>00617 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;height&#32;=&#32;array12[num3],
<anchor xml:id="__map_8cs_source_1l00618"/>00618 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_bridge&#32;=&#32;array13[num3],
<anchor xml:id="__map_8cs_source_1l00619"/>00619 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_bridgeMat&#32;=&#32;array14[num3],
<anchor xml:id="__map_8cs_source_1l00620"/>00620 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bridgeHeight&#32;=&#32;array15[num3],
<anchor xml:id="__map_8cs_source_1l00621"/>00621 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bridgePillar&#32;=&#32;array16[num3],
<anchor xml:id="__map_8cs_source_1l00622"/>00622 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_roofBlock&#32;=&#32;array17[num3],
<anchor xml:id="__map_8cs_source_1l00623"/>00623 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_roofBlockMat&#32;=&#32;array18[num3],
<anchor xml:id="__map_8cs_source_1l00624"/>00624 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_roofBlockDir&#32;=&#32;array19[num3],
<anchor xml:id="__map_8cs_source_1l00625"/>00625 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;isSeen&#32;=&#32;array10[num3].GetBit(1),
<anchor xml:id="__map_8cs_source_1l00626"/>00626 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;isHarvested&#32;=&#32;array10[num3].GetBit(2),
<anchor xml:id="__map_8cs_source_1l00627"/>00627 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;impassable&#32;=&#32;array10[num3].GetBit(3),
<anchor xml:id="__map_8cs_source_1l00628"/>00628 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;isModified&#32;=&#32;array10[num3].GetBit(4),
<anchor xml:id="__map_8cs_source_1l00629"/>00629 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;isClearSnow&#32;=&#32;array10[num3].GetBit(5),
<anchor xml:id="__map_8cs_source_1l00630"/>00630 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;isForceFloat&#32;=&#32;array10[num3].GetBit(6),
<anchor xml:id="__map_8cs_source_1l00631"/>00631 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;isToggleWallPillar&#32;=&#32;array10[num3].GetBit(7),
<anchor xml:id="__map_8cs_source_1l00632"/>00632 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;isWatered&#32;=&#32;array11[num3].GetBit(0),
<anchor xml:id="__map_8cs_source_1l00633"/>00633 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;isObjDyed&#32;=&#32;array11[num3].GetBit(1)
<anchor xml:id="__map_8cs_source_1l00634"/>00634 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__map_8cs_source_1l00635"/>00635 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_critter">Critter</link>.RebuildCritter(this.cells[i,&#32;j]);
<anchor xml:id="__map_8cs_source_1l00636"/>00636 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num3++;
<anchor xml:id="__map_8cs_source_1l00637"/>00637 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00638"/>00638 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00639"/>00639 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.things.ForeachReverse(delegate(<link linkend="_class_thing">Thing</link>&#32;t)
<anchor xml:id="__map_8cs_source_1l00640"/>00640 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00641"/>00641 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(t.Num&#32;&lt;=&#32;0&#32;||&#32;t.isDestroyed)
<anchor xml:id="__map_8cs_source_1l00642"/>00642 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00643"/>00643 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Debug.Log(<emphasis role="keywordtype">string</emphasis>.Concat(<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>[]
<anchor xml:id="__map_8cs_source_1l00644"/>00644 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00645"/>00645 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;[bug]&#32;Removing&#32;bugged&#32;thing:&quot;</emphasis>,
<anchor xml:id="__map_8cs_source_1l00646"/>00646 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t.Num.ToString(),
<anchor xml:id="__map_8cs_source_1l00647"/>00647 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;/&quot;</emphasis>,
<anchor xml:id="__map_8cs_source_1l00648"/>00648 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t.isDestroyed.ToString(),
<anchor xml:id="__map_8cs_source_1l00649"/>00649 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;/&quot;</emphasis>,
<anchor xml:id="__map_8cs_source_1l00650"/>00650 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(t&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;?&#32;t.ToString()&#32;:&#32;<emphasis role="keyword">null</emphasis>
<anchor xml:id="__map_8cs_source_1l00651"/>00651 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}));
<anchor xml:id="__map_8cs_source_1l00652"/>00652 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CS$&lt;&gt;8__locals1.&lt;&gt;4__this.things.Remove(t);
<anchor xml:id="__map_8cs_source_1l00653"/>00653 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00654"/>00654 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__map_8cs_source_1l00655"/>00655 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(KeyValuePair&lt;int,&#32;CellEffect&gt;&#32;keyValuePair&#32;<emphasis role="keywordflow">in</emphasis>&#32;this.cellEffects)
<anchor xml:id="__map_8cs_source_1l00656"/>00656 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00657"/>00657 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;key&#32;=&#32;keyValuePair.Key;
<anchor xml:id="__map_8cs_source_1l00658"/>00658 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;num4&#32;=&#32;key&#32;%&#32;this.Size;
<anchor xml:id="__map_8cs_source_1l00659"/>00659 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;num5&#32;=&#32;key&#32;/&#32;this.Size;
<anchor xml:id="__map_8cs_source_1l00660"/>00660 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.cells[num4,&#32;num5].effect&#32;=&#32;keyValuePair.Value;
<anchor xml:id="__map_8cs_source_1l00661"/>00661 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(keyValuePair.Value.IsFire)
<anchor xml:id="__map_8cs_source_1l00662"/>00662 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00663"/>00663 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.effectManager.GetOrCreate(<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_point">Point</link>(num4,&#32;num5));
<anchor xml:id="__map_8cs_source_1l00664"/>00664 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00665"/>00665 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00666"/>00666 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.cellEffects.Clear();
<anchor xml:id="__map_8cs_source_1l00667"/>00667 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.ValidateVersion();
<anchor xml:id="__map_8cs_source_1l00668"/>00668 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00669"/>00669 
<anchor xml:id="__map_8cs_source_1l00670"/>00670 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F10&#32;RID:&#32;12048&#32;RVA:&#32;0x00108668&#32;File&#32;Offset:&#32;0x00106868</emphasis>
<anchor xml:id="__map_8cs_source_1l00671"/>00671 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;ValidateVersion()
<anchor xml:id="__map_8cs_source_1l00672"/>00672 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00673"/>00673 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.version&#32;=&#32;<link linkend="_class_e_class">EClass</link>.core.version;
<anchor xml:id="__map_8cs_source_1l00674"/>00674 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00675"/>00675 
<anchor xml:id="__map_8cs_source_1l00676"/>00676 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F11&#32;RID:&#32;12049&#32;RVA:&#32;0x0010867A&#32;File&#32;Offset:&#32;0x0010687A</emphasis>
<anchor xml:id="__map_8cs_source_1l00677"/>00677 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnLoad()
<anchor xml:id="__map_8cs_source_1l00678"/>00678 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00679"/>00679 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.rooms.OnLoad();
<anchor xml:id="__map_8cs_source_1l00680"/>00680 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.tasks.OnLoad();
<anchor xml:id="__map_8cs_source_1l00681"/>00681 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00682"/>00682 
<anchor xml:id="__map_8cs_source_1l00683"/>00683 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F12&#32;RID:&#32;12050&#32;RVA:&#32;0x00108692&#32;File&#32;Offset:&#32;0x00106892</emphasis>
<anchor xml:id="__map_8cs_source_1l00684"/>00684 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnImport(<link linkend="_class_zone_export_data">ZoneExportData</link>&#32;data)
<anchor xml:id="__map_8cs_source_1l00685"/>00685 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00686"/>00686 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.tasks&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_task_manager">TaskManager</link>();
<anchor xml:id="__map_8cs_source_1l00687"/>00687 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;data.serializedCards.Restore(<emphasis role="keyword">this</emphasis>,&#32;data.orgMap,&#32;<emphasis role="keyword">false</emphasis>,&#32;<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__map_8cs_source_1l00688"/>00688 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00689"/>00689 
<anchor xml:id="__map_8cs_source_1l00690"/>00690 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F13&#32;RID:&#32;12051&#32;RVA:&#32;0x001086B4&#32;File&#32;Offset:&#32;0x001068B4</emphasis>
<anchor xml:id="__map_8cs_source_1l00691"/>00691 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;ExportMetaData(<emphasis role="keywordtype">string</emphasis>&#32;_path,&#32;<emphasis role="keywordtype">string</emphasis>&#32;<emphasis role="keywordtype">id</emphasis>,&#32;<link linkend="_class_partial_map">PartialMap</link>&#32;partial&#32;=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__map_8cs_source_1l00692"/>00692 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00693"/>00693 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.custom&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__map_8cs_source_1l00694"/>00694 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00695"/>00695 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.custom&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_custom_data">CustomData</link>();
<anchor xml:id="__map_8cs_source_1l00696"/>00696 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00697"/>00697 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_map_meta_data">MapMetaData</link>&#32;mapMetaData&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_map_meta_data">MapMetaData</link>
<anchor xml:id="__map_8cs_source_1l00698"/>00698 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00699"/>00699 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;name&#32;=&#32;<link linkend="_class_e_class">EClass</link>._zone.Name,
<anchor xml:id="__map_8cs_source_1l00700"/>00700 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;version&#32;=&#32;BaseCore.Instance.version.GetInt(),
<anchor xml:id="__map_8cs_source_1l00701"/>00701 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;partial&#32;=&#32;partial
<anchor xml:id="__map_8cs_source_1l00702"/>00702 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__map_8cs_source_1l00703"/>00703 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_custom_data">CustomData</link>&#32;customData&#32;=&#32;this.custom;
<anchor xml:id="__map_8cs_source_1l00704"/>00704 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mapMetaData.id&#32;=&#32;id;
<anchor xml:id="__map_8cs_source_1l00705"/>00705 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;customData.id&#32;=&#32;id;
<anchor xml:id="__map_8cs_source_1l00706"/>00706 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;IO.SaveFile(_path&#32;+&#32;<emphasis role="stringliteral">&quot;meta&quot;</emphasis>,&#32;mapMetaData,&#32;<emphasis role="keyword">false</emphasis>,&#32;<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__map_8cs_source_1l00707"/>00707 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00708"/>00708 
<anchor xml:id="__map_8cs_source_1l00709"/>00709 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F14&#32;RID:&#32;12052&#32;RVA:&#32;0x00108730&#32;File&#32;Offset:&#32;0x00106930</emphasis>
<anchor xml:id="__map_8cs_source_1l00710"/>00710 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class_map_meta_data">MapMetaData</link>&#32;GetMetaData(<emphasis role="keywordtype">string</emphasis>&#32;pathZip)
<anchor xml:id="__map_8cs_source_1l00711"/>00711 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00712"/>00712 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">try</emphasis>
<anchor xml:id="__map_8cs_source_1l00713"/>00713 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00714"/>00714 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;(ZipFile&#32;zipFile&#32;=&#32;ZipFile.Read(pathZip))
<anchor xml:id="__map_8cs_source_1l00715"/>00715 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00716"/>00716 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ZipEntry&#32;zipEntry&#32;=&#32;zipFile[<emphasis role="stringliteral">&quot;meta&quot;</emphasis>];
<anchor xml:id="__map_8cs_source_1l00717"/>00717 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(zipEntry&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__map_8cs_source_1l00718"/>00718 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00719"/>00719 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Debug.Log(zipEntry);
<anchor xml:id="__map_8cs_source_1l00720"/>00720 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;(MemoryStream&#32;memoryStream&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;MemoryStream())
<anchor xml:id="__map_8cs_source_1l00721"/>00721 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00722"/>00722 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;zipEntry.Extract(memoryStream);
<anchor xml:id="__map_8cs_source_1l00723"/>00723 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_map_meta_data">MapMetaData</link>&#32;mapMetaData&#32;=&#32;IO.LoadStreamJson&lt;<link linkend="_class_map_meta_data">MapMetaData</link>&gt;(memoryStream,&#32;<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__map_8cs_source_1l00724"/>00724 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Debug.Log(mapMetaData);
<anchor xml:id="__map_8cs_source_1l00725"/>00725 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mapMetaData.path&#32;=&#32;pathZip;
<anchor xml:id="__map_8cs_source_1l00726"/>00726 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;mapMetaData;
<anchor xml:id="__map_8cs_source_1l00727"/>00727 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00728"/>00728 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00729"/>00729 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00730"/>00730 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00731"/>00731 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">catch</emphasis>&#32;(Exception&#32;message)
<anchor xml:id="__map_8cs_source_1l00732"/>00732 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00733"/>00733 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Debug.Log(message);
<anchor xml:id="__map_8cs_source_1l00734"/>00734 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00735"/>00735 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__map_8cs_source_1l00736"/>00736 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00737"/>00737 
<anchor xml:id="__map_8cs_source_1l00738"/>00738 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F15&#32;RID:&#32;12053&#32;RVA:&#32;0x001087C8&#32;File&#32;Offset:&#32;0x001069C8</emphasis>
<anchor xml:id="__map_8cs_source_1l00739"/>00739 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;UpdateMetaData(<emphasis role="keywordtype">string</emphasis>&#32;pathZip,&#32;<link linkend="_class_partial_map">PartialMap</link>&#32;partial&#32;=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__map_8cs_source_1l00740"/>00740 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00741"/>00741 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;IO.CreateTempDirectory(<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__map_8cs_source_1l00742"/>00742 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ZipFile&#32;zipFile&#32;=&#32;ZipFile.Read(pathZip);
<anchor xml:id="__map_8cs_source_1l00743"/>00743 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;zipFile.ExtractExistingFile&#32;=&#32;ExtractExistingFileAction.OverwriteSilently;
<anchor xml:id="__map_8cs_source_1l00744"/>00744 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;zipFile.ExtractAll(IO.TempPath);
<anchor xml:id="__map_8cs_source_1l00745"/>00745 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;zipFile.Dispose();
<anchor xml:id="__map_8cs_source_1l00746"/>00746 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_e_class">EClass</link>._map.ExportMetaData(IO.TempPath&#32;+&#32;<emphasis role="stringliteral">&quot;/&quot;</emphasis>,&#32;Path.GetFileNameWithoutExtension(pathZip),&#32;partial);
<anchor xml:id="__map_8cs_source_1l00747"/>00747 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ZipFile&#32;zipFile2;
<anchor xml:id="__map_8cs_source_1l00748"/>00748 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;zipFile&#32;=&#32;(zipFile2&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;ZipFile());
<anchor xml:id="__map_8cs_source_1l00749"/>00749 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">try</emphasis>
<anchor xml:id="__map_8cs_source_1l00750"/>00750 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00751"/>00751 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;zipFile.ExtractExistingFile&#32;=&#32;ExtractExistingFileAction.OverwriteSilently;
<anchor xml:id="__map_8cs_source_1l00752"/>00752 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;zipFile.AddDirectory(IO.TempPath);
<anchor xml:id="__map_8cs_source_1l00753"/>00753 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;zipFile.Save(pathZip);
<anchor xml:id="__map_8cs_source_1l00754"/>00754 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;zipFile.Dispose();
<anchor xml:id="__map_8cs_source_1l00755"/>00755 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00756"/>00756 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">finally</emphasis>
<anchor xml:id="__map_8cs_source_1l00757"/>00757 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00758"/>00758 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(zipFile2&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__map_8cs_source_1l00759"/>00759 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00760"/>00760 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((IDisposable)zipFile2).Dispose();
<anchor xml:id="__map_8cs_source_1l00761"/>00761 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00762"/>00762 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00763"/>00763 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;IO.DeleteTempDirectory(<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__map_8cs_source_1l00764"/>00764 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00765"/>00765 
<anchor xml:id="__map_8cs_source_1l00766"/>00766 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F16&#32;RID:&#32;12054&#32;RVA:&#32;0x00108864&#32;File&#32;Offset:&#32;0x00106A64</emphasis>
<anchor xml:id="__map_8cs_source_1l00767"/>00767 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;AddCardOnActivate(<link linkend="_class_card">Card</link>&#32;c)
<anchor xml:id="__map_8cs_source_1l00768"/>00768 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00769"/>00769 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;c.parent&#32;=&#32;this.zone;
<anchor xml:id="__map_8cs_source_1l00770"/>00770 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.props.OnCardAddedToZone(c);
<anchor xml:id="__map_8cs_source_1l00771"/>00771 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_chara">Chara</link>&#32;chara&#32;=&#32;c.Chara;
<anchor xml:id="__map_8cs_source_1l00772"/>00772 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(chara&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__map_8cs_source_1l00773"/>00773 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00774"/>00774 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;chara.currentZone&#32;=&#32;<link linkend="_class_e_class">EClass</link>._zone;
<anchor xml:id="__map_8cs_source_1l00775"/>00775 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00776"/>00776 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this._AddCard(c.pos.x,&#32;c.pos.z,&#32;c,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__map_8cs_source_1l00777"/>00777 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00778"/>00778 
<anchor xml:id="__map_8cs_source_1l00779"/>00779 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F17&#32;RID:&#32;12055&#32;RVA:&#32;0x001088BC&#32;File&#32;Offset:&#32;0x00106ABC</emphasis>
<anchor xml:id="__map_8cs_source_1l00780"/>00780 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnCardAddedToZone(<link linkend="_class_card">Card</link>&#32;t,&#32;<emphasis role="keywordtype">int</emphasis>&#32;x,&#32;<emphasis role="keywordtype">int</emphasis>&#32;z)
<anchor xml:id="__map_8cs_source_1l00781"/>00781 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00782"/>00782 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(t.isChara)
<anchor xml:id="__map_8cs_source_1l00783"/>00783 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00784"/>00784 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.charas.Add(t.Chara);
<anchor xml:id="__map_8cs_source_1l00785"/>00785 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00786"/>00786 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__map_8cs_source_1l00787"/>00787 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00788"/>00788 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.things.Add(t.Thing);
<anchor xml:id="__map_8cs_source_1l00789"/>00789 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00790"/>00790 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.props.OnCardAddedToZone(t);
<anchor xml:id="__map_8cs_source_1l00791"/>00791 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(t.isChara&#32;&amp;&amp;&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_point">Point</link>(x,&#32;z).cell.HasFullBlock)
<anchor xml:id="__map_8cs_source_1l00792"/>00792 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00793"/>00793 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.DestroyBlock(x,&#32;z);
<anchor xml:id="__map_8cs_source_1l00794"/>00794 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00795"/>00795 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this._AddCard(x,&#32;z,&#32;t,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__map_8cs_source_1l00796"/>00796 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t.trait.OnAddedToZone();
<anchor xml:id="__map_8cs_source_1l00797"/>00797 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00798"/>00798 
<anchor xml:id="__map_8cs_source_1l00799"/>00799 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F18&#32;RID:&#32;12056&#32;RVA:&#32;0x0010893C&#32;File&#32;Offset:&#32;0x00106B3C</emphasis>
<anchor xml:id="__map_8cs_source_1l00800"/>00800 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnCardRemovedFromZone(<link linkend="_class_card">Card</link>&#32;t)
<anchor xml:id="__map_8cs_source_1l00801"/>00801 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00802"/>00802 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t.trait.OnRemovedFromZone();
<anchor xml:id="__map_8cs_source_1l00803"/>00803 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t.SetPlaceState(PlaceState.none,&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__map_8cs_source_1l00804"/>00804 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this._RemoveCard(t);
<anchor xml:id="__map_8cs_source_1l00805"/>00805 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t.parent&#32;=&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__map_8cs_source_1l00806"/>00806 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(t.isChara)
<anchor xml:id="__map_8cs_source_1l00807"/>00807 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00808"/>00808 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.charas.Remove(t.Chara);
<anchor xml:id="__map_8cs_source_1l00809"/>00809 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__map_8cs_source_1l00810"/>00810 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00811"/>00811 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.things.Remove(t.Thing);
<anchor xml:id="__map_8cs_source_1l00812"/>00812 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00813"/>00813 
<anchor xml:id="__map_8cs_source_1l00814"/>00814 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F19&#32;RID:&#32;12057&#32;RVA:&#32;0x00108997&#32;File&#32;Offset:&#32;0x00106B97</emphasis>
<anchor xml:id="__map_8cs_source_1l00815"/>00815 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;MoveCard(<link linkend="_class_point">Point</link>&#32;p,&#32;<link linkend="_class_card">Card</link>&#32;t)
<anchor xml:id="__map_8cs_source_1l00816"/>00816 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00817"/>00817 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this._AddCard(p.x,&#32;p.z,&#32;t,&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__map_8cs_source_1l00818"/>00818 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00819"/>00819 
<anchor xml:id="__map_8cs_source_1l00820"/>00820 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F1A&#32;RID:&#32;12058&#32;RVA:&#32;0x001089B0&#32;File&#32;Offset:&#32;0x00106BB0</emphasis>
<anchor xml:id="__map_8cs_source_1l00821"/>00821 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;_AddCard(<emphasis role="keywordtype">int</emphasis>&#32;x,&#32;<emphasis role="keywordtype">int</emphasis>&#32;z,&#32;<link linkend="_class_card">Card</link>&#32;t,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;onAddToZone)
<anchor xml:id="__map_8cs_source_1l00822"/>00822 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00823"/>00823 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!onAddToZone)
<anchor xml:id="__map_8cs_source_1l00824"/>00824 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00825"/>00825 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this._RemoveCard(t);
<anchor xml:id="__map_8cs_source_1l00826"/>00826 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00827"/>00827 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t.pos.Set(x,&#32;z);
<anchor xml:id="__map_8cs_source_1l00828"/>00828 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(t.IsMultisize)
<anchor xml:id="__map_8cs_source_1l00829"/>00829 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00830"/>00830 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t.ForeachPoint(delegate(<link linkend="_class_point">Point</link>&#32;p,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;main)
<anchor xml:id="__map_8cs_source_1l00831"/>00831 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00832"/>00832 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p.cell.AddCard(t);
<anchor xml:id="__map_8cs_source_1l00833"/>00833 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__map_8cs_source_1l00834"/>00834 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00835"/>00835 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__map_8cs_source_1l00836"/>00836 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00837"/>00837 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t.Cell.AddCard(t);
<anchor xml:id="__map_8cs_source_1l00838"/>00838 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00839"/>00839 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t.CalculateFOV();
<anchor xml:id="__map_8cs_source_1l00840"/>00840 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(t.isThing&#32;&amp;&amp;&#32;!t.trait.IDActorEx.IsEmpty())
<anchor xml:id="__map_8cs_source_1l00841"/>00841 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00842"/>00842 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_e_class">EClass</link>.scene.AddActorEx(t,&#32;<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__map_8cs_source_1l00843"/>00843 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00844"/>00844 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00845"/>00845 
<anchor xml:id="__map_8cs_source_1l00846"/>00846 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F1B&#32;RID:&#32;12059&#32;RVA:&#32;0x00108A6C&#32;File&#32;Offset:&#32;0x00106C6C</emphasis>
<anchor xml:id="__map_8cs_source_1l00847"/>00847 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;_RemoveCard(<link linkend="_class_card">Card</link>&#32;t)
<anchor xml:id="__map_8cs_source_1l00848"/>00848 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00849"/>00849 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(t.IsMultisize)
<anchor xml:id="__map_8cs_source_1l00850"/>00850 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00851"/>00851 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t.ForeachPoint(delegate(<link linkend="_class_point">Point</link>&#32;p,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;main)
<anchor xml:id="__map_8cs_source_1l00852"/>00852 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00853"/>00853 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p.cell.RemoveCard(t);
<anchor xml:id="__map_8cs_source_1l00854"/>00854 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__map_8cs_source_1l00855"/>00855 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00856"/>00856 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__map_8cs_source_1l00857"/>00857 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00858"/>00858 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t.Cell.RemoveCard(t);
<anchor xml:id="__map_8cs_source_1l00859"/>00859 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00860"/>00860 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t.ClearFOV();
<anchor xml:id="__map_8cs_source_1l00861"/>00861 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00862"/>00862 
<anchor xml:id="__map_8cs_source_1l00863"/>00863 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F1C&#32;RID:&#32;12060&#32;RVA:&#32;0x00108ACD&#32;File&#32;Offset:&#32;0x00106CCD</emphasis>
<anchor xml:id="__map_8cs_source_1l00864"/>00864 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_cell">Cell</link>&#32;GetCell(<emphasis role="keywordtype">int</emphasis>&#32;index)
<anchor xml:id="__map_8cs_source_1l00865"/>00865 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00866"/>00866 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this.cells[index&#32;%&#32;this.Size,&#32;index&#32;%&#32;this.SizeXZ&#32;/&#32;this.Size];
<anchor xml:id="__map_8cs_source_1l00867"/>00867 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00868"/>00868 
<anchor xml:id="__map_8cs_source_1l00869"/>00869 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F1D&#32;RID:&#32;12061&#32;RVA:&#32;0x00108AF4&#32;File&#32;Offset:&#32;0x00106CF4</emphasis>
<anchor xml:id="__map_8cs_source_1l00870"/>00870 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;SetSeen(<emphasis role="keywordtype">int</emphasis>&#32;x,&#32;<emphasis role="keywordtype">int</emphasis>&#32;z,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;seen&#32;=&#32;<emphasis role="keyword">true</emphasis>,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;refresh&#32;=&#32;<emphasis role="keyword">true</emphasis>)
<anchor xml:id="__map_8cs_source_1l00871"/>00871 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00872"/>00872 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.cells[x,&#32;z].isSeen&#32;==&#32;seen)
<anchor xml:id="__map_8cs_source_1l00873"/>00873 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00874"/>00874 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__map_8cs_source_1l00875"/>00875 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00876"/>00876 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.cells[x,&#32;z].isSeen&#32;=&#32;seen;
<anchor xml:id="__map_8cs_source_1l00877"/>00877 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(refresh)
<anchor xml:id="__map_8cs_source_1l00878"/>00878 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00879"/>00879 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_widget_minimap">WidgetMinimap</link>.UpdateMap(x,&#32;z);
<anchor xml:id="__map_8cs_source_1l00880"/>00880 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00881"/>00881 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_e_class">EClass</link>._map.RefreshNeighborTiles(x,&#32;z);
<anchor xml:id="__map_8cs_source_1l00882"/>00882 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00883"/>00883 
<anchor xml:id="__map_8cs_source_1l00884"/>00884 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F1E&#32;RID:&#32;12062&#32;RVA:&#32;0x00108B44&#32;File&#32;Offset:&#32;0x00106D44</emphasis>
<anchor xml:id="__map_8cs_source_1l00885"/>00885 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;RevealAll(<emphasis role="keywordtype">bool</emphasis>&#32;reveal&#32;=&#32;<emphasis role="keyword">true</emphasis>)
<anchor xml:id="__map_8cs_source_1l00886"/>00886 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00887"/>00887 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;this.Size;&#32;i++)
<anchor xml:id="__map_8cs_source_1l00888"/>00888 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00889"/>00889 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;j&#32;=&#32;0;&#32;j&#32;&lt;&#32;this.Size;&#32;j++)
<anchor xml:id="__map_8cs_source_1l00890"/>00890 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00891"/>00891 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_e_class">EClass</link>._map.SetSeen(i,&#32;j,&#32;reveal,&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__map_8cs_source_1l00892"/>00892 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00893"/>00893 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00894"/>00894 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.revealed&#32;=&#32;!this.revealed;
<anchor xml:id="__map_8cs_source_1l00895"/>00895 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_widget_minimap">WidgetMinimap</link>.UpdateMap();
<anchor xml:id="__map_8cs_source_1l00896"/>00896 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00897"/>00897 
<anchor xml:id="__map_8cs_source_1l00898"/>00898 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F1F&#32;RID:&#32;12063&#32;RVA:&#32;0x00108B98&#32;File&#32;Offset:&#32;0x00106D98</emphasis>
<anchor xml:id="__map_8cs_source_1l00899"/>00899 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Reveal(<link linkend="_class_point">Point</link>&#32;center,&#32;<emphasis role="keywordtype">int</emphasis>&#32;power&#32;=&#32;100)
<anchor xml:id="__map_8cs_source_1l00900"/>00900 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00901"/>00901 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.ForeachSphere(center.x,&#32;center.z,&#32;(<emphasis role="keywordtype">float</emphasis>)(10&#32;+&#32;power&#32;/&#32;5),&#32;delegate(<link linkend="_class_point">Point</link>&#32;p)
<anchor xml:id="__map_8cs_source_1l00902"/>00902 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00903"/>00903 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_e_class">EClass</link>.rnd(power)&#32;&gt;=&#32;Mathf.Min(p.Distance(center)&#32;*&#32;10,&#32;power&#32;-&#32;10))
<anchor xml:id="__map_8cs_source_1l00904"/>00904 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00905"/>00905 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_e_class">EClass</link>._map.SetSeen(p.x,&#32;p.z,&#32;<emphasis role="keyword">true</emphasis>,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__map_8cs_source_1l00906"/>00906 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00907"/>00907 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__map_8cs_source_1l00908"/>00908 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00909"/>00909 
<anchor xml:id="__map_8cs_source_1l00910"/>00910 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F20&#32;RID:&#32;12064&#32;RVA:&#32;0x00108BF0&#32;File&#32;Offset:&#32;0x00106DF0</emphasis>
<anchor xml:id="__map_8cs_source_1l00911"/>00911 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;RefreshFOV(<emphasis role="keywordtype">int</emphasis>&#32;x,&#32;<emphasis role="keywordtype">int</emphasis>&#32;z,&#32;<emphasis role="keywordtype">int</emphasis>&#32;radius&#32;=&#32;6,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;recalculate&#32;=&#32;<emphasis role="keyword">false</emphasis>)
<anchor xml:id="__map_8cs_source_1l00912"/>00912 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00913"/>00913 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.ForeachSphere(x,&#32;z,&#32;(<emphasis role="keywordtype">float</emphasis>)radius,&#32;delegate(<link linkend="_class_point">Point</link>&#32;p)
<anchor xml:id="__map_8cs_source_1l00914"/>00914 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00915"/>00915 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;List&lt;Card&gt;&#32;list&#32;=&#32;p.ListCards(<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__map_8cs_source_1l00916"/>00916 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(recalculate)
<anchor xml:id="__map_8cs_source_1l00917"/>00917 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00918"/>00918 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;(List&lt;Card&gt;.Enumerator&#32;enumerator&#32;=&#32;list.GetEnumerator())
<anchor xml:id="__map_8cs_source_1l00919"/>00919 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00920"/>00920 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(enumerator.MoveNext())
<anchor xml:id="__map_8cs_source_1l00921"/>00921 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00922"/>00922 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_card">Card</link>&#32;card&#32;=&#32;enumerator.Current;
<anchor xml:id="__map_8cs_source_1l00923"/>00923 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;card.RecalculateFOV();
<anchor xml:id="__map_8cs_source_1l00924"/>00924 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00925"/>00925 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__map_8cs_source_1l00926"/>00926 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00927"/>00927 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00928"/>00928 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_card">Card</link>&#32;card2&#32;<emphasis role="keywordflow">in</emphasis>&#32;list)
<anchor xml:id="__map_8cs_source_1l00929"/>00929 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00930"/>00930 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;card2.CalculateFOV();
<anchor xml:id="__map_8cs_source_1l00931"/>00931 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00932"/>00932 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__map_8cs_source_1l00933"/>00933 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00934"/>00934 
<anchor xml:id="__map_8cs_source_1l00935"/>00935 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F21&#32;RID:&#32;12065&#32;RVA:&#32;0x00108C24&#32;File&#32;Offset:&#32;0x00106E24</emphasis>
<anchor xml:id="__map_8cs_source_1l00936"/>00936 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;RefreshFOVAll()
<anchor xml:id="__map_8cs_source_1l00937"/>00937 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00938"/>00938 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_card">Card</link>&#32;card&#32;<emphasis role="keywordflow">in</emphasis>&#32;<link linkend="_class_e_class">EClass</link>._map.things.Concat(<link linkend="_class_e_class">EClass</link>._map.charas))
<anchor xml:id="__map_8cs_source_1l00939"/>00939 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00940"/>00940 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;card.RecalculateFOV();
<anchor xml:id="__map_8cs_source_1l00941"/>00941 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00942"/>00942 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00943"/>00943 
<anchor xml:id="__map_8cs_source_1l00944"/>00944 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F22&#32;RID:&#32;12066&#32;RVA:&#32;0x00108C84&#32;File&#32;Offset:&#32;0x00106E84</emphasis>
<anchor xml:id="__map_8cs_source_1l00945"/>00945 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;SetFloor(<emphasis role="keywordtype">int</emphasis>&#32;x,&#32;<emphasis role="keywordtype">int</emphasis>&#32;z,&#32;<emphasis role="keywordtype">int</emphasis>&#32;idMat&#32;=&#32;0,&#32;<emphasis role="keywordtype">int</emphasis>&#32;idFloor&#32;=&#32;0)
<anchor xml:id="__map_8cs_source_1l00946"/>00946 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00947"/>00947 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.SetFloor(x,&#32;z,&#32;idMat,&#32;idFloor,&#32;0);
<anchor xml:id="__map_8cs_source_1l00948"/>00948 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00949"/>00949 
<anchor xml:id="__map_8cs_source_1l00950"/>00950 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F23&#32;RID:&#32;12067&#32;RVA:&#32;0x00108C92&#32;File&#32;Offset:&#32;0x00106E92</emphasis>
<anchor xml:id="__map_8cs_source_1l00951"/>00951 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;SetFloor(<emphasis role="keywordtype">int</emphasis>&#32;x,&#32;<emphasis role="keywordtype">int</emphasis>&#32;z,&#32;<emphasis role="keywordtype">int</emphasis>&#32;idMat,&#32;<emphasis role="keywordtype">int</emphasis>&#32;idFloor,&#32;<emphasis role="keywordtype">int</emphasis>&#32;dir)
<anchor xml:id="__map_8cs_source_1l00952"/>00952 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00953"/>00953 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_cell">Cell</link>&#32;cell&#32;=&#32;this.cells[x,&#32;z];
<anchor xml:id="__map_8cs_source_1l00954"/>00954 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cell._floorMat&#32;=&#32;(byte)idMat;
<anchor xml:id="__map_8cs_source_1l00955"/>00955 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cell._floor&#32;=&#32;(byte)idFloor;
<anchor xml:id="__map_8cs_source_1l00956"/>00956 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cell.floorDir&#32;=&#32;dir;
<anchor xml:id="__map_8cs_source_1l00957"/>00957 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_critter">Critter</link>.RebuildCritter(cell);
<anchor xml:id="__map_8cs_source_1l00958"/>00958 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.RefreshNeighborTiles(x,&#32;z);
<anchor xml:id="__map_8cs_source_1l00959"/>00959 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00960"/>00960 
<anchor xml:id="__map_8cs_source_1l00961"/>00961 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F24&#32;RID:&#32;12068&#32;RVA:&#32;0x00108CC8&#32;File&#32;Offset:&#32;0x00106EC8</emphasis>
<anchor xml:id="__map_8cs_source_1l00962"/>00962 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;SetBridge(<emphasis role="keywordtype">int</emphasis>&#32;x,&#32;<emphasis role="keywordtype">int</emphasis>&#32;z,&#32;<emphasis role="keywordtype">int</emphasis>&#32;height&#32;=&#32;0,&#32;<emphasis role="keywordtype">int</emphasis>&#32;idMat&#32;=&#32;0,&#32;<emphasis role="keywordtype">int</emphasis>&#32;idBridge&#32;=&#32;0,&#32;<emphasis role="keywordtype">int</emphasis>&#32;dir&#32;=&#32;0)
<anchor xml:id="__map_8cs_source_1l00963"/>00963 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00964"/>00964 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_cell">Cell</link>&#32;cell&#32;=&#32;this.cells[x,&#32;z];
<anchor xml:id="__map_8cs_source_1l00965"/>00965 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cell.bridgeHeight&#32;=&#32;(byte)height;
<anchor xml:id="__map_8cs_source_1l00966"/>00966 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cell._bridgeMat&#32;=&#32;(byte)idMat;
<anchor xml:id="__map_8cs_source_1l00967"/>00967 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cell._bridge&#32;=&#32;(byte)idBridge;
<anchor xml:id="__map_8cs_source_1l00968"/>00968 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cell.bridgePillar&#32;=&#32;0;
<anchor xml:id="__map_8cs_source_1l00969"/>00969 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cell.floorDir&#32;=&#32;dir;
<anchor xml:id="__map_8cs_source_1l00970"/>00970 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cell.room&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__map_8cs_source_1l00971"/>00971 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00972"/>00972 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cell.room.SetDirty();
<anchor xml:id="__map_8cs_source_1l00973"/>00973 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00974"/>00974 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.RefreshNeighborTiles(x,&#32;z);
<anchor xml:id="__map_8cs_source_1l00975"/>00975 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00976"/>00976 
<anchor xml:id="__map_8cs_source_1l00977"/>00977 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F25&#32;RID:&#32;12069&#32;RVA:&#32;0x00108D27&#32;File&#32;Offset:&#32;0x00106F27</emphasis>
<anchor xml:id="__map_8cs_source_1l00978"/>00978 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;SetRoofBlock(<emphasis role="keywordtype">int</emphasis>&#32;x,&#32;<emphasis role="keywordtype">int</emphasis>&#32;z,&#32;<emphasis role="keywordtype">int</emphasis>&#32;idMat,&#32;<emphasis role="keywordtype">int</emphasis>&#32;idBlock,&#32;<emphasis role="keywordtype">int</emphasis>&#32;dir,&#32;<emphasis role="keywordtype">int</emphasis>&#32;height)
<anchor xml:id="__map_8cs_source_1l00979"/>00979 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00980"/>00980 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_cell">Cell</link>&#32;cell&#32;=&#32;this.cells[x,&#32;z];
<anchor xml:id="__map_8cs_source_1l00981"/>00981 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cell._roofBlockMat&#32;=&#32;(byte)idMat;
<anchor xml:id="__map_8cs_source_1l00982"/>00982 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cell._roofBlock&#32;=&#32;(byte)idBlock;
<anchor xml:id="__map_8cs_source_1l00983"/>00983 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cell._roofBlockDir&#32;=&#32;(byte)(dir&#32;+&#32;height&#32;*&#32;4);
<anchor xml:id="__map_8cs_source_1l00984"/>00984 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.RefreshSingleTile(x,&#32;z);
<anchor xml:id="__map_8cs_source_1l00985"/>00985 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00986"/>00986 
<anchor xml:id="__map_8cs_source_1l00987"/>00987 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F26&#32;RID:&#32;12070&#32;RVA:&#32;0x00108D5C&#32;File&#32;Offset:&#32;0x00106F5C</emphasis>
<anchor xml:id="__map_8cs_source_1l00988"/>00988 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;SetBlock(<emphasis role="keywordtype">int</emphasis>&#32;x,&#32;<emphasis role="keywordtype">int</emphasis>&#32;z,&#32;<emphasis role="keywordtype">int</emphasis>&#32;idMat&#32;=&#32;0,&#32;<emphasis role="keywordtype">int</emphasis>&#32;idBlock&#32;=&#32;0)
<anchor xml:id="__map_8cs_source_1l00989"/>00989 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00990"/>00990 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.SetBlock(x,&#32;z,&#32;idMat,&#32;idBlock,&#32;0);
<anchor xml:id="__map_8cs_source_1l00991"/>00991 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l00992"/>00992 
<anchor xml:id="__map_8cs_source_1l00993"/>00993 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F27&#32;RID:&#32;12071&#32;RVA:&#32;0x00108D6C&#32;File&#32;Offset:&#32;0x00106F6C</emphasis>
<anchor xml:id="__map_8cs_source_1l00994"/>00994 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;SetBlock(<emphasis role="keywordtype">int</emphasis>&#32;x,&#32;<emphasis role="keywordtype">int</emphasis>&#32;z,&#32;<emphasis role="keywordtype">int</emphasis>&#32;idMat,&#32;<emphasis role="keywordtype">int</emphasis>&#32;idBlock,&#32;<emphasis role="keywordtype">int</emphasis>&#32;dir)
<anchor xml:id="__map_8cs_source_1l00995"/>00995 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l00996"/>00996 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_cell">Cell</link>&#32;cell&#32;=&#32;this.cells[x,&#32;z];
<anchor xml:id="__map_8cs_source_1l00997"/>00997 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;hasFloodBlock&#32;=&#32;cell.HasFloodBlock;
<anchor xml:id="__map_8cs_source_1l00998"/>00998 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cell._blockMat&#32;=&#32;(byte)idMat;
<anchor xml:id="__map_8cs_source_1l00999"/>00999 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cell._block&#32;=&#32;(byte)idBlock;
<anchor xml:id="__map_8cs_source_1l01000"/>01000 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cell.blockDir&#32;=&#32;dir;
<anchor xml:id="__map_8cs_source_1l01001"/>01001 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cell.effect&#32;==&#32;<emphasis role="keyword">null</emphasis>&#32;||&#32;!cell.effect.IsFire)
<anchor xml:id="__map_8cs_source_1l01002"/>01002 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01003"/>01003 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cell.effect&#32;=&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__map_8cs_source_1l01004"/>01004 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01005"/>01005 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cell.isToggleWallPillar&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__map_8cs_source_1l01006"/>01006 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cell.room&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__map_8cs_source_1l01007"/>01007 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01008"/>01008 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cell.room.SetDirty();
<anchor xml:id="__map_8cs_source_1l01009"/>01009 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01010"/>01010 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(hasFloodBlock&#32;||&#32;cell.HasFloodBlock)
<anchor xml:id="__map_8cs_source_1l01011"/>01011 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01012"/>01012 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.OnSetBlockOrDoor(x,&#32;z);
<anchor xml:id="__map_8cs_source_1l01013"/>01013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01014"/>01014 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.RefreshNeighborTiles(x,&#32;z);
<anchor xml:id="__map_8cs_source_1l01015"/>01015 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01016"/>01016 
<anchor xml:id="__map_8cs_source_1l01017"/>01017 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F28&#32;RID:&#32;12072&#32;RVA:&#32;0x00108DF8&#32;File&#32;Offset:&#32;0x00106FF8</emphasis>
<anchor xml:id="__map_8cs_source_1l01018"/>01018 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnSetBlockOrDoor(<emphasis role="keywordtype">int</emphasis>&#32;x,&#32;<emphasis role="keywordtype">int</emphasis>&#32;z)
<anchor xml:id="__map_8cs_source_1l01019"/>01019 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01020"/>01020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_point">Point</link>(x,&#32;z);
<anchor xml:id="__map_8cs_source_1l01021"/>01021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.TryRemoveRoom(x,&#32;z);
<anchor xml:id="__map_8cs_source_1l01022"/>01022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(x&#32;&gt;&#32;0)
<anchor xml:id="__map_8cs_source_1l01023"/>01023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01024"/>01024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.TryRemoveRoom(x&#32;-&#32;1,&#32;z);
<anchor xml:id="__map_8cs_source_1l01025"/>01025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01026"/>01026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(x&#32;&lt;&#32;this.Size&#32;-&#32;1)
<anchor xml:id="__map_8cs_source_1l01027"/>01027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01028"/>01028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.TryRemoveRoom(x&#32;+&#32;1,&#32;z);
<anchor xml:id="__map_8cs_source_1l01029"/>01029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01030"/>01030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(z&#32;&gt;&#32;0)
<anchor xml:id="__map_8cs_source_1l01031"/>01031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01032"/>01032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.TryRemoveRoom(x,&#32;z&#32;-&#32;1);
<anchor xml:id="__map_8cs_source_1l01033"/>01033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01034"/>01034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(z&#32;&lt;&#32;this.Size&#32;-&#32;1)
<anchor xml:id="__map_8cs_source_1l01035"/>01035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01036"/>01036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.TryRemoveRoom(x,&#32;z&#32;+&#32;1);
<anchor xml:id="__map_8cs_source_1l01037"/>01037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01038"/>01038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(x&#32;&gt;&#32;0&#32;&amp;&amp;&#32;z&#32;&lt;&#32;this.Size&#32;-&#32;1)
<anchor xml:id="__map_8cs_source_1l01039"/>01039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01040"/>01040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.TryRemoveRoom(x&#32;-&#32;1,&#32;z&#32;+&#32;1);
<anchor xml:id="__map_8cs_source_1l01041"/>01041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01042"/>01042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.roomHash.Clear();
<anchor xml:id="__map_8cs_source_1l01043"/>01043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.TryAddRoom(x,&#32;z);
<anchor xml:id="__map_8cs_source_1l01044"/>01044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(x&#32;&gt;&#32;0)
<anchor xml:id="__map_8cs_source_1l01045"/>01045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01046"/>01046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.TryAddRoom(x&#32;-&#32;1,&#32;z);
<anchor xml:id="__map_8cs_source_1l01047"/>01047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01048"/>01048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(x&#32;&lt;&#32;this.Size&#32;-&#32;1)
<anchor xml:id="__map_8cs_source_1l01049"/>01049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01050"/>01050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.TryAddRoom(x&#32;+&#32;1,&#32;z);
<anchor xml:id="__map_8cs_source_1l01051"/>01051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01052"/>01052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(z&#32;&gt;&#32;0)
<anchor xml:id="__map_8cs_source_1l01053"/>01053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01054"/>01054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.TryAddRoom(x,&#32;z&#32;-&#32;1);
<anchor xml:id="__map_8cs_source_1l01055"/>01055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01056"/>01056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(z&#32;&lt;&#32;this.Size&#32;-&#32;1)
<anchor xml:id="__map_8cs_source_1l01057"/>01057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01058"/>01058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.TryAddRoom(x,&#32;z&#32;+&#32;1);
<anchor xml:id="__map_8cs_source_1l01059"/>01059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01060"/>01060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(x&#32;&gt;&#32;0&#32;&amp;&amp;&#32;z&#32;&lt;&#32;this.Size&#32;-&#32;1)
<anchor xml:id="__map_8cs_source_1l01061"/>01061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01062"/>01062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.TryAddRoom(x&#32;-&#32;1,&#32;z&#32;+&#32;1);
<anchor xml:id="__map_8cs_source_1l01063"/>01063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01064"/>01064 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01065"/>01065 
<anchor xml:id="__map_8cs_source_1l01066"/>01066 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F29&#32;RID:&#32;12073&#32;RVA:&#32;0x00108EEC&#32;File&#32;Offset:&#32;0x001070EC</emphasis>
<anchor xml:id="__map_8cs_source_1l01067"/>01067 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;TryRemoveRoom(<emphasis role="keywordtype">int</emphasis>&#32;x,&#32;<emphasis role="keywordtype">int</emphasis>&#32;z)
<anchor xml:id="__map_8cs_source_1l01068"/>01068 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01069"/>01069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.cells[x,&#32;z].HasFloodBlock)
<anchor xml:id="__map_8cs_source_1l01070"/>01070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01071"/>01071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__map_8cs_source_1l01072"/>01072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01073"/>01073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_room">Room</link>&#32;room&#32;=&#32;this.cells[x,&#32;z].room;
<anchor xml:id="__map_8cs_source_1l01074"/>01074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(room&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__map_8cs_source_1l01075"/>01075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01076"/>01076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.rooms.RemoveRoom(room);
<anchor xml:id="__map_8cs_source_1l01077"/>01077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01078"/>01078 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01079"/>01079 
<anchor xml:id="__map_8cs_source_1l01080"/>01080 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F2A&#32;RID:&#32;12074&#32;RVA:&#32;0x00108F30&#32;File&#32;Offset:&#32;0x00107130</emphasis>
<anchor xml:id="__map_8cs_source_1l01081"/>01081 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;TryAddRoom(<emphasis role="keywordtype">int</emphasis>&#32;x,&#32;<emphasis role="keywordtype">int</emphasis>&#32;z)
<anchor xml:id="__map_8cs_source_1l01082"/>01082 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01083"/>01083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_e_class">EClass</link>._zone.DisableRooms)
<anchor xml:id="__map_8cs_source_1l01084"/>01084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01085"/>01085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__map_8cs_source_1l01086"/>01086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01087"/>01087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.roomHash.Contains(x&#32;+&#32;z&#32;*&#32;<emphasis role="keyword">this</emphasis>.Size)&#32;||&#32;<emphasis role="keyword">this</emphasis>.cells[x,&#32;z].HasFloodBlock)
<anchor xml:id="__map_8cs_source_1l01088"/>01088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01089"/>01089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__map_8cs_source_1l01090"/>01090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01091"/>01091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;FloodSpiller&#32;floodSpiller&#32;=&#32;this.flood;
<anchor xml:id="__map_8cs_source_1l01092"/>01092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;IFloodCell[,]&#32;array&#32;=&#32;this.cells;
<anchor xml:id="__map_8cs_source_1l01093"/>01093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;FloodSpiller.Result&#32;result&#32;=&#32;floodSpiller.SpillFlood(array,&#32;x,&#32;z);
<anchor xml:id="__map_8cs_source_1l01094"/>01094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!result.IsValid)
<anchor xml:id="__map_8cs_source_1l01095"/>01095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01096"/>01096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__map_8cs_source_1l01097"/>01097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01098"/>01098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;flag&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__map_8cs_source_1l01099"/>01099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(IFloodCell&#32;floodCell&#32;<emphasis role="keywordflow">in</emphasis>&#32;result.visited)
<anchor xml:id="__map_8cs_source_1l01100"/>01100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01101"/>01101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(floodCell.hasDoor)
<anchor xml:id="__map_8cs_source_1l01102"/>01102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01103"/>01103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;flag&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__map_8cs_source_1l01104"/>01104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__map_8cs_source_1l01105"/>01105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01106"/>01106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_cell">Cell</link>&#32;cell&#32;=&#32;floodCell&#32;as&#32;<link linkend="_class_cell">Cell</link>;
<anchor xml:id="__map_8cs_source_1l01107"/>01107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cell.sourceBlock.tileType.IsFloodDoor&#32;||&#32;cell.Front.hasDoor&#32;||&#32;cell.Right.hasDoor&#32;||&#32;cell.FrontRight.hasDoor&#32;||&#32;cell.Back.hasDoor&#32;||&#32;cell.Left.hasDoor&#32;||&#32;cell.BackLeft.hasDoor)
<anchor xml:id="__map_8cs_source_1l01108"/>01108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01109"/>01109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;flag&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__map_8cs_source_1l01110"/>01110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__map_8cs_source_1l01111"/>01111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01112"/>01112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01113"/>01113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!flag&#32;&amp;&amp;&#32;this.IsIndoor)
<anchor xml:id="__map_8cs_source_1l01114"/>01114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01115"/>01115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(IFloodCell&#32;floodCell2&#32;<emphasis role="keywordflow">in</emphasis>&#32;result.visited)
<anchor xml:id="__map_8cs_source_1l01116"/>01116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01117"/>01117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_cell">Cell</link>&#32;cell2&#32;=&#32;floodCell2&#32;as&#32;<link linkend="_class_cell">Cell</link>;
<anchor xml:id="__map_8cs_source_1l01118"/>01118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cell2.detail&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;cell2.detail.things.Count&#32;!=&#32;0)
<anchor xml:id="__map_8cs_source_1l01119"/>01119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01120"/>01120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_thing">Thing</link>&#32;thing&#32;<emphasis role="keywordflow">in</emphasis>&#32;cell2.detail.things)
<anchor xml:id="__map_8cs_source_1l01121"/>01121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01122"/>01122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(thing.trait&#32;is&#32;<link linkend="_class_trait_room_plate">TraitRoomPlate</link>&#32;||&#32;thing.trait&#32;is&#32;<link linkend="_class_trait_house_board">TraitHouseBoard</link>)
<anchor xml:id="__map_8cs_source_1l01123"/>01123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01124"/>01124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;flag&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__map_8cs_source_1l01125"/>01125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__map_8cs_source_1l01126"/>01126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01127"/>01127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01128"/>01128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(flag)
<anchor xml:id="__map_8cs_source_1l01129"/>01129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01130"/>01130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__map_8cs_source_1l01131"/>01131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01132"/>01132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01133"/>01133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01134"/>01134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01135"/>01135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!flag)
<anchor xml:id="__map_8cs_source_1l01136"/>01136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01137"/>01137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__map_8cs_source_1l01138"/>01138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01139"/>01139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_room">Room</link>&#32;room&#32;=&#32;this.rooms.AddRoom(<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_room">Room</link>());
<anchor xml:id="__map_8cs_source_1l01140"/>01140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(IFloodCell&#32;floodCell3&#32;<emphasis role="keywordflow">in</emphasis>&#32;result.visited)
<anchor xml:id="__map_8cs_source_1l01141"/>01141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01142"/>01142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_cell">Cell</link>&#32;cell3&#32;=&#32;floodCell3&#32;as&#32;<link linkend="_class_cell">Cell</link>;
<anchor xml:id="__map_8cs_source_1l01143"/>01143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">byte</emphasis>&#32;x2&#32;=&#32;cell3.x;
<anchor xml:id="__map_8cs_source_1l01144"/>01144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">byte</emphasis>&#32;z2&#32;=&#32;cell3.z;
<anchor xml:id="__map_8cs_source_1l01145"/>01145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;room.AddPoint(<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_point">Point</link>((<emphasis role="keywordtype">int</emphasis>)x2,&#32;(<emphasis role="keywordtype">int</emphasis>)z2));
<anchor xml:id="__map_8cs_source_1l01146"/>01146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.roomHash.Add((<emphasis role="keywordtype">int</emphasis>)x2&#32;+&#32;(<emphasis role="keywordtype">int</emphasis>)z2&#32;*&#32;this.Size);
<anchor xml:id="__map_8cs_source_1l01147"/>01147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(z2&#32;&gt;&#32;0&#32;&amp;&amp;&#32;cell3.Front.HasFloodBlock&#32;&amp;&amp;&#32;cell3.Front.room&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__map_8cs_source_1l01148"/>01148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01149"/>01149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;room.AddPoint(<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_point">Point</link>((<emphasis role="keywordtype">int</emphasis>)x2,&#32;(<emphasis role="keywordtype">int</emphasis>)(z2&#32;-&#32;1)));
<anchor xml:id="__map_8cs_source_1l01150"/>01150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.roomHash.Add((<emphasis role="keywordtype">int</emphasis>)x2&#32;+&#32;(<emphasis role="keywordtype">int</emphasis>)(z2&#32;-&#32;1)&#32;*&#32;this.Size);
<anchor xml:id="__map_8cs_source_1l01151"/>01151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01152"/>01152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((<emphasis role="keywordtype">int</emphasis>)x2&#32;&lt;&#32;this.Size&#32;-&#32;1&#32;&amp;&amp;&#32;cell3.Right.HasFloodBlock&#32;&amp;&amp;&#32;cell3.Right.room&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__map_8cs_source_1l01153"/>01153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01154"/>01154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;room.AddPoint(<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_point">Point</link>((<emphasis role="keywordtype">int</emphasis>)(x2&#32;+&#32;1),&#32;(<emphasis role="keywordtype">int</emphasis>)z2));
<anchor xml:id="__map_8cs_source_1l01155"/>01155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.roomHash.Add((<emphasis role="keywordtype">int</emphasis>)(x2&#32;+&#32;1)&#32;+&#32;(<emphasis role="keywordtype">int</emphasis>)z2&#32;*&#32;this.Size);
<anchor xml:id="__map_8cs_source_1l01156"/>01156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01157"/>01157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(z2&#32;&gt;&#32;0&#32;&amp;&amp;&#32;(<emphasis role="keywordtype">int</emphasis>)x2&#32;&lt;&#32;this.Size&#32;-&#32;1&#32;&amp;&amp;&#32;cell3.FrontRight.HasFloodBlock&#32;&amp;&amp;&#32;cell3.FrontRight.room&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__map_8cs_source_1l01158"/>01158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01159"/>01159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;room.AddPoint(<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_point">Point</link>((<emphasis role="keywordtype">int</emphasis>)(x2&#32;+&#32;1),&#32;(<emphasis role="keywordtype">int</emphasis>)(z2&#32;-&#32;1)));
<anchor xml:id="__map_8cs_source_1l01160"/>01160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.roomHash.Add((<emphasis role="keywordtype">int</emphasis>)(x2&#32;+&#32;1)&#32;+&#32;(<emphasis role="keywordtype">int</emphasis>)(z2&#32;-&#32;1)&#32;*&#32;this.Size);
<anchor xml:id="__map_8cs_source_1l01161"/>01161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01162"/>01162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01163"/>01163 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01164"/>01164 
<anchor xml:id="__map_8cs_source_1l01165"/>01165 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F2B&#32;RID:&#32;12075&#32;RVA:&#32;0x00109300&#32;File&#32;Offset:&#32;0x00107500</emphasis>
<anchor xml:id="__map_8cs_source_1l01166"/>01166 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;SetBlockDir(<emphasis role="keywordtype">int</emphasis>&#32;x,&#32;<emphasis role="keywordtype">int</emphasis>&#32;z,&#32;<emphasis role="keywordtype">int</emphasis>&#32;dir)
<anchor xml:id="__map_8cs_source_1l01167"/>01167 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01168"/>01168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_cell">Cell</link>&#32;cell&#32;=&#32;this.cells[x,&#32;z];
<anchor xml:id="__map_8cs_source_1l01169"/>01169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cell._block&#32;=&#32;(byte)cell.sourceBlock.id;
<anchor xml:id="__map_8cs_source_1l01170"/>01170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cell.blockDir&#32;=&#32;dir;
<anchor xml:id="__map_8cs_source_1l01171"/>01171 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01172"/>01172 
<anchor xml:id="__map_8cs_source_1l01173"/>01173 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F2C&#32;RID:&#32;12076&#32;RVA:&#32;0x00109328&#32;File&#32;Offset:&#32;0x00107528</emphasis>
<anchor xml:id="__map_8cs_source_1l01174"/>01174 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;ModFire(<emphasis role="keywordtype">int</emphasis>&#32;x,&#32;<emphasis role="keywordtype">int</emphasis>&#32;z,&#32;<emphasis role="keywordtype">int</emphasis>&#32;amount)
<anchor xml:id="__map_8cs_source_1l01175"/>01175 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01176"/>01176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_cell">Cell</link>&#32;cell&#32;=&#32;this.cells[x,&#32;z];
<anchor xml:id="__map_8cs_source_1l01177"/>01177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cell.IsTopWaterAndNoSnow)
<anchor xml:id="__map_8cs_source_1l01178"/>01178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01179"/>01179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__map_8cs_source_1l01180"/>01180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01181"/>01181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cell.effect&#32;==&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;amount&#32;&gt;&#32;0)
<anchor xml:id="__map_8cs_source_1l01182"/>01182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01183"/>01183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SE.Play(<emphasis role="stringliteral">&quot;fire&quot;</emphasis>);
<anchor xml:id="__map_8cs_source_1l01184"/>01184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01185"/>01185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_cell_effect">CellEffect</link>&#32;effect&#32;=&#32;cell.effect;
<anchor xml:id="__map_8cs_source_1l01186"/>01186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;num&#32;=&#32;amount&#32;+&#32;((effect&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;?&#32;effect.FireAmount&#32;:&#32;0);
<anchor xml:id="__map_8cs_source_1l01187"/>01187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(num&#32;&gt;&#32;20)
<anchor xml:id="__map_8cs_source_1l01188"/>01188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01189"/>01189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num&#32;=&#32;20;
<anchor xml:id="__map_8cs_source_1l01190"/>01190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01191"/>01191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(num&#32;&lt;=&#32;0)
<anchor xml:id="__map_8cs_source_1l01192"/>01192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01193"/>01193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cell.effect&#32;=&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__map_8cs_source_1l01194"/>01194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__map_8cs_source_1l01195"/>01195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01196"/>01196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cell.effect&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_cell_effect">CellEffect</link>
<anchor xml:id="__map_8cs_source_1l01197"/>01197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01198"/>01198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">id</emphasis>&#32;=&#32;3,
<anchor xml:id="__map_8cs_source_1l01199"/>01199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;amount&#32;=&#32;num
<anchor xml:id="__map_8cs_source_1l01200"/>01200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__map_8cs_source_1l01201"/>01201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.effectManager.GetOrCreate(<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_point">Point</link>(x,&#32;z));
<anchor xml:id="__map_8cs_source_1l01202"/>01202 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01203"/>01203 
<anchor xml:id="__map_8cs_source_1l01204"/>01204 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F2D&#32;RID:&#32;12077&#32;RVA:&#32;0x001093B8&#32;File&#32;Offset:&#32;0x001075B8</emphasis>
<anchor xml:id="__map_8cs_source_1l01205"/>01205 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;TryShatter(<link linkend="_class_point">Point</link>&#32;pos,&#32;<emphasis role="keywordtype">int</emphasis>&#32;ele,&#32;<emphasis role="keywordtype">int</emphasis>&#32;power)
<anchor xml:id="__map_8cs_source_1l01206"/>01206 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01207"/>01207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_element">Element</link>&#32;element&#32;=&#32;<link linkend="_class_element">Element</link>.Create(ele,&#32;0);
<anchor xml:id="__map_8cs_source_1l01208"/>01208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;List&lt;Card&gt;&#32;list&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;Card&gt;();
<anchor xml:id="__map_8cs_source_1l01209"/>01209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_map">Map</link>.&lt;&gt;c__DisplayClass99_0&#32;CS$&lt;&gt;8__locals1;
<anchor xml:id="__map_8cs_source_1l01210"/>01210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CS$&lt;&gt;8__locals1.fire&#32;=&#32;(ele&#32;==&#32;910);
<anchor xml:id="__map_8cs_source_1l01211"/>01211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;fire&#32;=&#32;CS$&lt;&gt;8__locals1.fire;
<anchor xml:id="__map_8cs_source_1l01212"/>01212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;List&lt;Card&gt;&#32;list2&#32;=&#32;pos.ListCards(<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__map_8cs_source_1l01213"/>01213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(CS$&lt;&gt;8__locals1.fire&#32;&amp;&amp;&#32;(pos.cell.IsSnowTile&#32;||&#32;pos.cell.IsTopWater))
<anchor xml:id="__map_8cs_source_1l01214"/>01214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01215"/>01215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__map_8cs_source_1l01216"/>01216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01217"/>01217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_card">Card</link>&#32;card&#32;<emphasis role="keywordflow">in</emphasis>&#32;list2)
<anchor xml:id="__map_8cs_source_1l01218"/>01218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01219"/>01219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(card.ResistLvFrom(ele)&#32;&lt;&#32;3&#32;&amp;&amp;&#32;!(card.trait&#32;is&#32;<link linkend="_class_trait_blanket">TraitBlanket</link>)&#32;&amp;&amp;&#32;(<link linkend="_class_e_class">EClass</link>.rnd(3)&#32;!=&#32;0&#32;||&#32;<link linkend="_class_map">Map</link>.&lt;TryShatter&gt;g__CanCook|99_0(card,&#32;ref&#32;CS$&lt;&gt;8__locals1)))
<anchor xml:id="__map_8cs_source_1l01220"/>01220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01221"/>01221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(card.isThing&#32;&amp;&amp;&#32;card.things.Count&#32;==&#32;0)
<anchor xml:id="__map_8cs_source_1l01222"/>01222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01223"/>01223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;list.Add(card);
<anchor xml:id="__map_8cs_source_1l01224"/>01224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01225"/>01225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__map_8cs_source_1l01226"/>01226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01227"/>01227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_thing">Thing</link>&#32;thing&#32;=&#32;(ele&#32;==&#32;910)&#32;?&#32;card.things.Find&lt;<link linkend="_class_trait_blanket_fireproof">TraitBlanketFireproof</link>&gt;()&#32;:&#32;card.things.Find&lt;<link linkend="_class_trait_blanket_coldproof">TraitBlanketColdproof</link>&gt;();
<anchor xml:id="__map_8cs_source_1l01228"/>01228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(thing&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__map_8cs_source_1l01229"/>01229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01230"/>01230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;thing.ModCharge(-1,&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__map_8cs_source_1l01231"/>01231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pos.IsSync)
<anchor xml:id="__map_8cs_source_1l01232"/>01232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01233"/>01233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_msg">Msg</link>.Say((pos.HasChara&#32;?&#32;<emphasis role="stringliteral">&quot;blanketInv_&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;blanketGround_&quot;</emphasis>)&#32;+&#32;element.source.alias,&#32;thing,&#32;pos.FirstChara,&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__map_8cs_source_1l01234"/>01234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01235"/>01235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(thing.c_charges&#32;&lt;=&#32;0)
<anchor xml:id="__map_8cs_source_1l01236"/>01236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01237"/>01237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;thing.Die(element,&#32;<emphasis role="keyword">null</emphasis>,&#32;AttackSource.None);
<anchor xml:id="__map_8cs_source_1l01238"/>01238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01239"/>01239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01240"/>01240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__map_8cs_source_1l01241"/>01241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01242"/>01242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_thing">Thing</link>&#32;thing2&#32;<emphasis role="keywordflow">in</emphasis>&#32;card.things.List((<link linkend="_class_thing">Thing</link>&#32;a)&#32;=&gt;&#32;a.things.Count&#32;==&#32;0,&#32;<emphasis role="keyword">false</emphasis>))
<anchor xml:id="__map_8cs_source_1l01243"/>01243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01244"/>01244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_card">Card</link>&#32;parentCard&#32;=&#32;thing2.parentCard;
<anchor xml:id="__map_8cs_source_1l01245"/>01245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(parentCard&#32;==&#32;<emphasis role="keyword">null</emphasis>&#32;||&#32;(!(parentCard.trait&#32;is&#32;<link linkend="_class_trait_chest_merchant">TraitChestMerchant</link>)&#32;&amp;&amp;&#32;!parentCard.HasEditorTag(EditorTag.PreciousContainer)))
<anchor xml:id="__map_8cs_source_1l01246"/>01246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01247"/>01247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;list.Add(thing2);
<anchor xml:id="__map_8cs_source_1l01248"/>01248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01249"/>01249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01250"/>01250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01251"/>01251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01252"/>01252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01253"/>01253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01254"/>01254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;list.Shuffle&lt;<link linkend="_class_card">Card</link>&gt;();
<anchor xml:id="__map_8cs_source_1l01255"/>01255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;num&#32;=&#32;0;
<anchor xml:id="__map_8cs_source_1l01256"/>01256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_card">Card</link>&#32;card2&#32;<emphasis role="keywordflow">in</emphasis>&#32;list)
<anchor xml:id="__map_8cs_source_1l01257"/>01257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01258"/>01258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(card2.trait.CanBeDestroyed&#32;&amp;&amp;&#32;!card2.category.IsChildOf(<emphasis role="stringliteral">&quot;currency&quot;</emphasis>)&#32;&amp;&amp;&#32;!(card2.trait&#32;is&#32;<link linkend="_class_trait_door">TraitDoor</link>)&#32;&amp;&amp;&#32;!(card2.trait&#32;is&#32;<link linkend="_class_trait_figure">TraitFigure</link>)&#32;&amp;&amp;&#32;!(card2.trait&#32;is&#32;<link linkend="_class_trait_training_dummy">TraitTrainingDummy</link>)&#32;&amp;&amp;&#32;card2.rarity&#32;&lt;&#32;Rarity.Legendary)
<anchor xml:id="__map_8cs_source_1l01259"/>01259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01260"/>01260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_card">Card</link>&#32;rootCard&#32;=&#32;card2.GetRootCard();
<anchor xml:id="__map_8cs_source_1l01261"/>01261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!card2.IsEquipmentOrRanged&#32;||&#32;(<link linkend="_class_e_class">EClass</link>.rnd(4)&#32;==&#32;0&#32;&amp;&amp;&#32;((!card2.IsRangedWeapon&#32;&amp;&amp;&#32;!card2.Thing.isEquipped)&#32;||&#32;!rootCard.IsPCFaction&#32;||&#32;<link linkend="_class_e_class">EClass</link>.rnd(4)&#32;==&#32;0)))
<anchor xml:id="__map_8cs_source_1l01262"/>01262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01263"/>01263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_e_class">EClass</link>._zone.IsPCFaction&#32;&amp;&amp;&#32;<link linkend="_class_e_class">EClass</link>.Branch.lv&#32;&gt;=&#32;3&#32;&amp;&amp;&#32;(!rootCard.isChara&#32;||&#32;rootCard.Chara.IsPCFaction))
<anchor xml:id="__map_8cs_source_1l01264"/>01264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01265"/>01265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pos.IsSync)
<anchor xml:id="__map_8cs_source_1l01266"/>01266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01267"/>01267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_msg">Msg</link>.Say(<emphasis role="stringliteral">&quot;damage_protectCore&quot;</emphasis>,&#32;card2,&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__map_8cs_source_1l01268"/>01268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01269"/>01269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01270"/>01270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__map_8cs_source_1l01271"/>01271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01272"/>01272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ele&#32;!=&#32;910)
<anchor xml:id="__map_8cs_source_1l01273"/>01273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01274"/>01274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ele&#32;==&#32;911)
<anchor xml:id="__map_8cs_source_1l01275"/>01275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01276"/>01276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!card2.category.IsChildOf(<emphasis role="stringliteral">&quot;drink&quot;</emphasis>)&#32;&amp;&amp;&#32;<link linkend="_class_e_class">EClass</link>.rnd(5)&#32;==&#32;0)
<anchor xml:id="__map_8cs_source_1l01277"/>01277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01278"/>01278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;
<anchor xml:id="__map_8cs_source_1l01279"/>01279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01280"/>01280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01281"/>01281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01282"/>01282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__map_8cs_source_1l01283"/>01283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01284"/>01284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(card2.isFireproof)
<anchor xml:id="__map_8cs_source_1l01285"/>01285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01286"/>01286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;
<anchor xml:id="__map_8cs_source_1l01287"/>01287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01288"/>01288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!card2.category.IsChildOf(<emphasis role="stringliteral">&quot;book&quot;</emphasis>)&#32;&amp;&amp;&#32;<link linkend="_class_e_class">EClass</link>.rnd(2)&#32;==&#32;0)
<anchor xml:id="__map_8cs_source_1l01289"/>01289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01290"/>01290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;
<anchor xml:id="__map_8cs_source_1l01291"/>01291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01292"/>01292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01293"/>01293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_e_class">EClass</link>.rnd(num&#32;*&#32;num)&#32;==&#32;0)
<anchor xml:id="__map_8cs_source_1l01294"/>01294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01295"/>01295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;flag&#32;=&#32;<link linkend="_class_map">Map</link>.&lt;TryShatter&gt;g__CanCook|99_0(card2,&#32;ref&#32;CS$&lt;&gt;8__locals1);
<anchor xml:id="__map_8cs_source_1l01296"/>01296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;text&#32;=&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>;
<anchor xml:id="__map_8cs_source_1l01297"/>01297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(flag)
<anchor xml:id="__map_8cs_source_1l01298"/>01298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01299"/>01299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;List&lt;<link linkend="_class_source_thing">SourceThing</link>.<link linkend="_class_source_thing_1_1_row">Row</link>&gt;&#32;list3&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;<link linkend="_class_source_thing">SourceThing</link>.<link linkend="_class_source_thing_1_1_row">Row</link>&gt;();
<anchor xml:id="__map_8cs_source_1l01300"/>01300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_recipe_source">RecipeSource</link>&#32;recipeSource&#32;<emphasis role="keywordflow">in</emphasis>&#32;<link linkend="_class_recipe_manager">RecipeManager</link>.list)
<anchor xml:id="__map_8cs_source_1l01301"/>01301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01302"/>01302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_source_thing_1_1_row">SourceThing.Row</link>&#32;row&#32;=&#32;recipeSource.row&#32;as&#32;<link linkend="_class_source_thing">SourceThing</link>.<link linkend="_class_source_thing_1_1_row">Row</link>;
<anchor xml:id="__map_8cs_source_1l01303"/>01303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(row&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;!row.isOrigin&#32;&amp;&amp;&#32;!row.components.IsEmpty()&#32;&amp;&amp;&#32;row.components.Length&#32;&lt;&#32;3&#32;&amp;&amp;&#32;row.Category.IsChildOf(<emphasis role="stringliteral">&quot;meal&quot;</emphasis>))
<anchor xml:id="__map_8cs_source_1l01304"/>01304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01305"/>01305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!row.factory.IsEmpty())
<anchor xml:id="__map_8cs_source_1l01306"/>01306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01307"/>01307 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;a2&#32;=&#32;row.factory[0];
<anchor xml:id="__map_8cs_source_1l01308"/>01308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(a2&#32;==&#32;<emphasis role="stringliteral">&quot;chopper&quot;</emphasis>&#32;||&#32;a2&#32;==&#32;<emphasis role="stringliteral">&quot;mixer&quot;</emphasis>&#32;||&#32;a2&#32;==&#32;<emphasis role="stringliteral">&quot;camppot&quot;</emphasis>&#32;||&#32;a2&#32;==&#32;<emphasis role="stringliteral">&quot;cauldron&quot;</emphasis>)
<anchor xml:id="__map_8cs_source_1l01309"/>01309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01310"/>01310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;
<anchor xml:id="__map_8cs_source_1l01311"/>01311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01312"/>01312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01313"/>01313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(row.components[0]&#32;==&#32;card2.id&#32;||&#32;row.components[0]&#32;==&#32;card2.sourceCard._origin)
<anchor xml:id="__map_8cs_source_1l01314"/>01314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01315"/>01315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;list3.Add(row);
<anchor xml:id="__map_8cs_source_1l01316"/>01316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01317"/>01317 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01318"/>01318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01319"/>01319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(list3.Count&#32;&gt;&#32;0)
<anchor xml:id="__map_8cs_source_1l01320"/>01320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01321"/>01321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;text&#32;=&#32;list3.RandomItem&lt;<link linkend="_class_source_thing">SourceThing</link>.<link linkend="_class_source_thing_1_1_row">Row</link>&gt;().<emphasis role="keywordtype">id</emphasis>;
<anchor xml:id="__map_8cs_source_1l01322"/>01322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01323"/>01323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01324"/>01324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(flag&#32;&amp;&amp;&#32;!text.IsEmpty())
<anchor xml:id="__map_8cs_source_1l01325"/>01325 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01326"/>01326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;card2.GetRoot();
<anchor xml:id="__map_8cs_source_1l01327"/>01327 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_thing">Thing</link>&#32;thing3&#32;=&#32;card2.Split(1);
<anchor xml:id="__map_8cs_source_1l01328"/>01328 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;List&lt;Thing&gt;&#32;list4&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;Thing&gt;();
<anchor xml:id="__map_8cs_source_1l01329"/>01329 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;list4.Add(thing3);
<anchor xml:id="__map_8cs_source_1l01330"/>01330 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_thing">Thing</link>&#32;thing4&#32;=&#32;<link linkend="_class_thing_gen">ThingGen</link>.Create(text,&#32;-1,&#32;-1);
<anchor xml:id="__map_8cs_source_1l01331"/>01331 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_craft_util">CraftUtil</link>.MakeDish(thing4,&#32;list4,&#32;999);
<anchor xml:id="__map_8cs_source_1l01332"/>01332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;thing4.elements.ModBase(2,&#32;<link linkend="_class_e_class">EClass</link>.curve(power&#32;/&#32;10,&#32;50,&#32;10,&#32;75));
<anchor xml:id="__map_8cs_source_1l01333"/>01333 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pos.IsSync)
<anchor xml:id="__map_8cs_source_1l01334"/>01334 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01335"/>01335 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_msg">Msg</link>.Say((rootCard&#32;==&#32;card2)&#32;?&#32;<emphasis role="stringliteral">&quot;cook_groundItem&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;cook_invItem&quot;</emphasis>,&#32;thing3,&#32;rootCard,&#32;thing4.Name,&#32;<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__map_8cs_source_1l01336"/>01336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01337"/>01337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(rootCard&#32;==&#32;card2)
<anchor xml:id="__map_8cs_source_1l01338"/>01338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01339"/>01339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_e_class">EClass</link>._zone.AddCard(thing4,&#32;card2.pos);
<anchor xml:id="__map_8cs_source_1l01340"/>01340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01341"/>01341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(rootCard.isChara)
<anchor xml:id="__map_8cs_source_1l01342"/>01342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01343"/>01343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rootCard.Chara.Pick(thing4,&#32;<emphasis role="keyword">false</emphasis>,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__map_8cs_source_1l01344"/>01344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01345"/>01345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__map_8cs_source_1l01346"/>01346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01347"/>01347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rootCard.AddThing(thing4,&#32;<emphasis role="keyword">true</emphasis>,&#32;-1,&#32;-1);
<anchor xml:id="__map_8cs_source_1l01348"/>01348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01349"/>01349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;thing3.Destroy();
<anchor xml:id="__map_8cs_source_1l01350"/>01350 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01351"/>01351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__map_8cs_source_1l01352"/>01352 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01353"/>01353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;num2&#32;=&#32;<link linkend="_class_e_class">EClass</link>.rnd(card2.Num)&#32;/&#32;2&#32;+&#32;1;
<anchor xml:id="__map_8cs_source_1l01354"/>01354 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(card2.Num&#32;&gt;&#32;num2)
<anchor xml:id="__map_8cs_source_1l01355"/>01355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01356"/>01356 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_thing">Thing</link>&#32;thing5&#32;=&#32;card2.Split(num2);
<anchor xml:id="__map_8cs_source_1l01357"/>01357 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pos.IsSync)
<anchor xml:id="__map_8cs_source_1l01358"/>01358 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01359"/>01359 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_msg">Msg</link>.Say((rootCard&#32;==&#32;card2)&#32;?&#32;<emphasis role="stringliteral">&quot;damage_groundItem&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;damage_invItem&quot;</emphasis>,&#32;thing5,&#32;rootCard,&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__map_8cs_source_1l01360"/>01360 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01361"/>01361 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;thing5.Destroy();
<anchor xml:id="__map_8cs_source_1l01362"/>01362 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01363"/>01363 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__map_8cs_source_1l01364"/>01364 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01365"/>01365 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;card2.Die(element,&#32;<emphasis role="keyword">null</emphasis>,&#32;AttackSource.None);
<anchor xml:id="__map_8cs_source_1l01366"/>01366 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01367"/>01367 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01368"/>01368 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num++;
<anchor xml:id="__map_8cs_source_1l01369"/>01369 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01370"/>01370 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01371"/>01371 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01372"/>01372 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01373"/>01373 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01374"/>01374 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this._ValidateInstalled(pos.x,&#32;pos.z);
<anchor xml:id="__map_8cs_source_1l01375"/>01375 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01376"/>01376 
<anchor xml:id="__map_8cs_source_1l01377"/>01377 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F2E&#32;RID:&#32;12078&#32;RVA:&#32;0x00109A68&#32;File&#32;Offset:&#32;0x00107C68</emphasis>
<anchor xml:id="__map_8cs_source_1l01378"/>01378 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Burn(<emphasis role="keywordtype">int</emphasis>&#32;x,&#32;<emphasis role="keywordtype">int</emphasis>&#32;z,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;instant&#32;=&#32;<emphasis role="keyword">false</emphasis>)
<anchor xml:id="__map_8cs_source_1l01379"/>01379 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01380"/>01380 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_cell">Cell</link>&#32;cell&#32;=&#32;this.cells[x,&#32;z];
<anchor xml:id="__map_8cs_source_1l01381"/>01381 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_point">Point</link>&#32;sharedPoint&#32;=&#32;cell.GetSharedPoint();
<anchor xml:id="__map_8cs_source_1l01382"/>01382 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((instant&#32;||&#32;<link linkend="_class_e_class">EClass</link>.rnd(10)&#32;==&#32;0)&#32;&amp;&amp;&#32;cell.HasObj)
<anchor xml:id="__map_8cs_source_1l01383"/>01383 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01384"/>01384 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cell.sourceObj.tileType&#32;is&#32;<link linkend="_class_tile_type_tree">TileTypeTree</link>)
<anchor xml:id="__map_8cs_source_1l01385"/>01385 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01386"/>01386 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.SetObj(x,&#32;z,&#32;cell.matObj_fixed.id,&#32;59,&#32;0,&#32;<link linkend="_class_e_class">EClass</link>.rnd(4));
<anchor xml:id="__map_8cs_source_1l01387"/>01387 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01388"/>01388 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__map_8cs_source_1l01389"/>01389 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01390"/>01390 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.SetObj(x,&#32;z,&#32;0,&#32;1,&#32;0);
<anchor xml:id="__map_8cs_source_1l01391"/>01391 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_e_class">EClass</link>.rnd(2)&#32;==&#32;0)
<anchor xml:id="__map_8cs_source_1l01392"/>01392 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01393"/>01393 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_e_class">EClass</link>._zone.AddCard(<link linkend="_class_thing_gen">ThingGen</link>.Create((<link linkend="_class_e_class">EClass</link>.rnd(2)&#32;==&#32;0)&#32;?&#32;<emphasis role="stringliteral">&quot;ash&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;ash2&quot;</emphasis>,&#32;-1,&#32;-1),&#32;sharedPoint);
<anchor xml:id="__map_8cs_source_1l01394"/>01394 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01395"/>01395 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01396"/>01396 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01397"/>01397 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((instant&#32;||&#32;<link linkend="_class_e_class">EClass</link>.rnd(5)&#32;==&#32;0)&#32;&amp;&amp;&#32;cell._block&#32;!=&#32;0&#32;&amp;&amp;&#32;cell._block&#32;!=&#32;96)
<anchor xml:id="__map_8cs_source_1l01398"/>01398 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01399"/>01399 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_e_class">EClass</link>.rnd(10)&#32;==&#32;0&#32;||&#32;!cell.sourceBlock.tileType.IsWall)
<anchor xml:id="__map_8cs_source_1l01400"/>01400 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01401"/>01401 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cell._block&#32;=&#32;0;
<anchor xml:id="__map_8cs_source_1l01402"/>01402 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01403"/>01403 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__map_8cs_source_1l01404"/>01404 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01405"/>01405 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cell._block&#32;=&#32;96;
<anchor xml:id="__map_8cs_source_1l01406"/>01406 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01407"/>01407 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cell.room&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__map_8cs_source_1l01408"/>01408 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01409"/>01409 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cell.room.SetDirty();
<anchor xml:id="__map_8cs_source_1l01410"/>01410 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01411"/>01411 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.RefreshNeighborTiles(x,&#32;z);
<anchor xml:id="__map_8cs_source_1l01412"/>01412 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01413"/>01413 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(instant&#32;||&#32;<link linkend="_class_e_class">EClass</link>.rnd(10)&#32;==&#32;0)
<anchor xml:id="__map_8cs_source_1l01414"/>01414 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01415"/>01415 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_e_class">EClass</link>.rnd(4)&#32;!=&#32;0)
<anchor xml:id="__map_8cs_source_1l01416"/>01416 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01417"/>01417 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cell._floor&#32;=&#32;49;
<anchor xml:id="__map_8cs_source_1l01418"/>01418 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01419"/>01419 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cell._bridge&#32;!=&#32;0&#32;&amp;&amp;&#32;<link linkend="_class_e_class">EClass</link>.rnd(5)&#32;!=&#32;0)
<anchor xml:id="__map_8cs_source_1l01420"/>01420 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01421"/>01421 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cell._bridge&#32;=&#32;49;
<anchor xml:id="__map_8cs_source_1l01422"/>01422 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01423"/>01423 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01424"/>01424 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_card">Card</link>&#32;card&#32;<emphasis role="keywordflow">in</emphasis>&#32;sharedPoint.ListCards(<emphasis role="keyword">false</emphasis>))
<anchor xml:id="__map_8cs_source_1l01425"/>01425 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01426"/>01426 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(card.isThing)
<anchor xml:id="__map_8cs_source_1l01427"/>01427 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01428"/>01428 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(instant)
<anchor xml:id="__map_8cs_source_1l01429"/>01429 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01430"/>01430 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;card.Destroy();
<anchor xml:id="__map_8cs_source_1l01431"/>01431 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_e_class">EClass</link>._zone.AddCard(<link linkend="_class_thing_gen">ThingGen</link>.Create((<link linkend="_class_e_class">EClass</link>.rnd(2)&#32;==&#32;0)&#32;?&#32;<emphasis role="stringliteral">&quot;ash&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;ash2&quot;</emphasis>,&#32;-1,&#32;-1),&#32;sharedPoint);
<anchor xml:id="__map_8cs_source_1l01432"/>01432 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01433"/>01433 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__map_8cs_source_1l01434"/>01434 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01435"/>01435 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;card.DamageHP(30,&#32;910,&#32;100,&#32;AttackSource.None,&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__map_8cs_source_1l01436"/>01436 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01437"/>01437 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01438"/>01438 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01439"/>01439 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(instant)
<anchor xml:id="__map_8cs_source_1l01440"/>01440 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01441"/>01441 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cell.effect&#32;=&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__map_8cs_source_1l01442"/>01442 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01443"/>01443 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01444"/>01444 
<anchor xml:id="__map_8cs_source_1l01445"/>01445 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F2F&#32;RID:&#32;12079&#32;RVA:&#32;0x00109C38&#32;File&#32;Offset:&#32;0x00107E38</emphasis>
<anchor xml:id="__map_8cs_source_1l01446"/>01446 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;SetLiquid(<emphasis role="keywordtype">int</emphasis>&#32;x,&#32;<emphasis role="keywordtype">int</emphasis>&#32;z,&#32;<link linkend="_class_cell_effect">CellEffect</link>&#32;effect&#32;=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__map_8cs_source_1l01447"/>01447 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01448"/>01448 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_cell">Cell</link>&#32;cell&#32;=&#32;this.cells[x,&#32;z];
<anchor xml:id="__map_8cs_source_1l01449"/>01449 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cell.IsTopWaterAndNoSnow&#32;&amp;&amp;&#32;effect&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__map_8cs_source_1l01450"/>01450 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01451"/>01451 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__map_8cs_source_1l01452"/>01452 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01453"/>01453 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cell.effect&#32;=&#32;effect;
<anchor xml:id="__map_8cs_source_1l01454"/>01454 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01455"/>01455 
<anchor xml:id="__map_8cs_source_1l01456"/>01456 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F30&#32;RID:&#32;12080&#32;RVA:&#32;0x00109C68&#32;File&#32;Offset:&#32;0x00107E68</emphasis>
<anchor xml:id="__map_8cs_source_1l01457"/>01457 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;SetLiquid(<emphasis role="keywordtype">int</emphasis>&#32;x,&#32;<emphasis role="keywordtype">int</emphasis>&#32;z,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<emphasis role="keywordtype">id</emphasis>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;value&#32;=&#32;1)
<anchor xml:id="__map_8cs_source_1l01458"/>01458 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01459"/>01459 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_cell">Cell</link>&#32;cell&#32;=&#32;this.cells[x,&#32;z];
<anchor xml:id="__map_8cs_source_1l01460"/>01460 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cell.IsTopWaterAndNoSnow&#32;&amp;&amp;&#32;value&#32;!=&#32;0)
<anchor xml:id="__map_8cs_source_1l01461"/>01461 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01462"/>01462 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__map_8cs_source_1l01463"/>01463 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01464"/>01464 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(value&#32;&gt;&#32;3)
<anchor xml:id="__map_8cs_source_1l01465"/>01465 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01466"/>01466 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value&#32;=&#32;3;
<anchor xml:id="__map_8cs_source_1l01467"/>01467 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01468"/>01468 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(value&#32;&lt;=&#32;0)
<anchor xml:id="__map_8cs_source_1l01469"/>01469 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01470"/>01470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cell.effect&#32;=&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__map_8cs_source_1l01471"/>01471 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__map_8cs_source_1l01472"/>01472 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01473"/>01473 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cell.effect&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_cell_effect">CellEffect</link>
<anchor xml:id="__map_8cs_source_1l01474"/>01474 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01475"/>01475 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">id</emphasis>&#32;=&#32;id,
<anchor xml:id="__map_8cs_source_1l01476"/>01476 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;amount&#32;=&#32;value
<anchor xml:id="__map_8cs_source_1l01477"/>01477 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__map_8cs_source_1l01478"/>01478 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01479"/>01479 
<anchor xml:id="__map_8cs_source_1l01480"/>01480 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F31&#32;RID:&#32;12081&#32;RVA:&#32;0x00109CBF&#32;File&#32;Offset:&#32;0x00107EBF</emphasis>
<anchor xml:id="__map_8cs_source_1l01481"/>01481 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;SetEffect(<emphasis role="keywordtype">int</emphasis>&#32;x,&#32;<emphasis role="keywordtype">int</emphasis>&#32;z,&#32;<link linkend="_class_cell_effect">CellEffect</link>&#32;effect&#32;=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__map_8cs_source_1l01482"/>01482 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01483"/>01483 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.cells[x,&#32;z].effect&#32;=&#32;effect;
<anchor xml:id="__map_8cs_source_1l01484"/>01484 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01485"/>01485 
<anchor xml:id="__map_8cs_source_1l01486"/>01486 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F32&#32;RID:&#32;12082&#32;RVA:&#32;0x00109CD4&#32;File&#32;Offset:&#32;0x00107ED4</emphasis>
<anchor xml:id="__map_8cs_source_1l01487"/>01487 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;ModLiquid(<emphasis role="keywordtype">int</emphasis>&#32;x,&#32;<emphasis role="keywordtype">int</emphasis>&#32;z,&#32;<emphasis role="keywordtype">int</emphasis>&#32;amount)
<anchor xml:id="__map_8cs_source_1l01488"/>01488 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01489"/>01489 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_cell">Cell</link>&#32;cell&#32;=&#32;this.cells[x,&#32;z];
<anchor xml:id="__map_8cs_source_1l01490"/>01490 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cell.IsTopWaterAndNoSnow&#32;||&#32;cell.effect&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__map_8cs_source_1l01491"/>01491 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01492"/>01492 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__map_8cs_source_1l01493"/>01493 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01494"/>01494 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cell.effect.amount&#32;+=&#32;amount;
<anchor xml:id="__map_8cs_source_1l01495"/>01495 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cell.effect.amount&#32;&lt;=&#32;0)
<anchor xml:id="__map_8cs_source_1l01496"/>01496 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01497"/>01497 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cell.effect&#32;=&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__map_8cs_source_1l01498"/>01498 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01499"/>01499 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01500"/>01500 
<anchor xml:id="__map_8cs_source_1l01501"/>01501 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F33&#32;RID:&#32;12083&#32;RVA:&#32;0x00109D28&#32;File&#32;Offset:&#32;0x00107F28</emphasis>
<anchor xml:id="__map_8cs_source_1l01502"/>01502 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;ClearRainAndDecal()
<anchor xml:id="__map_8cs_source_1l01503"/>01503 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01504"/>01504 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.ForeachCell(delegate(<link linkend="_class_cell">Cell</link>&#32;c)
<anchor xml:id="__map_8cs_source_1l01505"/>01505 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01506"/>01506 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;c.effect&#32;=&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__map_8cs_source_1l01507"/>01507 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;c.decal&#32;=&#32;0;
<anchor xml:id="__map_8cs_source_1l01508"/>01508 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__map_8cs_source_1l01509"/>01509 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01510"/>01510 
<anchor xml:id="__map_8cs_source_1l01511"/>01511 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F34&#32;RID:&#32;12084&#32;RVA:&#32;0x00109D4F&#32;File&#32;Offset:&#32;0x00107F4F</emphasis>
<anchor xml:id="__map_8cs_source_1l01512"/>01512 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;SetObj(<emphasis role="keywordtype">int</emphasis>&#32;x,&#32;<emphasis role="keywordtype">int</emphasis>&#32;z,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<emphasis role="keywordtype">id</emphasis>&#32;=&#32;0,&#32;<emphasis role="keywordtype">int</emphasis>&#32;value&#32;=&#32;1,&#32;<emphasis role="keywordtype">int</emphasis>&#32;dir&#32;=&#32;0)
<anchor xml:id="__map_8cs_source_1l01513"/>01513 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01514"/>01514 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.SetObj(x,&#32;z,&#32;(<emphasis role="keywordtype">int</emphasis>)((<emphasis role="keywordtype">byte</emphasis>)<link linkend="_class_e_class">EClass</link>.sources.objs.rows[<emphasis role="keywordtype">id</emphasis>].DefaultMaterial.id),&#32;<emphasis role="keywordtype">id</emphasis>,&#32;value,&#32;dir);
<anchor xml:id="__map_8cs_source_1l01515"/>01515 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01516"/>01516 
<anchor xml:id="__map_8cs_source_1l01517"/>01517 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F35&#32;RID:&#32;12085&#32;RVA:&#32;0x00109D80&#32;File&#32;Offset:&#32;0x00107F80</emphasis>
<anchor xml:id="__map_8cs_source_1l01518"/>01518 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;SetObj(<emphasis role="keywordtype">int</emphasis>&#32;x,&#32;<emphasis role="keywordtype">int</emphasis>&#32;z,&#32;<emphasis role="keywordtype">int</emphasis>&#32;idMat,&#32;<emphasis role="keywordtype">int</emphasis>&#32;idObj,&#32;<emphasis role="keywordtype">int</emphasis>&#32;value,&#32;<emphasis role="keywordtype">int</emphasis>&#32;dir)
<anchor xml:id="__map_8cs_source_1l01519"/>01519 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01520"/>01520 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_cell">Cell</link>&#32;cell&#32;=&#32;this.cells[x,&#32;z];
<anchor xml:id="__map_8cs_source_1l01521"/>01521 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cell.obj&#32;=&#32;(byte)idObj;
<anchor xml:id="__map_8cs_source_1l01522"/>01522 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cell.objVal&#32;=&#32;(byte)value;
<anchor xml:id="__map_8cs_source_1l01523"/>01523 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cell.objMat&#32;=&#32;(byte)idMat;
<anchor xml:id="__map_8cs_source_1l01524"/>01524 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cell.objDir&#32;=&#32;dir;
<anchor xml:id="__map_8cs_source_1l01525"/>01525 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cell.isHarvested&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__map_8cs_source_1l01526"/>01526 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cell.isObjDyed&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__map_8cs_source_1l01527"/>01527 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_source_obj_1_1_row">SourceObj.Row</link>&#32;sourceObj&#32;=&#32;cell.sourceObj;
<anchor xml:id="__map_8cs_source_1l01528"/>01528 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!sourceObj.matCategory.IsEmpty())
<anchor xml:id="__map_8cs_source_1l01529"/>01529 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01530"/>01530 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;num&#32;=&#32;<link linkend="_class_e_class">EClass</link>._zone.DangerLv;
<anchor xml:id="__map_8cs_source_1l01531"/>01531 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sourceObj.tag.Contains(<emphasis role="stringliteral">&quot;spot&quot;</emphasis>))
<anchor xml:id="__map_8cs_source_1l01532"/>01532 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01533"/>01533 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num&#32;+=&#32;<link linkend="_class_e_class">EClass</link>.pc.Evalue(1656)&#32;*&#32;5;
<anchor xml:id="__map_8cs_source_1l01534"/>01534 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01535"/>01535 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cell.objMat&#32;=&#32;(byte)<link linkend="_class_m_a_t_e_r_i_a_l">MATERIAL</link>.GetRandomMaterialFromCategory(num,&#32;sourceObj.matCategory.Split(<emphasis role="charliteral">&apos;,&apos;</emphasis>,&#32;StringSplitOptions.None),&#32;cell.matObj).id;
<anchor xml:id="__map_8cs_source_1l01536"/>01536 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01537"/>01537 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.backerObjs.ContainsKey(cell.index))
<anchor xml:id="__map_8cs_source_1l01538"/>01538 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01539"/>01539 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.backerObjs.Remove(cell.index);
<anchor xml:id="__map_8cs_source_1l01540"/>01540 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01541"/>01541 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.plants.ContainsKey(cell.index))
<anchor xml:id="__map_8cs_source_1l01542"/>01542 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01543"/>01543 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.plants.Remove(cell.index);
<anchor xml:id="__map_8cs_source_1l01544"/>01544 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01545"/>01545 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_critter">Critter</link>.RebuildCritter(cell);
<anchor xml:id="__map_8cs_source_1l01546"/>01546 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.RefreshNeighborTiles(x,&#32;z);
<anchor xml:id="__map_8cs_source_1l01547"/>01547 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01548"/>01548 
<anchor xml:id="__map_8cs_source_1l01549"/>01549 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F36&#32;RID:&#32;12086&#32;RVA:&#32;0x00109E90&#32;File&#32;Offset:&#32;0x00108090</emphasis>
<anchor xml:id="__map_8cs_source_1l01550"/>01550 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;AddBackerTree()
<anchor xml:id="__map_8cs_source_1l01551"/>01551 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01552"/>01552 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_source_backer_1_1_row">SourceBacker.Row</link>&#32;item&#32;=&#32;<link linkend="_class_e_class">EClass</link>.sources.backers.listTree.NextItem(ref&#32;<link linkend="_class_backer_content">BackerContent</link>.indexTree);
<anchor xml:id="__map_8cs_source_1l01553"/>01553 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;num&#32;=&#32;1;
<anchor xml:id="__map_8cs_source_1l01554"/>01554 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_e_class">EClass</link>._map.bounds.ForeachCell(delegate(<link linkend="_class_cell">Cell</link>&#32;c)
<anchor xml:id="__map_8cs_source_1l01555"/>01555 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01556"/>01556 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;num;
<anchor xml:id="__map_8cs_source_1l01557"/>01557 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(num&#32;&lt;=&#32;0&#32;||&#32;c.growth&#32;==&#32;<emphasis role="keyword">null</emphasis>&#32;||&#32;!c.growth.IsTree&#32;||&#32;!c.growth.IsMature&#32;||&#32;(<link linkend="_class_e_class">EClass</link>.player.doneBackers.Contains(item.id)&#32;&amp;&amp;&#32;!<link linkend="_class_e_class">EClass</link>.core.config.test.ignoreBackerDestoryFlag))
<anchor xml:id="__map_8cs_source_1l01558"/>01558 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01559"/>01559 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__map_8cs_source_1l01560"/>01560 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01561"/>01561 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(c.sourceObj.alias&#32;==&#32;item.tree&#32;||&#32;item.tree&#32;==&#32;<emphasis role="stringliteral">&quot;random&quot;</emphasis>)
<anchor xml:id="__map_8cs_source_1l01562"/>01562 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01563"/>01563 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.backerObjs[c.index]&#32;=&#32;item.id;
<anchor xml:id="__map_8cs_source_1l01564"/>01564 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Debug.Log(<emphasis role="keywordtype">string</emphasis>.Concat(<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>[]
<anchor xml:id="__map_8cs_source_1l01565"/>01565 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01566"/>01566 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;c.index.ToString(),
<anchor xml:id="__map_8cs_source_1l01567"/>01567 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;/&quot;</emphasis>,
<anchor xml:id="__map_8cs_source_1l01568"/>01568 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;c.x.ToString(),
<anchor xml:id="__map_8cs_source_1l01569"/>01569 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;/&quot;</emphasis>,
<anchor xml:id="__map_8cs_source_1l01570"/>01570 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;c.z.ToString(),
<anchor xml:id="__map_8cs_source_1l01571"/>01571 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;/&quot;</emphasis>,
<anchor xml:id="__map_8cs_source_1l01572"/>01572 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;item.id.ToString(),
<anchor xml:id="__map_8cs_source_1l01573"/>01573 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;/&quot;</emphasis>,
<anchor xml:id="__map_8cs_source_1l01574"/>01574 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;item.Name,
<anchor xml:id="__map_8cs_source_1l01575"/>01575 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;/&quot;</emphasis>,
<anchor xml:id="__map_8cs_source_1l01576"/>01576 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;item.tree
<anchor xml:id="__map_8cs_source_1l01577"/>01577 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}));
<anchor xml:id="__map_8cs_source_1l01578"/>01578 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num&#32;=&#32;num;
<anchor xml:id="__map_8cs_source_1l01579"/>01579 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num--;
<anchor xml:id="__map_8cs_source_1l01580"/>01580 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;item&#32;=&#32;<link linkend="_class_e_class">EClass</link>.sources.backers.listTree.NextItem(ref&#32;<link linkend="_class_backer_content">BackerContent</link>.indexTree);
<anchor xml:id="__map_8cs_source_1l01581"/>01581 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01582"/>01582 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__map_8cs_source_1l01583"/>01583 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01584"/>01584 
<anchor xml:id="__map_8cs_source_1l01585"/>01585 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F37&#32;RID:&#32;12087&#32;RVA:&#32;0x00109EEB&#32;File&#32;Offset:&#32;0x001080EB</emphasis>
<anchor xml:id="__map_8cs_source_1l01586"/>01586 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_source_backer_1_1_row">SourceBacker.Row</link>&#32;GetBackerObj(<link linkend="_class_point">Point</link>&#32;p)
<anchor xml:id="__map_8cs_source_1l01587"/>01587 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01588"/>01588 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!this.backerObjs.ContainsKey(p.index))
<anchor xml:id="__map_8cs_source_1l01589"/>01589 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01590"/>01590 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__map_8cs_source_1l01591"/>01591 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01592"/>01592 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_e_class">EClass</link>.sources.backers.map.TryGetValue(this.backerObjs[p.index],&#32;<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__map_8cs_source_1l01593"/>01593 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01594"/>01594 
<anchor xml:id="__map_8cs_source_1l01595"/>01595 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F38&#32;RID:&#32;12088&#32;RVA:&#32;0x00109F28&#32;File&#32;Offset:&#32;0x00108128</emphasis>
<anchor xml:id="__map_8cs_source_1l01596"/>01596 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;ApplyBackerObj(<link linkend="_class_point">Point</link>&#32;p,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<emphasis role="keywordtype">id</emphasis>&#32;=&#32;-1)
<anchor xml:id="__map_8cs_source_1l01597"/>01597 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01598"/>01598 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!p.HasObj)
<anchor xml:id="__map_8cs_source_1l01599"/>01599 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01600"/>01600 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__map_8cs_source_1l01601"/>01601 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01602"/>01602 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;flag&#32;=&#32;p.sourceObj.id&#32;==&#32;82;
<anchor xml:id="__map_8cs_source_1l01603"/>01603 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_source_backer_1_1_row">SourceBacker.Row</link>&#32;row&#32;=&#32;(<emphasis role="keywordtype">id</emphasis>&#32;!=&#32;-1)&#32;?&#32;<link linkend="_class_e_class">EClass</link>.sources.backers.map.TryGetValue(<emphasis role="keywordtype">id</emphasis>,&#32;<emphasis role="keyword">null</emphasis>)&#32;:&#32;(flag&#32;?&#32;<link linkend="_class_e_class">EClass</link>.sources.backers.listRemain.NextItem(ref&#32;<link linkend="_class_backer_content">BackerContent</link>.indexRemain)&#32;:&#32;<link linkend="_class_e_class">EClass</link>.sources.backers.listTree.NextItem(ref&#32;<link linkend="_class_backer_content">BackerContent</link>.indexTree));
<anchor xml:id="__map_8cs_source_1l01604"/>01604 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(row&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__map_8cs_source_1l01605"/>01605 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01606"/>01606 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_e_class">EClass</link>.player.doneBackers.Contains(row.id)&#32;||&#32;<link linkend="_class_e_class">EClass</link>.core.config.test.ignoreBackerDestoryFlag)
<anchor xml:id="__map_8cs_source_1l01607"/>01607 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01608"/>01608 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.backerObjs[p.index]&#32;=&#32;row.id;
<anchor xml:id="__map_8cs_source_1l01609"/>01609 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(flag)
<anchor xml:id="__map_8cs_source_1l01610"/>01610 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01611"/>01611 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p.cell.objDir&#32;=&#32;row.skin;
<anchor xml:id="__map_8cs_source_1l01612"/>01612 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__map_8cs_source_1l01613"/>01613 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01614"/>01614 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01615"/>01615 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__map_8cs_source_1l01616"/>01616 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01617"/>01617 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.backerObjs.Remove(p.index);
<anchor xml:id="__map_8cs_source_1l01618"/>01618 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01619"/>01619 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01620"/>01620 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01621"/>01621 
<anchor xml:id="__map_8cs_source_1l01622"/>01622 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F39&#32;RID:&#32;12089&#32;RVA:&#32;0x0010A010&#32;File&#32;Offset:&#32;0x00108210</emphasis>
<anchor xml:id="__map_8cs_source_1l01623"/>01623 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;DropBlockComponent(<link linkend="_class_point">Point</link>&#32;point,&#32;<link linkend="_class_tile_row">TileRow</link>&#32;r,&#32;<link linkend="_class_source_material">SourceMaterial</link>.<link linkend="_class_source_material_1_1_row">Row</link>&#32;mat,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;recoverBlock,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isPlatform&#32;=&#32;<emphasis role="keyword">false</emphasis>,&#32;<link linkend="_class_chara">Chara</link>&#32;c&#32;=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__map_8cs_source_1l01624"/>01624 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01625"/>01625 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(r.components.Length&#32;==&#32;0)
<anchor xml:id="__map_8cs_source_1l01626"/>01626 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01627"/>01627 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__map_8cs_source_1l01628"/>01628 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01629"/>01629 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_recipe_manager">RecipeManager</link>.BuildList();
<anchor xml:id="__map_8cs_source_1l01630"/>01630 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_thing">Thing</link>&#32;thing;
<anchor xml:id="__map_8cs_source_1l01631"/>01631 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(recoverBlock)
<anchor xml:id="__map_8cs_source_1l01632"/>01632 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01633"/>01633 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(r&#32;is&#32;<link linkend="_class_source_floor">SourceFloor</link>.<link linkend="_class_source_floor_1_1_row">Row</link>)
<anchor xml:id="__map_8cs_source_1l01634"/>01634 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01635"/>01635 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;thing&#32;=&#32;<link linkend="_class_thing_gen">ThingGen</link>.CreateFloor(r.id,&#32;mat.id,&#32;isPlatform);
<anchor xml:id="__map_8cs_source_1l01636"/>01636 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01637"/>01637 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__map_8cs_source_1l01638"/>01638 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01639"/>01639 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;thing&#32;=&#32;<link linkend="_class_thing_gen">ThingGen</link>.CreateBlock(r.id,&#32;mat.id);
<anchor xml:id="__map_8cs_source_1l01640"/>01640 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01641"/>01641 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01642"/>01642 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__map_8cs_source_1l01643"/>01643 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01644"/>01644 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_recipe_source">RecipeSource</link>&#32;recipeSource&#32;=&#32;<link linkend="_class_recipe_manager">RecipeManager</link>.Get(r.RecipeID&#32;+&#32;(isPlatform&#32;?&#32;<emphasis role="stringliteral">&quot;-b&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>));
<anchor xml:id="__map_8cs_source_1l01645"/>01645 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(recipeSource&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__map_8cs_source_1l01646"/>01646 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01647"/>01647 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__map_8cs_source_1l01648"/>01648 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01649"/>01649 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;idingredient&#32;=&#32;recipeSource.GetIDIngredient();
<anchor xml:id="__map_8cs_source_1l01650"/>01650 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(idingredient&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__map_8cs_source_1l01651"/>01651 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01652"/>01652 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__map_8cs_source_1l01653"/>01653 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01654"/>01654 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;thing&#32;=&#32;<link linkend="_class_thing_gen">ThingGen</link>.Create(idingredient,&#32;-1,&#32;-1);
<anchor xml:id="__map_8cs_source_1l01655"/>01655 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;thing.ChangeMaterial(mat.alias);
<anchor xml:id="__map_8cs_source_1l01656"/>01656 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01657"/>01657 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_e_class">EClass</link>.scene.actionMode.IsBuildMode&#32;&amp;&amp;&#32;<link linkend="_class_e_class">EClass</link>.debug.godBuild)
<anchor xml:id="__map_8cs_source_1l01658"/>01658 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01659"/>01659 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.PutAway(thing);
<anchor xml:id="__map_8cs_source_1l01660"/>01660 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__map_8cs_source_1l01661"/>01661 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01662"/>01662 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.TrySmoothPick(point,&#32;thing,&#32;c);
<anchor xml:id="__map_8cs_source_1l01663"/>01663 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01664"/>01664 
<anchor xml:id="__map_8cs_source_1l01665"/>01665 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F3A&#32;RID:&#32;12090&#32;RVA:&#32;0x0010A0DC&#32;File&#32;Offset:&#32;0x001082DC</emphasis>
<anchor xml:id="__map_8cs_source_1l01666"/>01666 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;MineBlock(<link linkend="_class_point">Point</link>&#32;point,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;recoverBlock&#32;=&#32;<emphasis role="keyword">false</emphasis>,&#32;<link linkend="_class_chara">Chara</link>&#32;c&#32;=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__map_8cs_source_1l01667"/>01667 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01668"/>01668 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;flag&#32;=&#32;<link linkend="_class_action_mode">ActionMode</link>.Mine.IsRoofEditMode(<emphasis role="keyword">null</emphasis>)&#32;&amp;&amp;&#32;point.cell._roofBlock&#32;&gt;&#32;0;
<anchor xml:id="__map_8cs_source_1l01669"/>01669 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!point.IsValid&#32;||&#32;(!flag&#32;&amp;&amp;&#32;!point.cell.HasBlock))
<anchor xml:id="__map_8cs_source_1l01670"/>01670 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01671"/>01671 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__map_8cs_source_1l01672"/>01672 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01673"/>01673 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_source_material_1_1_row">SourceMaterial.Row</link>&#32;row&#32;=&#32;flag&#32;?&#32;point.matRoofBlock&#32;:&#32;point.matBlock;
<anchor xml:id="__map_8cs_source_1l01674"/>01674 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">byte</emphasis>&#32;b&#32;=&#32;flag&#32;?&#32;point.cell._roofBlock&#32;:&#32;point.cell._block;
<anchor xml:id="__map_8cs_source_1l01675"/>01675 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_source_block_1_1_row">SourceBlock.Row</link>&#32;row2&#32;=&#32;<link linkend="_class_e_class">EClass</link>.sources.blocks.rows[(int)b];
<anchor xml:id="__map_8cs_source_1l01676"/>01676 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_effect">Effect</link>.Get(<emphasis role="stringliteral">&quot;smoke&quot;</emphasis>).Play(point,&#32;0f,&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__map_8cs_source_1l01677"/>01677 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_effect">Effect</link>.Get(<emphasis role="stringliteral">&quot;mine&quot;</emphasis>).Play(point,&#32;0f,&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keyword">null</emphasis>).SetParticleColor(row.GetColor()).Emit(10&#32;+&#32;<link linkend="_class_e_class">EClass</link>.rnd(10));
<anchor xml:id="__map_8cs_source_1l01678"/>01678 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;point.PlaySound(row.GetSoundDead(row2),&#32;<emphasis role="keyword">true</emphasis>,&#32;1f,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__map_8cs_source_1l01679"/>01679 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;row.AddBlood(point,&#32;8);
<anchor xml:id="__map_8cs_source_1l01680"/>01680 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;flag2&#32;=&#32;c&#32;==&#32;<emphasis role="keyword">null</emphasis>&#32;||&#32;c.IsAgent&#32;||&#32;c.IsPCFactionOrMinion;
<anchor xml:id="__map_8cs_source_1l01681"/>01681 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(flag)
<anchor xml:id="__map_8cs_source_1l01682"/>01682 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01683"/>01683 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;point.cell._roofBlock&#32;=&#32;0;
<anchor xml:id="__map_8cs_source_1l01684"/>01684 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.RefreshSingleTile(point.x,&#32;point.z);
<anchor xml:id="__map_8cs_source_1l01685"/>01685 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01686"/>01686 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__map_8cs_source_1l01687"/>01687 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01688"/>01688 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(point.cell.HasFullBlock)
<anchor xml:id="__map_8cs_source_1l01689"/>01689 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01690"/>01690 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.RemoveLonelyRamps(point.cell);
<anchor xml:id="__map_8cs_source_1l01691"/>01691 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01692"/>01692 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;point.SetBlock(0,&#32;0);
<anchor xml:id="__map_8cs_source_1l01693"/>01693 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(flag2&#32;&amp;&amp;&#32;point.sourceObj.tileType.IsBlockMount)
<anchor xml:id="__map_8cs_source_1l01694"/>01694 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01695"/>01695 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.MineObj(point,&#32;<emphasis role="keyword">null</emphasis>,&#32;c);
<anchor xml:id="__map_8cs_source_1l01696"/>01696 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01697"/>01697 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01698"/>01698 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(flag2)
<anchor xml:id="__map_8cs_source_1l01699"/>01699 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01700"/>01700 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.DropBlockComponent(point,&#32;row2,&#32;row,&#32;recoverBlock,&#32;<emphasis role="keyword">false</emphasis>,&#32;c);
<anchor xml:id="__map_8cs_source_1l01701"/>01701 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01702"/>01702 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.RefreshShadow(point.x,&#32;point.z);
<anchor xml:id="__map_8cs_source_1l01703"/>01703 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.RefreshShadow(point.x,&#32;point.z&#32;-&#32;1);
<anchor xml:id="__map_8cs_source_1l01704"/>01704 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.ValidateInstalled(point);
<anchor xml:id="__map_8cs_source_1l01705"/>01705 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.RefreshFOV(point.x,&#32;point.z,&#32;6,&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__map_8cs_source_1l01706"/>01706 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(flag2&#32;&amp;&amp;&#32;!point.cell.isModified&#32;&amp;&amp;&#32;!flag)
<anchor xml:id="__map_8cs_source_1l01707"/>01707 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01708"/>01708 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(b&#32;==&#32;17&#32;||&#32;<link linkend="_class_e_class">EClass</link>.rnd(100)&#32;==&#32;0)
<anchor xml:id="__map_8cs_source_1l01709"/>01709 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01710"/>01710 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.zone.AddCard(<link linkend="_class_thing_gen">ThingGen</link>.Create(<emphasis role="stringliteral">&quot;money2&quot;</emphasis>,&#32;-1,&#32;-1),&#32;point);
<anchor xml:id="__map_8cs_source_1l01711"/>01711 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01712"/>01712 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_e_class">EClass</link>._zone.DangerLv&#32;&gt;=&#32;10&#32;&amp;&amp;&#32;<link linkend="_class_e_class">EClass</link>.rnd(200)&#32;==&#32;0)
<anchor xml:id="__map_8cs_source_1l01713"/>01713 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01714"/>01714 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.zone.AddCard(<link linkend="_class_thing_gen">ThingGen</link>.Create(<emphasis role="stringliteral">&quot;crystal_earth&quot;</emphasis>,&#32;-1,&#32;-1),&#32;point);
<anchor xml:id="__map_8cs_source_1l01715"/>01715 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01716"/>01716 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_e_class">EClass</link>._zone.DangerLv&#32;&gt;=&#32;25&#32;&amp;&amp;&#32;<link linkend="_class_e_class">EClass</link>.rnd(200)&#32;==&#32;0)
<anchor xml:id="__map_8cs_source_1l01717"/>01717 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01718"/>01718 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.zone.AddCard(<link linkend="_class_thing_gen">ThingGen</link>.Create(<emphasis role="stringliteral">&quot;crystal_sun&quot;</emphasis>,&#32;-1,&#32;-1),&#32;point);
<anchor xml:id="__map_8cs_source_1l01719"/>01719 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01720"/>01720 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_e_class">EClass</link>._zone.DangerLv&#32;&gt;=&#32;40&#32;&amp;&amp;&#32;<link linkend="_class_e_class">EClass</link>.rnd(200)&#32;==&#32;0)
<anchor xml:id="__map_8cs_source_1l01721"/>01721 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01722"/>01722 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.zone.AddCard(<link linkend="_class_thing_gen">ThingGen</link>.Create(<emphasis role="stringliteral">&quot;crystal_mana&quot;</emphasis>,&#32;-1,&#32;-1),&#32;point);
<anchor xml:id="__map_8cs_source_1l01723"/>01723 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01724"/>01724 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;point.cell.isModified&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__map_8cs_source_1l01725"/>01725 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01726"/>01726 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01727"/>01727 
<anchor xml:id="__map_8cs_source_1l01728"/>01728 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F3B&#32;RID:&#32;12091&#32;RVA:&#32;0x0010A380&#32;File&#32;Offset:&#32;0x00108580</emphasis>
<anchor xml:id="__map_8cs_source_1l01729"/>01729 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;MineRamp(<link linkend="_class_point">Point</link>&#32;point,&#32;<emphasis role="keywordtype">int</emphasis>&#32;ramp,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;recoverBlock&#32;=&#32;<emphasis role="keyword">false</emphasis>)
<anchor xml:id="__map_8cs_source_1l01730"/>01730 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01731"/>01731 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!point.IsValid&#32;||&#32;!point.cell.HasFullBlock)
<anchor xml:id="__map_8cs_source_1l01732"/>01732 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01733"/>01733 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__map_8cs_source_1l01734"/>01734 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01735"/>01735 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_source_material_1_1_row">SourceMaterial.Row</link>&#32;matBlock&#32;=&#32;point.matBlock;
<anchor xml:id="__map_8cs_source_1l01736"/>01736 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">byte</emphasis>&#32;block&#32;=&#32;point.cell._block;
<anchor xml:id="__map_8cs_source_1l01737"/>01737 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_effect">Effect</link>.Get(<emphasis role="stringliteral">&quot;smoke&quot;</emphasis>).Play(point,&#32;0f,&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__map_8cs_source_1l01738"/>01738 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_effect">Effect</link>.Get(<emphasis role="stringliteral">&quot;mine&quot;</emphasis>).Play(point,&#32;0f,&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keyword">null</emphasis>).SetParticleColor(point.matBlock.GetColor()).Emit(10&#32;+&#32;<link linkend="_class_e_class">EClass</link>.rnd(10));
<anchor xml:id="__map_8cs_source_1l01739"/>01739 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.MineObj(point,&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__map_8cs_source_1l01740"/>01740 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;rampDir&#32;=&#32;<link linkend="_class_e_class">EClass</link>._map.GetRampDir(point.x,&#32;point.z,&#32;<link linkend="_class_e_class">EClass</link>.sources.blocks.rows[ramp].tileType);
<anchor xml:id="__map_8cs_source_1l01741"/>01741 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.RemoveLonelyRamps(point.cell);
<anchor xml:id="__map_8cs_source_1l01742"/>01742 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.SetBlock(point.x,&#32;point.z,&#32;(<emphasis role="keywordtype">int</emphasis>)point.cell._blockMat,&#32;ramp,&#32;rampDir);
<anchor xml:id="__map_8cs_source_1l01743"/>01743 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.DropBlockComponent(point,&#32;<link linkend="_class_e_class">EClass</link>.sources.blocks.rows[(<emphasis role="keywordtype">int</emphasis>)block],&#32;matBlock,&#32;recoverBlock,&#32;<emphasis role="keyword">false</emphasis>,&#32;<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__map_8cs_source_1l01744"/>01744 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01745"/>01745 
<anchor xml:id="__map_8cs_source_1l01746"/>01746 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F3C&#32;RID:&#32;12092&#32;RVA:&#32;0x0010A48C&#32;File&#32;Offset:&#32;0x0010868C</emphasis>
<anchor xml:id="__map_8cs_source_1l01747"/>01747 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;MineFloor(<link linkend="_class_point">Point</link>&#32;point,&#32;<link linkend="_class_chara">Chara</link>&#32;c&#32;=&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;recoverBlock&#32;=&#32;<emphasis role="keyword">false</emphasis>,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;removePlatform&#32;=&#32;<emphasis role="keyword">true</emphasis>)
<anchor xml:id="__map_8cs_source_1l01748"/>01748 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01749"/>01749 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!point.IsValid&#32;||&#32;(!point.HasFloor&#32;&amp;&amp;&#32;!point.HasBridge))
<anchor xml:id="__map_8cs_source_1l01750"/>01750 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01751"/>01751 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__map_8cs_source_1l01752"/>01752 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01753"/>01753 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_source_material_1_1_row">SourceMaterial.Row</link>&#32;row&#32;=&#32;point.cell.HasBridge&#32;?&#32;point.matBridge&#32;:&#32;point.matFloor;
<anchor xml:id="__map_8cs_source_1l01754"/>01754 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_source_floor_1_1_row">SourceFloor.Row</link>&#32;c2&#32;=&#32;point.cell.HasBridge&#32;?&#32;point.sourceBridge&#32;:&#32;point.sourceFloor;
<anchor xml:id="__map_8cs_source_1l01755"/>01755 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_effect">Effect</link>.Get(<emphasis role="stringliteral">&quot;mine&quot;</emphasis>).Play(point,&#32;0f,&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keyword">null</emphasis>).SetParticleColor(row.GetColor()).Emit(10&#32;+&#32;<link linkend="_class_e_class">EClass</link>.rnd(10));
<anchor xml:id="__map_8cs_source_1l01756"/>01756 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;point.PlaySound(row.GetSoundDead(c2),&#32;<emphasis role="keyword">true</emphasis>,&#32;1f,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__map_8cs_source_1l01757"/>01757 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.MineObj(point,&#32;<emphasis role="keyword">null</emphasis>,&#32;c);
<anchor xml:id="__map_8cs_source_1l01758"/>01758 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(point.cell.HasBridge&#32;&amp;&amp;&#32;removePlatform)
<anchor xml:id="__map_8cs_source_1l01759"/>01759 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01760"/>01760 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.DropBlockComponent(<link linkend="_class_e_class">EClass</link>.pc.pos,&#32;point.sourceBridge,&#32;point.matBridge,&#32;recoverBlock,&#32;<emphasis role="keyword">true</emphasis>,&#32;c);
<anchor xml:id="__map_8cs_source_1l01761"/>01761 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_e_class">EClass</link>._map.SetBridge(point.x,&#32;point.z,&#32;0,&#32;0,&#32;0,&#32;0);
<anchor xml:id="__map_8cs_source_1l01762"/>01762 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(point.IsSky)
<anchor xml:id="__map_8cs_source_1l01763"/>01763 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01764"/>01764 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_e_class">EClass</link>.pc.Kick(point,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__map_8cs_source_1l01765"/>01765 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01766"/>01766 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__map_8cs_source_1l01767"/>01767 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01768"/>01768 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_e_class">EClass</link>._zone.IsSkyLevel)
<anchor xml:id="__map_8cs_source_1l01769"/>01769 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01770"/>01770 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.DropBlockComponent(<link linkend="_class_e_class">EClass</link>.pc.pos,&#32;point.sourceFloor,&#32;row,&#32;recoverBlock,&#32;<emphasis role="keyword">false</emphasis>,&#32;c);
<anchor xml:id="__map_8cs_source_1l01771"/>01771 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.SetFloor(point.x,&#32;point.z,&#32;0,&#32;90);
<anchor xml:id="__map_8cs_source_1l01772"/>01772 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(point.IsSky)
<anchor xml:id="__map_8cs_source_1l01773"/>01773 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01774"/>01774 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_e_class">EClass</link>.pc.Kick(point,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__map_8cs_source_1l01775"/>01775 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01776"/>01776 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__map_8cs_source_1l01777"/>01777 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01778"/>01778 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.zone.IsRegion&#32;||&#32;point.cell._floor&#32;==&#32;40)
<anchor xml:id="__map_8cs_source_1l01779"/>01779 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01780"/>01780 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_thing">Thing</link>&#32;thing&#32;=&#32;<link linkend="_class_thing_gen">ThingGen</link>.CreateRawMaterial(row);
<anchor xml:id="__map_8cs_source_1l01781"/>01781 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;thing.ChangeMaterial(row.alias);
<anchor xml:id="__map_8cs_source_1l01782"/>01782 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.TrySmoothPick(point,&#32;thing,&#32;c);
<anchor xml:id="__map_8cs_source_1l01783"/>01783 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01784"/>01784 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__map_8cs_source_1l01785"/>01785 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01786"/>01786 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.DropBlockComponent(point,&#32;point.sourceFloor,&#32;row,&#32;recoverBlock,&#32;<emphasis role="keyword">false</emphasis>,&#32;c);
<anchor xml:id="__map_8cs_source_1l01787"/>01787 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01788"/>01788 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_e_class">EClass</link>._zone.IsRegion&#32;||&#32;point.sourceFloor.components[0].Contains(<emphasis role="stringliteral">&quot;chunk@soil&quot;</emphasis>))
<anchor xml:id="__map_8cs_source_1l01789"/>01789 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01790"/>01790 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__map_8cs_source_1l01791"/>01791 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01792"/>01792 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;point.SetFloor(<link linkend="_class_e_class">EClass</link>.sources.floors.rows[1].DefaultMaterial.id,&#32;40);
<anchor xml:id="__map_8cs_source_1l01793"/>01793 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01794"/>01794 
<anchor xml:id="__map_8cs_source_1l01795"/>01795 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F3D&#32;RID:&#32;12093&#32;RVA:&#32;0x0010A681&#32;File&#32;Offset:&#32;0x00108881</emphasis>
<anchor xml:id="__map_8cs_source_1l01796"/>01796 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;RefreshShadow(<emphasis role="keywordtype">int</emphasis>&#32;x,&#32;<emphasis role="keywordtype">int</emphasis>&#32;z)
<anchor xml:id="__map_8cs_source_1l01797"/>01797 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01798"/>01798 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01799"/>01799 
<anchor xml:id="__map_8cs_source_1l01800"/>01800 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F3E&#32;RID:&#32;12094&#32;RVA:&#32;0x0010A683&#32;File&#32;Offset:&#32;0x00108883</emphasis>
<anchor xml:id="__map_8cs_source_1l01801"/>01801 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;TrySmoothPick(<link linkend="_class_cell">Cell</link>&#32;cell,&#32;<link linkend="_class_thing">Thing</link>&#32;t,&#32;<link linkend="_class_chara">Chara</link>&#32;c)
<anchor xml:id="__map_8cs_source_1l01802"/>01802 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01803"/>01803 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.TrySmoothPick(cell.GetPoint(),&#32;t,&#32;c);
<anchor xml:id="__map_8cs_source_1l01804"/>01804 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01805"/>01805 
<anchor xml:id="__map_8cs_source_1l01806"/>01806 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F3F&#32;RID:&#32;12095&#32;RVA:&#32;0x0010A694&#32;File&#32;Offset:&#32;0x00108894</emphasis>
<anchor xml:id="__map_8cs_source_1l01807"/>01807 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;TrySmoothPick(<link linkend="_class_point">Point</link>&#32;p,&#32;<link linkend="_class_thing">Thing</link>&#32;t,&#32;<link linkend="_class_chara">Chara</link>&#32;c)
<anchor xml:id="__map_8cs_source_1l01808"/>01808 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01809"/>01809 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(c&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;c.IsAgent)
<anchor xml:id="__map_8cs_source_1l01810"/>01810 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01811"/>01811 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_e_class">EClass</link>.pc.PickOrDrop(p,&#32;t,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__map_8cs_source_1l01812"/>01812 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__map_8cs_source_1l01813"/>01813 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01814"/>01814 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(c&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;(c.pos.Equals(p)&#32;||&#32;<link linkend="_class_e_class">EClass</link>.core.config.game.smoothPick&#32;||&#32;<link linkend="_class_e_class">EClass</link>._zone.IsRegion))
<anchor xml:id="__map_8cs_source_1l01815"/>01815 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01816"/>01816 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;c.PickOrDrop(p,&#32;t,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__map_8cs_source_1l01817"/>01817 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__map_8cs_source_1l01818"/>01818 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01819"/>01819 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_e_class">EClass</link>._zone.AddCard(t,&#32;p);
<anchor xml:id="__map_8cs_source_1l01820"/>01820 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01821"/>01821 
<anchor xml:id="__map_8cs_source_1l01822"/>01822 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F40&#32;RID:&#32;12096&#32;RVA:&#32;0x0010A704&#32;File&#32;Offset:&#32;0x00108904</emphasis>
<anchor xml:id="__map_8cs_source_1l01823"/>01823 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;DestroyObj(<link linkend="_class_point">Point</link>&#32;point)
<anchor xml:id="__map_8cs_source_1l01824"/>01824 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01825"/>01825 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_cell">Cell</link>&#32;cell&#32;=&#32;point.cell;
<anchor xml:id="__map_8cs_source_1l01826"/>01826 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_render_row">RenderRow</link>&#32;sourceObj&#32;=&#32;cell.sourceObj;
<anchor xml:id="__map_8cs_source_1l01827"/>01827 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_source_material_1_1_row">SourceMaterial.Row</link>&#32;matObj&#32;=&#32;cell.matObj;
<anchor xml:id="__map_8cs_source_1l01828"/>01828 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sourceObj.tileType.IsBlockPass)
<anchor xml:id="__map_8cs_source_1l01829"/>01829 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01830"/>01830 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_effect">Effect</link>.Get(<emphasis role="stringliteral">&quot;smoke&quot;</emphasis>).Play(point,&#32;0f,&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__map_8cs_source_1l01831"/>01831 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01832"/>01832 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_effect">Effect</link>.Get(<emphasis role="stringliteral">&quot;mine&quot;</emphasis>).Play(point,&#32;0f,&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keyword">null</emphasis>).SetParticleColor(cell.matObj.GetColor()).Emit(10&#32;+&#32;<link linkend="_class_e_class">EClass</link>.rnd(10));
<anchor xml:id="__map_8cs_source_1l01833"/>01833 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;point.PlaySound(matObj.GetSoundDead(<emphasis role="keyword">null</emphasis>),&#32;<emphasis role="keyword">true</emphasis>,&#32;1f,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__map_8cs_source_1l01834"/>01834 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;matObj.AddBlood(point,&#32;3);
<anchor xml:id="__map_8cs_source_1l01835"/>01835 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01836"/>01836 
<anchor xml:id="__map_8cs_source_1l01837"/>01837 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F41&#32;RID:&#32;12097&#32;RVA:&#32;0x0010A7A0&#32;File&#32;Offset:&#32;0x001089A0</emphasis>
<anchor xml:id="__map_8cs_source_1l01838"/>01838 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;MineObj(<link linkend="_class_point">Point</link>&#32;point,&#32;<link linkend="_class_task">Task</link>&#32;task&#32;=&#32;<emphasis role="keyword">null</emphasis>,&#32;<link linkend="_class_chara">Chara</link>&#32;c&#32;=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__map_8cs_source_1l01839"/>01839 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01840"/>01840 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_map">Map</link>.&lt;&gt;c__DisplayClass119_0&#32;CS$&lt;&gt;8__locals1;
<anchor xml:id="__map_8cs_source_1l01841"/>01841 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CS$&lt;&gt;8__locals1.&lt;&gt;4__this&#32;=&#32;<emphasis role="keyword">this</emphasis>;
<anchor xml:id="__map_8cs_source_1l01842"/>01842 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CS$&lt;&gt;8__locals1.point&#32;=&#32;point;
<anchor xml:id="__map_8cs_source_1l01843"/>01843 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CS$&lt;&gt;8__locals1.c&#32;=&#32;c;
<anchor xml:id="__map_8cs_source_1l01844"/>01844 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!CS$&lt;&gt;8__locals1.point.IsValid&#32;||&#32;!CS$&lt;&gt;8__locals1.point.HasObj)
<anchor xml:id="__map_8cs_source_1l01845"/>01845 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01846"/>01846 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__map_8cs_source_1l01847"/>01847 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01848"/>01848 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_cell">Cell</link>&#32;cell&#32;=&#32;CS$&lt;&gt;8__locals1.point.cell;
<anchor xml:id="__map_8cs_source_1l01849"/>01849 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_source_obj_1_1_row">SourceObj.Row</link>&#32;sourceObj&#32;=&#32;cell.sourceObj;
<anchor xml:id="__map_8cs_source_1l01850"/>01850 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;flag&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__map_8cs_source_1l01851"/>01851 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(CS$&lt;&gt;8__locals1.c&#32;==&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;task&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__map_8cs_source_1l01852"/>01852 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01853"/>01853 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CS$&lt;&gt;8__locals1.c&#32;=&#32;task.owner;
<anchor xml:id="__map_8cs_source_1l01854"/>01854 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01855"/>01855 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;flag2&#32;=&#32;CS$&lt;&gt;8__locals1.c&#32;==&#32;<emphasis role="keyword">null</emphasis>&#32;||&#32;CS$&lt;&gt;8__locals1.c.IsAgent&#32;||&#32;CS$&lt;&gt;8__locals1.c.IsPCFactionOrMinion;
<anchor xml:id="__map_8cs_source_1l01856"/>01856 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.DestroyObj(CS$&lt;&gt;8__locals1.point);
<anchor xml:id="__map_8cs_source_1l01857"/>01857 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(flag2)
<anchor xml:id="__map_8cs_source_1l01858"/>01858 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01859"/>01859 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_source_material_1_1_row">SourceMaterial.Row</link>&#32;matObj_fixed&#32;=&#32;cell.matObj_fixed;
<anchor xml:id="__map_8cs_source_1l01860"/>01860 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_task_harvest">TaskHarvest</link>&#32;taskHarvest&#32;=&#32;task&#32;as&#32;<link linkend="_class_task_harvest">TaskHarvest</link>;
<anchor xml:id="__map_8cs_source_1l01861"/>01861 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(taskHarvest&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;taskHarvest.IsReapSeed)
<anchor xml:id="__map_8cs_source_1l01862"/>01862 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01863"/>01863 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;num&#32;=&#32;1&#32;+&#32;<link linkend="_class_e_class">EClass</link>.rnd(2)&#32;+&#32;((<link linkend="_class_e_class">EClass</link>.rnd(3)&#32;==&#32;0)&#32;?&#32;1&#32;:&#32;0);
<anchor xml:id="__map_8cs_source_1l01864"/>01864 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_e_class">EClass</link>._zone.IsPCFaction)
<anchor xml:id="__map_8cs_source_1l01865"/>01865 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01866"/>01866 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;soilCost&#32;=&#32;<link linkend="_class_e_class">EClass</link>._zone.GetSoilCost();
<anchor xml:id="__map_8cs_source_1l01867"/>01867 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;maxSoil&#32;=&#32;<link linkend="_class_e_class">EClass</link>.Branch.MaxSoil;
<anchor xml:id="__map_8cs_source_1l01868"/>01868 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(soilCost&#32;&gt;&#32;maxSoil)
<anchor xml:id="__map_8cs_source_1l01869"/>01869 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01870"/>01870 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num&#32;-=&#32;<link linkend="_class_e_class">EClass</link>.rnd(2&#32;+&#32;(soilCost&#32;-&#32;maxSoil)&#32;/&#32;10);
<anchor xml:id="__map_8cs_source_1l01871"/>01871 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01872"/>01872 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01873"/>01873 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(num&#32;&lt;=&#32;0)
<anchor xml:id="__map_8cs_source_1l01874"/>01874 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01875"/>01875 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_msg">Msg</link>.Say(<emphasis role="stringliteral">&quot;seedSpoiled&quot;</emphasis>,&#32;cell.GetObjName(),&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__map_8cs_source_1l01876"/>01876 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01877"/>01877 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__map_8cs_source_1l01878"/>01878 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01879"/>01879 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_thing">Thing</link>&#32;t&#32;=&#32;<link linkend="_class_trait_seed">TraitSeed</link>.MakeSeed(sourceObj,&#32;this.TryGetPlant(cell)).SetNum(num);
<anchor xml:id="__map_8cs_source_1l01880"/>01880 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_e_class">EClass</link>.pc.PickOrDrop(CS$&lt;&gt;8__locals1.point,&#32;t,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__map_8cs_source_1l01881"/>01881 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01882"/>01882 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cell.growth.IsTree)
<anchor xml:id="__map_8cs_source_1l01883"/>01883 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01884"/>01884 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cell.isHarvested&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__map_8cs_source_1l01885"/>01885 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__map_8cs_source_1l01886"/>01886 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01887"/>01887 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01888"/>01888 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sourceObj.HasGrowth)
<anchor xml:id="__map_8cs_source_1l01889"/>01889 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01890"/>01890 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cell.growth.PopMineObj(CS$&lt;&gt;8__locals1.c);
<anchor xml:id="__map_8cs_source_1l01891"/>01891 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01892"/>01892 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__map_8cs_source_1l01893"/>01893 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01894"/>01894 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cell.HasBlock&#32;&amp;&amp;&#32;(sourceObj.id&#32;==&#32;18&#32;||&#32;sourceObj.id&#32;==&#32;19))
<anchor xml:id="__map_8cs_source_1l01895"/>01895 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01896"/>01896 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.MineBlock(CS$&lt;&gt;8__locals1.point,&#32;<emphasis role="keyword">false</emphasis>,&#32;CS$&lt;&gt;8__locals1.c);
<anchor xml:id="__map_8cs_source_1l01897"/>01897 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01898"/>01898 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;alias&#32;=&#32;sourceObj.alias;
<anchor xml:id="__map_8cs_source_1l01899"/>01899 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint&#32;num2&#32;=&#32;&lt;PrivateImplementationDetails&gt;.ComputeStringHash(alias);
<anchor xml:id="__map_8cs_source_1l01900"/>01900 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(num2&#32;&lt;=&#32;529228496U)
<anchor xml:id="__map_8cs_source_1l01901"/>01901 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01902"/>01902 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(num2&#32;!=&#32;414349311U)
<anchor xml:id="__map_8cs_source_1l01903"/>01903 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01904"/>01904 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(num2&#32;!=&#32;489301296U)
<anchor xml:id="__map_8cs_source_1l01905"/>01905 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01906"/>01906 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(num2&#32;==&#32;529228496U)
<anchor xml:id="__map_8cs_source_1l01907"/>01907 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01908"/>01908 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!(alias&#32;==&#32;<emphasis role="stringliteral">&quot;wreck_junk&quot;</emphasis>))
<anchor xml:id="__map_8cs_source_1l01909"/>01909 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01910"/>01910 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01911"/>01911 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01912"/>01912 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01913"/>01913 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!(alias&#32;==&#32;<emphasis role="stringliteral">&quot;wreck_precious&quot;</emphasis>))
<anchor xml:id="__map_8cs_source_1l01914"/>01914 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01915"/>01915 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01916"/>01916 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01917"/>01917 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(alias&#32;==&#32;<emphasis role="stringliteral">&quot;nest_bird&quot;</emphasis>)
<anchor xml:id="__map_8cs_source_1l01918"/>01918 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01919"/>01919 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_e_class">EClass</link>.rnd(5)&#32;&lt;=&#32;1)
<anchor xml:id="__map_8cs_source_1l01920"/>01920 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01921"/>01921 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.&lt;MineObj&gt;g__Pop|119_0(<link linkend="_class_thing_gen">ThingGen</link>.Create((<link linkend="_class_e_class">EClass</link>.rnd(10)&#32;==&#32;0)&#32;?&#32;<emphasis role="stringliteral">&quot;egg_fertilized&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;_egg&quot;</emphasis>,&#32;-1,&#32;-1).TryMakeRandomItem(-1),&#32;ref&#32;CS$&lt;&gt;8__locals1);
<anchor xml:id="__map_8cs_source_1l01922"/>01922 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01923"/>01923 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01924"/>01924 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01925"/>01925 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(num2&#32;&lt;=&#32;1575653919U)
<anchor xml:id="__map_8cs_source_1l01926"/>01926 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01927"/>01927 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(num2&#32;!=&#32;1117262783U)
<anchor xml:id="__map_8cs_source_1l01928"/>01928 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01929"/>01929 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(num2&#32;==&#32;1575653919U)
<anchor xml:id="__map_8cs_source_1l01930"/>01930 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01931"/>01931 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!(alias&#32;==&#32;<emphasis role="stringliteral">&quot;wreck_scrap&quot;</emphasis>))
<anchor xml:id="__map_8cs_source_1l01932"/>01932 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01933"/>01933 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01934"/>01934 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01935"/>01935 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01936"/>01936 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!(alias&#32;==&#32;<emphasis role="stringliteral">&quot;wreck_stone&quot;</emphasis>))
<anchor xml:id="__map_8cs_source_1l01937"/>01937 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01938"/>01938 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01939"/>01939 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01940"/>01940 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(num2&#32;!=&#32;3603235706U)
<anchor xml:id="__map_8cs_source_1l01941"/>01941 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01942"/>01942 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(num2&#32;==&#32;3937420123U)
<anchor xml:id="__map_8cs_source_1l01943"/>01943 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01944"/>01944 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!(alias&#32;==&#32;<emphasis role="stringliteral">&quot;wreck_wood&quot;</emphasis>))
<anchor xml:id="__map_8cs_source_1l01945"/>01945 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01946"/>01946 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01947"/>01947 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01948"/>01948 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01949"/>01949 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!(alias&#32;==&#32;<emphasis role="stringliteral">&quot;wreck_cloth&quot;</emphasis>))
<anchor xml:id="__map_8cs_source_1l01950"/>01950 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01951"/>01951 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01952"/>01952 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;num3&#32;=&#32;<link linkend="_class_e_class">EClass</link>.rnd(<link linkend="_class_e_class">EClass</link>.rnd(sourceObj.components.Length)&#32;+&#32;1);
<anchor xml:id="__map_8cs_source_1l01953"/>01953 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>[]&#32;array&#32;=&#32;sourceObj.components[num3].Split(<emphasis role="charliteral">&apos;/&apos;</emphasis>,&#32;StringSplitOptions.None);
<anchor xml:id="__map_8cs_source_1l01954"/>01954 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_thing">Thing</link>&#32;thing&#32;=&#32;<link linkend="_class_thing_gen">ThingGen</link>.Create(array[0],&#32;matObj_fixed.alias);
<anchor xml:id="__map_8cs_source_1l01955"/>01955 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(array.Length&#32;&gt;&#32;1)
<anchor xml:id="__map_8cs_source_1l01956"/>01956 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01957"/>01957 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;thing.SetNum(<link linkend="_class_e_class">EClass</link>.rnd(array[1].ToInt())&#32;+&#32;1);
<anchor xml:id="__map_8cs_source_1l01958"/>01958 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01959"/>01959 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.&lt;MineObj&gt;g__Pop|119_0(thing,&#32;ref&#32;CS$&lt;&gt;8__locals1);
<anchor xml:id="__map_8cs_source_1l01960"/>01960 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01961"/>01961 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01962"/>01962 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.SetObj(CS$&lt;&gt;8__locals1.point.x,&#32;CS$&lt;&gt;8__locals1.point.z,&#32;0,&#32;1,&#32;0);
<anchor xml:id="__map_8cs_source_1l01963"/>01963 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cell.gatherCount&#32;=&#32;0;
<anchor xml:id="__map_8cs_source_1l01964"/>01964 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(flag)
<anchor xml:id="__map_8cs_source_1l01965"/>01965 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01966"/>01966 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.RefreshFOV(CS$&lt;&gt;8__locals1.point.x,&#32;CS$&lt;&gt;8__locals1.point.z,&#32;6,&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__map_8cs_source_1l01967"/>01967 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01968"/>01968 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01969"/>01969 
<anchor xml:id="__map_8cs_source_1l01970"/>01970 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F42&#32;RID:&#32;12098&#32;RVA:&#32;0x0010AB2D&#32;File&#32;Offset:&#32;0x00108D2D</emphasis>
<anchor xml:id="__map_8cs_source_1l01971"/>01971 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;MineObjSound(<link linkend="_class_point">Point</link>&#32;point)
<anchor xml:id="__map_8cs_source_1l01972"/>01972 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01973"/>01973 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;point.PlaySound(point.cell.matObj.GetSoundDead(point.cell.sourceObj),&#32;<emphasis role="keyword">true</emphasis>,&#32;1f,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__map_8cs_source_1l01974"/>01974 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01975"/>01975 
<anchor xml:id="__map_8cs_source_1l01976"/>01976 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F43&#32;RID:&#32;12099&#32;RVA:&#32;0x0010AB58&#32;File&#32;Offset:&#32;0x00108D58</emphasis>
<anchor xml:id="__map_8cs_source_1l01977"/>01977 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_plant_data">PlantData</link>&#32;TryGetPlant(<link linkend="_class_point">Point</link>&#32;p)
<anchor xml:id="__map_8cs_source_1l01978"/>01978 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01979"/>01979 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this.plants.TryGetValue(p.index,&#32;<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__map_8cs_source_1l01980"/>01980 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01981"/>01981 
<anchor xml:id="__map_8cs_source_1l01982"/>01982 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F44&#32;RID:&#32;12100&#32;RVA:&#32;0x0010AB6C&#32;File&#32;Offset:&#32;0x00108D6C</emphasis>
<anchor xml:id="__map_8cs_source_1l01983"/>01983 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_plant_data">PlantData</link>&#32;TryGetPlant(<link linkend="_class_cell">Cell</link>&#32;c)
<anchor xml:id="__map_8cs_source_1l01984"/>01984 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01985"/>01985 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this.plants.TryGetValue(c.index,&#32;<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__map_8cs_source_1l01986"/>01986 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01987"/>01987 
<anchor xml:id="__map_8cs_source_1l01988"/>01988 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F45&#32;RID:&#32;12101&#32;RVA:&#32;0x0010AB80&#32;File&#32;Offset:&#32;0x00108D80</emphasis>
<anchor xml:id="__map_8cs_source_1l01989"/>01989 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_plant_data">PlantData</link>&#32;AddPlant(<link linkend="_class_point">Point</link>&#32;pos,&#32;<link linkend="_class_thing">Thing</link>&#32;seed)
<anchor xml:id="__map_8cs_source_1l01990"/>01990 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01991"/>01991 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_plant_data">PlantData</link>&#32;plantData&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_plant_data">PlantData</link>
<anchor xml:id="__map_8cs_source_1l01992"/>01992 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l01993"/>01993 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;seed&#32;=&#32;seed
<anchor xml:id="__map_8cs_source_1l01994"/>01994 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__map_8cs_source_1l01995"/>01995 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.plants[pos.index]&#32;=&#32;plantData;
<anchor xml:id="__map_8cs_source_1l01996"/>01996 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;plantData;
<anchor xml:id="__map_8cs_source_1l01997"/>01997 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l01998"/>01998 
<anchor xml:id="__map_8cs_source_1l01999"/>01999 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F46&#32;RID:&#32;12102&#32;RVA:&#32;0x0010ABAD&#32;File&#32;Offset:&#32;0x00108DAD</emphasis>
<anchor xml:id="__map_8cs_source_1l02000"/>02000 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;RemovePlant(<link linkend="_class_point">Point</link>&#32;pos)
<anchor xml:id="__map_8cs_source_1l02001"/>02001 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02002"/>02002 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.plants.Remove(pos.index);
<anchor xml:id="__map_8cs_source_1l02003"/>02003 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02004"/>02004 
<anchor xml:id="__map_8cs_source_1l02005"/>02005 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F47&#32;RID:&#32;12103&#32;RVA:&#32;0x0010ABC4&#32;File&#32;Offset:&#32;0x00108DC4</emphasis>
<anchor xml:id="__map_8cs_source_1l02006"/>02006 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;ValidateInstalled(<link linkend="_class_point">Point</link>&#32;p)
<anchor xml:id="__map_8cs_source_1l02007"/>02007 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02008"/>02008 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this._ValidateInstalled(p.x,&#32;p.z);
<anchor xml:id="__map_8cs_source_1l02009"/>02009 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this._ValidateInstalled(p.x&#32;+&#32;1,&#32;p.z);
<anchor xml:id="__map_8cs_source_1l02010"/>02010 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this._ValidateInstalled(p.x&#32;-&#32;1,&#32;p.z);
<anchor xml:id="__map_8cs_source_1l02011"/>02011 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this._ValidateInstalled(p.x,&#32;p.z&#32;+&#32;1);
<anchor xml:id="__map_8cs_source_1l02012"/>02012 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this._ValidateInstalled(p.x,&#32;p.z&#32;-&#32;1);
<anchor xml:id="__map_8cs_source_1l02013"/>02013 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02014"/>02014 
<anchor xml:id="__map_8cs_source_1l02015"/>02015 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F48&#32;RID:&#32;12104&#32;RVA:&#32;0x0010AC34&#32;File&#32;Offset:&#32;0x00108E34</emphasis>
<anchor xml:id="__map_8cs_source_1l02016"/>02016 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;_ValidateInstalled(<emphasis role="keywordtype">int</emphasis>&#32;x,&#32;<emphasis role="keywordtype">int</emphasis>&#32;y)
<anchor xml:id="__map_8cs_source_1l02017"/>02017 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02018"/>02018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_point">Point</link>&#32;point&#32;=&#32;<link linkend="_class_point">Point</link>.shared.Set(x,&#32;y);
<anchor xml:id="__map_8cs_source_1l02019"/>02019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!point.IsValid)
<anchor xml:id="__map_8cs_source_1l02020"/>02020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02021"/>02021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__map_8cs_source_1l02022"/>02022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02023"/>02023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;List&lt;Card&gt;&#32;list&#32;=&#32;point.ListCards(<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__map_8cs_source_1l02024"/>02024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_cell_detail">CellDetail</link>&#32;detail&#32;=&#32;point.cell.detail;
<anchor xml:id="__map_8cs_source_1l02025"/>02025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(detail&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__map_8cs_source_1l02026"/>02026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02027"/>02027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__map_8cs_source_1l02028"/>02028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02029"/>02029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_card">Card</link>&#32;card&#32;<emphasis role="keywordflow">in</emphasis>&#32;list)
<anchor xml:id="__map_8cs_source_1l02030"/>02030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02031"/>02031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(card.isThing&#32;&amp;&amp;&#32;card.trait.CanBeDestroyed&#32;&amp;&amp;&#32;card.IsInstalled)
<anchor xml:id="__map_8cs_source_1l02032"/>02032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02033"/>02033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;HitResult&#32;hitResult&#32;=&#32;card.TileType._HitTest(point,&#32;card.Thing,&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__map_8cs_source_1l02034"/>02034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(card.Thing.stackOrder&#32;!=&#32;detail.things.IndexOf(card.Thing)&#32;||&#32;(hitResult&#32;!=&#32;HitResult.Valid&#32;&amp;&amp;&#32;hitResult&#32;!=&#32;HitResult.Warning))
<anchor xml:id="__map_8cs_source_1l02035"/>02035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02036"/>02036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_e_class">EClass</link>._zone.IsPCFaction)
<anchor xml:id="__map_8cs_source_1l02037"/>02037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02038"/>02038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;card.SetPlaceState(PlaceState.roaming,&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__map_8cs_source_1l02039"/>02039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02040"/>02040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__map_8cs_source_1l02041"/>02041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02042"/>02042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;card.Die(<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keyword">null</emphasis>,&#32;AttackSource.None);
<anchor xml:id="__map_8cs_source_1l02043"/>02043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02044"/>02044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02045"/>02045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02046"/>02046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02047"/>02047 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02048"/>02048 
<anchor xml:id="__map_8cs_source_1l02049"/>02049 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F49&#32;RID:&#32;12105&#32;RVA:&#32;0x0010AD34&#32;File&#32;Offset:&#32;0x00108F34</emphasis>
<anchor xml:id="__map_8cs_source_1l02050"/>02050 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;RemoveLonelyRamps(<link linkend="_class_cell">Cell</link>&#32;cell)
<anchor xml:id="__map_8cs_source_1l02051"/>02051 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02052"/>02052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;4;&#32;i++)
<anchor xml:id="__map_8cs_source_1l02053"/>02053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02054"/>02054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_cell">Cell</link>&#32;dependedRamp&#32;=&#32;this.GetDependedRamp(cell);
<anchor xml:id="__map_8cs_source_1l02055"/>02055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(dependedRamp&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__map_8cs_source_1l02056"/>02056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02057"/>02057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__map_8cs_source_1l02058"/>02058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02059"/>02059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.MineBlock(dependedRamp.GetPoint(),&#32;<emphasis role="keyword">false</emphasis>,&#32;<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__map_8cs_source_1l02060"/>02060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02061"/>02061 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02062"/>02062 
<anchor xml:id="__map_8cs_source_1l02063"/>02063 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F4A&#32;RID:&#32;12106&#32;RVA:&#32;0x0010AD66&#32;File&#32;Offset:&#32;0x00108F66</emphasis>
<anchor xml:id="__map_8cs_source_1l02064"/>02064 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;DestroyBlock(<emphasis role="keywordtype">int</emphasis>&#32;x,&#32;<emphasis role="keywordtype">int</emphasis>&#32;z)
<anchor xml:id="__map_8cs_source_1l02065"/>02065 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02066"/>02066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.SetBlock(x,&#32;z,&#32;0,&#32;0);
<anchor xml:id="__map_8cs_source_1l02067"/>02067 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02068"/>02068 
<anchor xml:id="__map_8cs_source_1l02069"/>02069 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F4B&#32;RID:&#32;12107&#32;RVA:&#32;0x0010AD74&#32;File&#32;Offset:&#32;0x00108F74</emphasis>
<anchor xml:id="__map_8cs_source_1l02070"/>02070 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;AddDecal(<emphasis role="keywordtype">int</emphasis>&#32;x,&#32;<emphasis role="keywordtype">int</emphasis>&#32;z,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<emphasis role="keywordtype">id</emphasis>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;amount&#32;=&#32;1,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;refresh&#32;=&#32;<emphasis role="keyword">true</emphasis>)
<anchor xml:id="__map_8cs_source_1l02071"/>02071 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02072"/>02072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(x&#32;&lt;&#32;0&#32;||&#32;z&#32;&lt;&#32;0&#32;||&#32;x&#32;&gt;=&#32;this.Size&#32;||&#32;z&#32;&gt;=&#32;this.Size)
<anchor xml:id="__map_8cs_source_1l02073"/>02073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02074"/>02074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__map_8cs_source_1l02075"/>02075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02076"/>02076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_cell">Cell</link>&#32;cell&#32;=&#32;this.cells[x,&#32;z];
<anchor xml:id="__map_8cs_source_1l02077"/>02077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!cell.sourceFloor.tileType.AllowBlood)
<anchor xml:id="__map_8cs_source_1l02078"/>02078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02079"/>02079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__map_8cs_source_1l02080"/>02080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02081"/>02081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((<emphasis role="keywordtype">int</emphasis>)(cell.decal&#32;/&#32;8)&#32;!=&#32;<emphasis role="keywordtype">id</emphasis>&#32;&amp;&amp;&#32;(<emphasis role="keywordtype">int</emphasis>)(cell.decal&#32;%&#32;8)&#32;&gt;&#32;amount)
<anchor xml:id="__map_8cs_source_1l02082"/>02082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02083"/>02083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__map_8cs_source_1l02084"/>02084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02085"/>02085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((<emphasis role="keywordtype">int</emphasis>)(cell.decal&#32;/&#32;8)&#32;!=&#32;<emphasis role="keywordtype">id</emphasis>&#32;&amp;&amp;&#32;cell.decal&#32;%&#32;8&#32;==&#32;0)
<anchor xml:id="__map_8cs_source_1l02086"/>02086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02087"/>02087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;amount--;
<anchor xml:id="__map_8cs_source_1l02088"/>02088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02089"/>02089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;num&#32;=&#32;Mathf.Clamp((<emphasis role="keywordtype">int</emphasis>)(((<emphasis role="keywordtype">int</emphasis>)(cell.decal&#32;/&#32;8)&#32;==&#32;<emphasis role="keywordtype">id</emphasis>)&#32;?&#32;(cell.decal&#32;%&#32;8)&#32;:&#32;0)&#32;+&#32;amount,&#32;0,&#32;7);
<anchor xml:id="__map_8cs_source_1l02090"/>02090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cell.decal&#32;=&#32;(byte)(<emphasis role="keywordtype">id</emphasis>&#32;*&#32;8&#32;+&#32;num);
<anchor xml:id="__map_8cs_source_1l02091"/>02091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(refresh)
<anchor xml:id="__map_8cs_source_1l02092"/>02092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02093"/>02093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.RefreshNeighborTiles(x,&#32;z);
<anchor xml:id="__map_8cs_source_1l02094"/>02094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02095"/>02095 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02096"/>02096 
<anchor xml:id="__map_8cs_source_1l02097"/>02097 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F4C&#32;RID:&#32;12108&#32;RVA:&#32;0x0010AE29&#32;File&#32;Offset:&#32;0x00109029</emphasis>
<anchor xml:id="__map_8cs_source_1l02098"/>02098 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;SetDecal(<emphasis role="keywordtype">int</emphasis>&#32;x,&#32;<emphasis role="keywordtype">int</emphasis>&#32;z,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<emphasis role="keywordtype">id</emphasis>&#32;=&#32;0,&#32;<emphasis role="keywordtype">int</emphasis>&#32;amount&#32;=&#32;1,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;refresh&#32;=&#32;<emphasis role="keyword">true</emphasis>)
<anchor xml:id="__map_8cs_source_1l02099"/>02099 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02100"/>02100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.cells[x,&#32;z].decal&#32;=&#32;(byte)(<emphasis role="keywordtype">id</emphasis>&#32;*&#32;8&#32;+&#32;((<emphasis role="keywordtype">id</emphasis>&#32;==&#32;0)&#32;?&#32;0&#32;:&#32;amount));
<anchor xml:id="__map_8cs_source_1l02101"/>02101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(refresh)
<anchor xml:id="__map_8cs_source_1l02102"/>02102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02103"/>02103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.RefreshNeighborTiles(x,&#32;z);
<anchor xml:id="__map_8cs_source_1l02104"/>02104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02105"/>02105 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02106"/>02106 
<anchor xml:id="__map_8cs_source_1l02107"/>02107 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F4D&#32;RID:&#32;12109&#32;RVA:&#32;0x0010AE58&#32;File&#32;Offset:&#32;0x00109058</emphasis>
<anchor xml:id="__map_8cs_source_1l02108"/>02108 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;SetFoormark(<link linkend="_class_point">Point</link>&#32;pos,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<emphasis role="keywordtype">id</emphasis>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;angle,&#32;<emphasis role="keywordtype">int</emphasis>&#32;offset&#32;=&#32;0)
<anchor xml:id="__map_8cs_source_1l02109"/>02109 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02110"/>02110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_cell">Cell</link>&#32;cell&#32;=&#32;pos.cell;
<anchor xml:id="__map_8cs_source_1l02111"/>02111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;tile&#32;=&#32;this.AngleToIndex(angle)&#32;+&#32;offset;
<anchor xml:id="__map_8cs_source_1l02112"/>02112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_footmark">Footmark</link>&#32;footmark&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_footmark">Footmark</link>
<anchor xml:id="__map_8cs_source_1l02113"/>02113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02114"/>02114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tile&#32;=&#32;tile,
<anchor xml:id="__map_8cs_source_1l02115"/>02115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;remaining&#32;=&#32;10
<anchor xml:id="__map_8cs_source_1l02116"/>02116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__map_8cs_source_1l02117"/>02117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;footmark.pos.Set(pos);
<anchor xml:id="__map_8cs_source_1l02118"/>02118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.footmarks.Add(footmark);
<anchor xml:id="__map_8cs_source_1l02119"/>02119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cell.GetOrCreateDetail().footmark&#32;=&#32;footmark;
<anchor xml:id="__map_8cs_source_1l02120"/>02120 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02121"/>02121 
<anchor xml:id="__map_8cs_source_1l02122"/>02122 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F4E&#32;RID:&#32;12110&#32;RVA:&#32;0x0010AEB0&#32;File&#32;Offset:&#32;0x001090B0</emphasis>
<anchor xml:id="__map_8cs_source_1l02123"/>02123 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;AngleToIndex(<emphasis role="keywordtype">int</emphasis>&#32;a)
<anchor xml:id="__map_8cs_source_1l02124"/>02124 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02125"/>02125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_e_class">EClass</link>._zone.IsRegion)
<anchor xml:id="__map_8cs_source_1l02126"/>02126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02127"/>02127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(a&#32;==&#32;135)
<anchor xml:id="__map_8cs_source_1l02128"/>02128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02129"/>02129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;7;
<anchor xml:id="__map_8cs_source_1l02130"/>02130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02131"/>02131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(a&#32;==&#32;180)
<anchor xml:id="__map_8cs_source_1l02132"/>02132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02133"/>02133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="__map_8cs_source_1l02134"/>02134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02135"/>02135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(a&#32;==&#32;225)
<anchor xml:id="__map_8cs_source_1l02136"/>02136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02137"/>02137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
<anchor xml:id="__map_8cs_source_1l02138"/>02138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02139"/>02139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(a&#32;==&#32;-90)
<anchor xml:id="__map_8cs_source_1l02140"/>02140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02141"/>02141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;2;
<anchor xml:id="__map_8cs_source_1l02142"/>02142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02143"/>02143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(a&#32;==&#32;-45)
<anchor xml:id="__map_8cs_source_1l02144"/>02144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02145"/>02145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;3;
<anchor xml:id="__map_8cs_source_1l02146"/>02146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02147"/>02147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(a&#32;==&#32;0)
<anchor xml:id="__map_8cs_source_1l02148"/>02148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02149"/>02149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;4;
<anchor xml:id="__map_8cs_source_1l02150"/>02150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02151"/>02151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(a&#32;==&#32;45)
<anchor xml:id="__map_8cs_source_1l02152"/>02152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02153"/>02153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;5;
<anchor xml:id="__map_8cs_source_1l02154"/>02154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02155"/>02155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;6;
<anchor xml:id="__map_8cs_source_1l02156"/>02156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02157"/>02157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__map_8cs_source_1l02158"/>02158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02159"/>02159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(a&#32;==&#32;135)
<anchor xml:id="__map_8cs_source_1l02160"/>02160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02161"/>02161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="__map_8cs_source_1l02162"/>02162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02163"/>02163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(a&#32;==&#32;180)
<anchor xml:id="__map_8cs_source_1l02164"/>02164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02165"/>02165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
<anchor xml:id="__map_8cs_source_1l02166"/>02166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02167"/>02167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(a&#32;==&#32;225)
<anchor xml:id="__map_8cs_source_1l02168"/>02168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02169"/>02169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;2;
<anchor xml:id="__map_8cs_source_1l02170"/>02170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02171"/>02171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(a&#32;==&#32;-90)
<anchor xml:id="__map_8cs_source_1l02172"/>02172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02173"/>02173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;3;
<anchor xml:id="__map_8cs_source_1l02174"/>02174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02175"/>02175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(a&#32;==&#32;-45)
<anchor xml:id="__map_8cs_source_1l02176"/>02176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02177"/>02177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;4;
<anchor xml:id="__map_8cs_source_1l02178"/>02178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02179"/>02179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(a&#32;==&#32;0)
<anchor xml:id="__map_8cs_source_1l02180"/>02180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02181"/>02181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;5;
<anchor xml:id="__map_8cs_source_1l02182"/>02182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02183"/>02183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(a&#32;==&#32;45)
<anchor xml:id="__map_8cs_source_1l02184"/>02184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02185"/>02185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;6;
<anchor xml:id="__map_8cs_source_1l02186"/>02186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02187"/>02187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;7;
<anchor xml:id="__map_8cs_source_1l02188"/>02188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02189"/>02189 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02190"/>02190 
<anchor xml:id="__map_8cs_source_1l02191"/>02191 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F4F&#32;RID:&#32;12111&#32;RVA:&#32;0x0010AF3C&#32;File&#32;Offset:&#32;0x0010913C</emphasis>
<anchor xml:id="__map_8cs_source_1l02192"/>02192 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;RefreshSingleTile(<emphasis role="keywordtype">int</emphasis>&#32;x,&#32;<emphasis role="keywordtype">int</emphasis>&#32;z)
<anchor xml:id="__map_8cs_source_1l02193"/>02193 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02194"/>02194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.cells[x,&#32;z].Refresh();
<anchor xml:id="__map_8cs_source_1l02195"/>02195 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02196"/>02196 
<anchor xml:id="__map_8cs_source_1l02197"/>02197 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F50&#32;RID:&#32;12112&#32;RVA:&#32;0x0010AF50&#32;File&#32;Offset:&#32;0x00109150</emphasis>
<anchor xml:id="__map_8cs_source_1l02198"/>02198 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;RefreshAllTiles()
<anchor xml:id="__map_8cs_source_1l02199"/>02199 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02200"/>02200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;this.Size;&#32;i++)
<anchor xml:id="__map_8cs_source_1l02201"/>02201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02202"/>02202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;j&#32;=&#32;0;&#32;j&#32;&lt;&#32;this.Size;&#32;j++)
<anchor xml:id="__map_8cs_source_1l02203"/>02203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02204"/>02204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.cells[i,&#32;j].Refresh();
<anchor xml:id="__map_8cs_source_1l02205"/>02205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02206"/>02206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02207"/>02207 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02208"/>02208 
<anchor xml:id="__map_8cs_source_1l02209"/>02209 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F51&#32;RID:&#32;12113&#32;RVA:&#32;0x0010AF94&#32;File&#32;Offset:&#32;0x00109194</emphasis>
<anchor xml:id="__map_8cs_source_1l02210"/>02210 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;RefreshNeighborTiles(<emphasis role="keywordtype">int</emphasis>&#32;x,&#32;<emphasis role="keywordtype">int</emphasis>&#32;z)
<anchor xml:id="__map_8cs_source_1l02211"/>02211 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02212"/>02212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.cells[x,&#32;z].Refresh();
<anchor xml:id="__map_8cs_source_1l02213"/>02213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;x&#32;-&#32;2;&#32;i&#32;&lt;&#32;x&#32;+&#32;3;&#32;i++)
<anchor xml:id="__map_8cs_source_1l02214"/>02214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02215"/>02215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(i&#32;&gt;=&#32;0&#32;&amp;&amp;&#32;i&#32;&lt;&#32;this.Size)
<anchor xml:id="__map_8cs_source_1l02216"/>02216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02217"/>02217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;j&#32;=&#32;z&#32;-&#32;2;&#32;j&#32;&lt;&#32;z&#32;+&#32;3;&#32;j++)
<anchor xml:id="__map_8cs_source_1l02218"/>02218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02219"/>02219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(j&#32;&gt;=&#32;0&#32;&amp;&amp;&#32;j&#32;&lt;&#32;this.Size&#32;&amp;&amp;&#32;(x&#32;!=&#32;i&#32;||&#32;z&#32;!=&#32;j))
<anchor xml:id="__map_8cs_source_1l02220"/>02220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02221"/>02221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.cells[i,&#32;j].Refresh();
<anchor xml:id="__map_8cs_source_1l02222"/>02222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02223"/>02223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02224"/>02224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02225"/>02225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02226"/>02226 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02227"/>02227 
<anchor xml:id="__map_8cs_source_1l02228"/>02228 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F52&#32;RID:&#32;12114&#32;RVA:&#32;0x0010B008&#32;File&#32;Offset:&#32;0x00109208</emphasis>
<anchor xml:id="__map_8cs_source_1l02229"/>02229 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;QuickRefreshTile(<emphasis role="keywordtype">int</emphasis>&#32;x,&#32;<emphasis role="keywordtype">int</emphasis>&#32;z)
<anchor xml:id="__map_8cs_source_1l02230"/>02230 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02231"/>02231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_cell">Cell</link>&#32;cell&#32;=&#32;this.cells[x,&#32;z];
<anchor xml:id="__map_8cs_source_1l02232"/>02232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_cell">Cell</link>&#32;cell2&#32;=&#32;(x&#32;&gt;&#32;0)&#32;?&#32;this.cells[x&#32;-&#32;1,&#32;z]&#32;:&#32;<link linkend="_class_cell">Cell</link>.Void;
<anchor xml:id="__map_8cs_source_1l02233"/>02233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_cell">Cell</link>&#32;cell3&#32;=&#32;(x&#32;+&#32;1&#32;&lt;&#32;this.Size)&#32;?&#32;this.cells[x&#32;+&#32;1,&#32;z]&#32;:&#32;<link linkend="_class_cell">Cell</link>.Void;
<anchor xml:id="__map_8cs_source_1l02234"/>02234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_cell">Cell</link>&#32;cell4&#32;=&#32;(z&#32;&gt;&#32;0)&#32;?&#32;this.cells[x,&#32;z&#32;-&#32;1]&#32;:&#32;<link linkend="_class_cell">Cell</link>.Void;
<anchor xml:id="__map_8cs_source_1l02235"/>02235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_cell">Cell</link>&#32;cell5&#32;=&#32;(z&#32;+&#32;1&#32;&lt;&#32;this.Size)&#32;?&#32;this.cells[x,&#32;z&#32;+&#32;1]&#32;:&#32;<link linkend="_class_cell">Cell</link>.Void;
<anchor xml:id="__map_8cs_source_1l02236"/>02236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_cell">Cell</link>&#32;cell6&#32;=&#32;(x&#32;&gt;&#32;0&#32;&amp;&amp;&#32;z&#32;&gt;&#32;0)&#32;?&#32;this.cells[x&#32;-&#32;1,&#32;z&#32;-&#32;1]&#32;:&#32;<link linkend="_class_cell">Cell</link>.Void;
<anchor xml:id="__map_8cs_source_1l02237"/>02237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_cell">Cell</link>&#32;cell7&#32;=&#32;(x&#32;+&#32;1&#32;&lt;&#32;this.Size&#32;&amp;&amp;&#32;z&#32;&gt;&#32;0)&#32;?&#32;this.cells[x&#32;+&#32;1,&#32;z&#32;-&#32;1]&#32;:&#32;<link linkend="_class_cell">Cell</link>.Void;
<anchor xml:id="__map_8cs_source_1l02238"/>02238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_cell">Cell</link>&#32;cell8&#32;=&#32;(x&#32;&gt;&#32;0&#32;&amp;&amp;&#32;z&#32;+&#32;1&#32;&lt;&#32;this.Size)&#32;?&#32;this.cells[x&#32;-&#32;1,&#32;z&#32;+&#32;1]&#32;:&#32;<link linkend="_class_cell">Cell</link>.Void;
<anchor xml:id="__map_8cs_source_1l02239"/>02239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_cell">Cell</link>&#32;cell9&#32;=&#32;(x&#32;+&#32;1&#32;&lt;&#32;this.Size&#32;&amp;&amp;&#32;z&#32;+&#32;1&#32;&lt;&#32;this.Size)&#32;?&#32;this.cells[x&#32;+&#32;1,&#32;z&#32;+&#32;1]&#32;:&#32;<link linkend="_class_cell">Cell</link>.Void;
<anchor xml:id="__map_8cs_source_1l02240"/>02240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cell.isSurrounded4d&#32;=&#32;(cell2.HasFullBlock&#32;&amp;&amp;&#32;cell3.HasFullBlock&#32;&amp;&amp;&#32;cell4.HasFullBlock&#32;&amp;&amp;&#32;cell5.HasFullBlock);
<anchor xml:id="__map_8cs_source_1l02241"/>02241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cell.isSurrounded&#32;=&#32;(cell.isSurrounded4d&#32;&amp;&amp;&#32;cell6.HasFullBlock&#32;&amp;&amp;&#32;cell7.HasFullBlock&#32;&amp;&amp;&#32;cell8.HasFullBlock&#32;&amp;&amp;&#32;cell9.HasFullBlock);
<anchor xml:id="__map_8cs_source_1l02242"/>02242 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02243"/>02243 
<anchor xml:id="__map_8cs_source_1l02244"/>02244 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F53&#32;RID:&#32;12115&#32;RVA:&#32;0x0010B19C&#32;File&#32;Offset:&#32;0x0010939C</emphasis>
<anchor xml:id="__map_8cs_source_1l02245"/>02245 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;GetRampDir(<emphasis role="keywordtype">int</emphasis>&#32;x,&#32;<emphasis role="keywordtype">int</emphasis>&#32;z,&#32;<link linkend="_class_tile_type">TileType</link>&#32;blockType&#32;=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__map_8cs_source_1l02246"/>02246 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02247"/>02247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_cell">Cell</link>&#32;cell&#32;=&#32;this.cells[x,&#32;z];
<anchor xml:id="__map_8cs_source_1l02248"/>02248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cell.HasFullBlock)
<anchor xml:id="__map_8cs_source_1l02249"/>02249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02250"/>02250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(blockType&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__map_8cs_source_1l02251"/>02251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02252"/>02252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;blockType&#32;=&#32;cell.sourceBlock.tileType;
<anchor xml:id="__map_8cs_source_1l02253"/>02253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02254"/>02254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_cell">Cell</link>&#32;right&#32;=&#32;cell.Right;
<anchor xml:id="__map_8cs_source_1l02255"/>02255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_cell">Cell</link>&#32;front&#32;=&#32;cell.Front;
<anchor xml:id="__map_8cs_source_1l02256"/>02256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_cell">Cell</link>&#32;left&#32;=&#32;cell.Left;
<anchor xml:id="__map_8cs_source_1l02257"/>02257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_cell">Cell</link>&#32;back&#32;=&#32;cell.Back;
<anchor xml:id="__map_8cs_source_1l02258"/>02258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!right.HasBlock&#32;&amp;&amp;&#32;!right.IsVoid&#32;&amp;&amp;&#32;left.HasFullBlock&#32;&amp;&amp;&#32;front.CanBuildRamp(1)&#32;&amp;&amp;&#32;back.CanBuildRamp(1))
<anchor xml:id="__map_8cs_source_1l02259"/>02259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02260"/>02260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
<anchor xml:id="__map_8cs_source_1l02261"/>02261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02262"/>02262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!front.HasBlock&#32;&amp;&amp;&#32;!front.IsVoid&#32;&amp;&amp;&#32;back.HasFullBlock&#32;&amp;&amp;&#32;left.CanBuildRamp(0)&#32;&amp;&amp;&#32;right.CanBuildRamp(0))
<anchor xml:id="__map_8cs_source_1l02263"/>02263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02264"/>02264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="__map_8cs_source_1l02265"/>02265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02266"/>02266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!left.HasBlock&#32;&amp;&amp;&#32;!left.IsVoid&#32;&amp;&amp;&#32;right.HasFullBlock&#32;&amp;&amp;&#32;front.CanBuildRamp(3)&#32;&amp;&amp;&#32;back.CanBuildRamp(3))
<anchor xml:id="__map_8cs_source_1l02267"/>02267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02268"/>02268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;3;
<anchor xml:id="__map_8cs_source_1l02269"/>02269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02270"/>02270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!back.HasBlock&#32;&amp;&amp;&#32;!back.IsVoid&#32;&amp;&amp;&#32;front.HasFullBlock&#32;&amp;&amp;&#32;left.CanBuildRamp(2)&#32;&amp;&amp;&#32;right.CanBuildRamp(2))
<anchor xml:id="__map_8cs_source_1l02271"/>02271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02272"/>02272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;2;
<anchor xml:id="__map_8cs_source_1l02273"/>02273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02274"/>02274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!blockType.IsRamp)
<anchor xml:id="__map_8cs_source_1l02275"/>02275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02276"/>02276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="__map_8cs_source_1l02277"/>02277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02278"/>02278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02279"/>02279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;-1;
<anchor xml:id="__map_8cs_source_1l02280"/>02280 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02281"/>02281 
<anchor xml:id="__map_8cs_source_1l02282"/>02282 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F54&#32;RID:&#32;12116&#32;RVA:&#32;0x0010B2B0&#32;File&#32;Offset:&#32;0x001094B0</emphasis>
<anchor xml:id="__map_8cs_source_1l02283"/>02283 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_cell">Cell</link>&#32;GetDependedRamp(<link linkend="_class_cell">Cell</link>&#32;cell)
<anchor xml:id="__map_8cs_source_1l02284"/>02284 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02285"/>02285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_cell">Cell</link>&#32;right&#32;=&#32;cell.Right;
<anchor xml:id="__map_8cs_source_1l02286"/>02286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(right.HasRamp&#32;&amp;&amp;&#32;!right.HasStairs&#32;&amp;&amp;&#32;right.blockDir&#32;==&#32;1)
<anchor xml:id="__map_8cs_source_1l02287"/>02287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02288"/>02288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;right;
<anchor xml:id="__map_8cs_source_1l02289"/>02289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02290"/>02290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_cell">Cell</link>&#32;front&#32;=&#32;cell.Front;
<anchor xml:id="__map_8cs_source_1l02291"/>02291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(front.HasRamp&#32;&amp;&amp;&#32;!front.HasStairs&#32;&amp;&amp;&#32;front.blockDir&#32;==&#32;0)
<anchor xml:id="__map_8cs_source_1l02292"/>02292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02293"/>02293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;front;
<anchor xml:id="__map_8cs_source_1l02294"/>02294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02295"/>02295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_cell">Cell</link>&#32;left&#32;=&#32;cell.Left;
<anchor xml:id="__map_8cs_source_1l02296"/>02296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(left.HasRamp&#32;&amp;&amp;&#32;!left.HasStairs&#32;&amp;&amp;&#32;left.blockDir&#32;==&#32;3)
<anchor xml:id="__map_8cs_source_1l02297"/>02297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02298"/>02298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;left;
<anchor xml:id="__map_8cs_source_1l02299"/>02299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02300"/>02300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_cell">Cell</link>&#32;back&#32;=&#32;cell.Back;
<anchor xml:id="__map_8cs_source_1l02301"/>02301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(back.HasRamp&#32;&amp;&amp;&#32;!back.HasStairs&#32;&amp;&amp;&#32;back.blockDir&#32;==&#32;2)
<anchor xml:id="__map_8cs_source_1l02302"/>02302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02303"/>02303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;back;
<anchor xml:id="__map_8cs_source_1l02304"/>02304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02305"/>02305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__map_8cs_source_1l02306"/>02306 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02307"/>02307 
<anchor xml:id="__map_8cs_source_1l02308"/>02308 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F55&#32;RID:&#32;12117&#32;RVA:&#32;0x0010B348&#32;File&#32;Offset:&#32;0x00109548</emphasis>
<anchor xml:id="__map_8cs_source_1l02309"/>02309 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_point">Point</link>&#32;GetRandomPoint(<link linkend="_class_point">Point</link>&#32;center,&#32;<emphasis role="keywordtype">int</emphasis>&#32;radius,&#32;<emphasis role="keywordtype">int</emphasis>&#32;tries&#32;=&#32;100,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;mustBeWalkable&#32;=&#32;<emphasis role="keyword">true</emphasis>,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;requireLos&#32;=&#32;<emphasis role="keyword">true</emphasis>)
<anchor xml:id="__map_8cs_source_1l02310"/>02310 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02311"/>02311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_point">Point</link>&#32;point&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_point">Point</link>();
<anchor xml:id="__map_8cs_source_1l02312"/>02312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;tries;&#32;i++)
<anchor xml:id="__map_8cs_source_1l02313"/>02313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02314"/>02314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;point.x&#32;=&#32;center.x&#32;+&#32;<link linkend="_class_e_class">EClass</link>.rnd(radius&#32;*&#32;2&#32;+&#32;1)&#32;-&#32;radius;
<anchor xml:id="__map_8cs_source_1l02315"/>02315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;point.z&#32;=&#32;center.z&#32;+&#32;<link linkend="_class_e_class">EClass</link>.rnd(radius&#32;*&#32;2&#32;+&#32;1)&#32;-&#32;radius;
<anchor xml:id="__map_8cs_source_1l02316"/>02316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;point.Clamp(<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__map_8cs_source_1l02317"/>02317 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((!mustBeWalkable&#32;||&#32;!point.cell.blocked)&#32;&amp;&amp;&#32;(!requireLos&#32;||&#32;<link linkend="_class_los">Los</link>.IsVisible(center,&#32;point,&#32;<emphasis role="keyword">null</emphasis>)))
<anchor xml:id="__map_8cs_source_1l02318"/>02318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02319"/>02319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;point;
<anchor xml:id="__map_8cs_source_1l02320"/>02320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02321"/>02321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02322"/>02322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Debug.Log(<emphasis role="stringliteral">&quot;GetRandomPoint&#32;failed&#32;center:&quot;</emphasis>&#32;+&#32;((center&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;?&#32;center.ToString()&#32;:&#32;<emphasis role="keyword">null</emphasis>)&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;rad:&quot;</emphasis>&#32;+&#32;radius.ToString());
<anchor xml:id="__map_8cs_source_1l02323"/>02323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;point.IsValid&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__map_8cs_source_1l02324"/>02324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;point;
<anchor xml:id="__map_8cs_source_1l02325"/>02325 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02326"/>02326 
<anchor xml:id="__map_8cs_source_1l02327"/>02327 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F56&#32;RID:&#32;12118&#32;RVA:&#32;0x0010B3F4&#32;File&#32;Offset:&#32;0x001095F4</emphasis>
<anchor xml:id="__map_8cs_source_1l02328"/>02328 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_point">Point</link>&#32;GetRandomEdge(<emphasis role="keywordtype">int</emphasis>&#32;r&#32;=&#32;3)
<anchor xml:id="__map_8cs_source_1l02329"/>02329 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02330"/>02330 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;10000;&#32;i++)
<anchor xml:id="__map_8cs_source_1l02331"/>02331 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02332"/>02332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;x;
<anchor xml:id="__map_8cs_source_1l02333"/>02333 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;z;
<anchor xml:id="__map_8cs_source_1l02334"/>02334 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_e_class">EClass</link>.rnd(2)&#32;==&#32;0)
<anchor xml:id="__map_8cs_source_1l02335"/>02335 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02336"/>02336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x&#32;=&#32;((<link linkend="_class_e_class">EClass</link>.rnd(2)&#32;==&#32;0)&#32;?&#32;<link linkend="_class_e_class">EClass</link>.rnd(r)&#32;:&#32;(<emphasis role="keyword">this</emphasis>.Size&#32;-&#32;1&#32;-&#32;<link linkend="_class_e_class">EClass</link>.rnd(r)));
<anchor xml:id="__map_8cs_source_1l02337"/>02337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;z&#32;=&#32;<link linkend="_class_e_class">EClass</link>.rnd(this.Size);
<anchor xml:id="__map_8cs_source_1l02338"/>02338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02339"/>02339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__map_8cs_source_1l02340"/>02340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02341"/>02341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;z&#32;=&#32;((<link linkend="_class_e_class">EClass</link>.rnd(2)&#32;==&#32;0)&#32;?&#32;<link linkend="_class_e_class">EClass</link>.rnd(r)&#32;:&#32;(<emphasis role="keyword">this</emphasis>.Size&#32;-&#32;1&#32;-&#32;<link linkend="_class_e_class">EClass</link>.rnd(r)));
<anchor xml:id="__map_8cs_source_1l02342"/>02342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x&#32;=&#32;<link linkend="_class_e_class">EClass</link>.rnd(this.Size);
<anchor xml:id="__map_8cs_source_1l02343"/>02343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02344"/>02344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_point">Point</link>&#32;surface&#32;=&#32;base.GetSurface(x,&#32;z,&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__map_8cs_source_1l02345"/>02345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(surface.IsValid)
<anchor xml:id="__map_8cs_source_1l02346"/>02346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02347"/>02347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;surface;
<anchor xml:id="__map_8cs_source_1l02348"/>02348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02349"/>02349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02350"/>02350 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;base.GetSurface(this.Size&#32;/&#32;2,&#32;this.Size&#32;/&#32;2,&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__map_8cs_source_1l02351"/>02351 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02352"/>02352 
<anchor xml:id="__map_8cs_source_1l02353"/>02353 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F57&#32;RID:&#32;12119&#32;RVA:&#32;0x0010B4A8&#32;File&#32;Offset:&#32;0x001096A8</emphasis>
<anchor xml:id="__map_8cs_source_1l02354"/>02354 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_point">Point</link>&#32;GetNearbyResourcePoint(<link linkend="_class_point">Point</link>&#32;center)
<anchor xml:id="__map_8cs_source_1l02355"/>02355 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02356"/>02356 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_point">Point</link>&#32;point&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_point">Point</link>();
<anchor xml:id="__map_8cs_source_1l02357"/>02357 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;num&#32;=&#32;(<link linkend="_class_e_class">EClass</link>.rnd(2)&#32;==&#32;0)&#32;?&#32;1&#32;:&#32;-1;
<anchor xml:id="__map_8cs_source_1l02358"/>02358 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;num2&#32;=&#32;(<link linkend="_class_e_class">EClass</link>.rnd(2)&#32;==&#32;0)&#32;?&#32;1&#32;:&#32;-1;
<anchor xml:id="__map_8cs_source_1l02359"/>02359 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;3;&#32;i++)
<anchor xml:id="__map_8cs_source_1l02360"/>02360 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02361"/>02361 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;point.x&#32;=&#32;center.x&#32;-&#32;num&#32;+&#32;i&#32;*&#32;num;
<anchor xml:id="__map_8cs_source_1l02362"/>02362 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;j&#32;=&#32;0;&#32;j&#32;&lt;&#32;3;&#32;j++)
<anchor xml:id="__map_8cs_source_1l02363"/>02363 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02364"/>02364 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;point.z&#32;=&#32;center.z&#32;-&#32;num2&#32;+&#32;j&#32;*&#32;num2;
<anchor xml:id="__map_8cs_source_1l02365"/>02365 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(point.IsValid&#32;&amp;&amp;&#32;point.area&#32;==&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;point.cell.CanHarvest())
<anchor xml:id="__map_8cs_source_1l02366"/>02366 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02367"/>02367 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;point;
<anchor xml:id="__map_8cs_source_1l02368"/>02368 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02369"/>02369 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02370"/>02370 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02371"/>02371 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_point">Point</link>.Invalid;
<anchor xml:id="__map_8cs_source_1l02372"/>02372 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02373"/>02373 
<anchor xml:id="__map_8cs_source_1l02374"/>02374 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F58&#32;RID:&#32;12120&#32;RVA:&#32;0x0010B53C&#32;File&#32;Offset:&#32;0x0010973C</emphasis>
<anchor xml:id="__map_8cs_source_1l02375"/>02375 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;List&lt;Point&gt;&#32;ListPointsInCircle(<link linkend="_class_point">Point</link>&#32;center,&#32;<emphasis role="keywordtype">float</emphasis>&#32;radius,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;mustBeWalkable&#32;=&#32;<emphasis role="keyword">true</emphasis>,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;los&#32;=&#32;<emphasis role="keyword">true</emphasis>)
<anchor xml:id="__map_8cs_source_1l02376"/>02376 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02377"/>02377 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;List&lt;Point&gt;&#32;list&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;Point&gt;();
<anchor xml:id="__map_8cs_source_1l02378"/>02378 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.ForeachSphere(center.x,&#32;center.z,&#32;radius,&#32;delegate(<link linkend="_class_point">Point</link>&#32;p)
<anchor xml:id="__map_8cs_source_1l02379"/>02379 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02380"/>02380 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((!mustBeWalkable&#32;||&#32;!p.cell.blocked)&#32;&amp;&amp;&#32;(!los&#32;||&#32;<link linkend="_class_los">Los</link>.IsVisible(center,&#32;p,&#32;<emphasis role="keyword">null</emphasis>)))
<anchor xml:id="__map_8cs_source_1l02381"/>02381 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02382"/>02382 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;list.Add(p.Copy());
<anchor xml:id="__map_8cs_source_1l02383"/>02383 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02384"/>02384 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__map_8cs_source_1l02385"/>02385 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;list;
<anchor xml:id="__map_8cs_source_1l02386"/>02386 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02387"/>02387 
<anchor xml:id="__map_8cs_source_1l02388"/>02388 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F59&#32;RID:&#32;12121&#32;RVA:&#32;0x0010B5A0&#32;File&#32;Offset:&#32;0x001097A0</emphasis>
<anchor xml:id="__map_8cs_source_1l02389"/>02389 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;List&lt;Chara&gt;&#32;ListCharasInCircle(<link linkend="_class_point">Point</link>&#32;center,&#32;<emphasis role="keywordtype">float</emphasis>&#32;radius,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;los&#32;=&#32;<emphasis role="keyword">true</emphasis>)
<anchor xml:id="__map_8cs_source_1l02390"/>02390 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02391"/>02391 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;List&lt;Chara&gt;&#32;list&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;Chara&gt;();
<anchor xml:id="__map_8cs_source_1l02392"/>02392 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_point">Point</link>&#32;point&#32;<emphasis role="keywordflow">in</emphasis>&#32;this.ListPointsInCircle(center,&#32;radius,&#32;<emphasis role="keyword">false</emphasis>,&#32;los))
<anchor xml:id="__map_8cs_source_1l02393"/>02393 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02394"/>02394 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_cell_detail">CellDetail</link>&#32;detail&#32;=&#32;point.detail;
<anchor xml:id="__map_8cs_source_1l02395"/>02395 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(detail&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;detail.charas.Count&#32;&gt;&#32;0)
<anchor xml:id="__map_8cs_source_1l02396"/>02396 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02397"/>02397 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_chara">Chara</link>&#32;item&#32;<emphasis role="keywordflow">in</emphasis>&#32;point.detail.charas)
<anchor xml:id="__map_8cs_source_1l02398"/>02398 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02399"/>02399 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;list.Add(item);
<anchor xml:id="__map_8cs_source_1l02400"/>02400 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02401"/>02401 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02402"/>02402 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02403"/>02403 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;list;
<anchor xml:id="__map_8cs_source_1l02404"/>02404 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02405"/>02405 
<anchor xml:id="__map_8cs_source_1l02406"/>02406 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F5A&#32;RID:&#32;12122&#32;RVA:&#32;0x0010B65C&#32;File&#32;Offset:&#32;0x0010985C</emphasis>
<anchor xml:id="__map_8cs_source_1l02407"/>02407 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;List&lt;Point&gt;&#32;ListPointsInArc(<link linkend="_class_point">Point</link>&#32;center,&#32;<link linkend="_class_point">Point</link>&#32;to,&#32;<emphasis role="keywordtype">int</emphasis>&#32;radius,&#32;<emphasis role="keywordtype">float</emphasis>&#32;angle)
<anchor xml:id="__map_8cs_source_1l02408"/>02408 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02409"/>02409 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_point">Point</link>&#32;to2&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_point">Point</link>((to.x&#32;&gt;&#32;center.x)&#32;?&#32;1&#32;:&#32;((to.x&#32;&lt;&#32;center.x)&#32;?&#32;-1&#32;:&#32;0),&#32;(to.z&#32;&gt;&#32;center.z)&#32;?&#32;1&#32;:&#32;((to.z&#32;&lt;&#32;center.z)&#32;?&#32;-1&#32;:&#32;0));
<anchor xml:id="__map_8cs_source_1l02410"/>02410 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_point">Point</link>&#32;point&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_point">Point</link>(0,&#32;0);
<anchor xml:id="__map_8cs_source_1l02411"/>02411 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;List&lt;Point&gt;&#32;list&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;Point&gt;();
<anchor xml:id="__map_8cs_source_1l02412"/>02412 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;diff&#32;=&#32;point.GetAngle2(to2);
<anchor xml:id="__map_8cs_source_1l02413"/>02413 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.ForeachSphere(center.x,&#32;center.z,&#32;(<emphasis role="keywordtype">float</emphasis>)radius,&#32;delegate(<link linkend="_class_point">Point</link>&#32;p)
<anchor xml:id="__map_8cs_source_1l02414"/>02414 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02415"/>02415 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;angle2&#32;=&#32;center.GetAngle2(p);
<anchor xml:id="__map_8cs_source_1l02416"/>02416 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((Mathf.Abs(diff&#32;-&#32;angle2)&#32;&lt;&#32;angle&#32;||&#32;Mathf.Abs(diff&#32;-&#32;angle2&#32;+&#32;360f)&#32;&lt;&#32;angle&#32;||&#32;Mathf.Abs(360f&#32;-&#32;diff&#32;+&#32;angle2)&#32;&lt;&#32;angle)&#32;&amp;&amp;&#32;<link linkend="_class_los">Los</link>.IsVisible(center,&#32;p,&#32;<emphasis role="keyword">null</emphasis>)&#32;&amp;&amp;&#32;!p.IsBlocked)
<anchor xml:id="__map_8cs_source_1l02417"/>02417 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02418"/>02418 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;list.Add(p.Copy());
<anchor xml:id="__map_8cs_source_1l02419"/>02419 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02420"/>02420 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__map_8cs_source_1l02421"/>02421 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;list;
<anchor xml:id="__map_8cs_source_1l02422"/>02422 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02423"/>02423 
<anchor xml:id="__map_8cs_source_1l02424"/>02424 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F5B&#32;RID:&#32;12123&#32;RVA:&#32;0x0010B72E&#32;File&#32;Offset:&#32;0x0010992E</emphasis>
<anchor xml:id="__map_8cs_source_1l02425"/>02425 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;List&lt;Point&gt;&#32;ListPointsInLine(<link linkend="_class_point">Point</link>&#32;center,&#32;<link linkend="_class_point">Point</link>&#32;to,&#32;<emphasis role="keywordtype">int</emphasis>&#32;radius)
<anchor xml:id="__map_8cs_source_1l02426"/>02426 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02427"/>02427 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_los">Los</link>.ListVisible(center,&#32;to,&#32;radius,&#32;<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__map_8cs_source_1l02428"/>02428 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02429"/>02429 
<anchor xml:id="__map_8cs_source_1l02430"/>02430 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F5C&#32;RID:&#32;12124&#32;RVA:&#32;0x0010B73C&#32;File&#32;Offset:&#32;0x0010993C</emphasis>
<anchor xml:id="__map_8cs_source_1l02431"/>02431 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;SetBounds(<emphasis role="keywordtype">int</emphasis>&#32;size)
<anchor xml:id="__map_8cs_source_1l02432"/>02432 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02433"/>02433 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(size&#32;&gt;&#32;this.Size&#32;/&#32;2&#32;+&#32;1)
<anchor xml:id="__map_8cs_source_1l02434"/>02434 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02435"/>02435 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;size&#32;=&#32;this.Size&#32;/&#32;2&#32;-&#32;1;
<anchor xml:id="__map_8cs_source_1l02436"/>02436 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02437"/>02437 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.bounds.SetBounds(this.Size&#32;/&#32;2&#32;-&#32;size,&#32;this.Size&#32;/&#32;2&#32;-&#32;size,&#32;this.Size&#32;/&#32;2&#32;+&#32;size,&#32;this.Size&#32;/&#32;2&#32;+&#32;size);
<anchor xml:id="__map_8cs_source_1l02438"/>02438 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02439"/>02439 
<anchor xml:id="__map_8cs_source_1l02440"/>02440 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F5D&#32;RID:&#32;12125&#32;RVA:&#32;0x0010B795&#32;File&#32;Offset:&#32;0x00109995</emphasis>
<anchor xml:id="__map_8cs_source_1l02441"/>02441 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;SetBounds(<link linkend="_class_map_bounds">MapBounds</link>&#32;b)
<anchor xml:id="__map_8cs_source_1l02442"/>02442 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02443"/>02443 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.bounds.SetBounds(b.x,&#32;b.z,&#32;b.maxX,&#32;b.maxZ);
<anchor xml:id="__map_8cs_source_1l02444"/>02444 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.bounds.Size&#32;=&#32;b.Size;
<anchor xml:id="__map_8cs_source_1l02445"/>02445 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02446"/>02446 
<anchor xml:id="__map_8cs_source_1l02447"/>02447 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F5E&#32;RID:&#32;12126&#32;RVA:&#32;0x0010B7CC&#32;File&#32;Offset:&#32;0x001099CC</emphasis>
<anchor xml:id="__map_8cs_source_1l02448"/>02448 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;ForeachCell(Action&lt;Cell&gt;&#32;action)
<anchor xml:id="__map_8cs_source_1l02449"/>02449 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02450"/>02450 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;this.Size;&#32;i++)
<anchor xml:id="__map_8cs_source_1l02451"/>02451 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02452"/>02452 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;j&#32;=&#32;0;&#32;j&#32;&lt;&#32;this.Size;&#32;j++)
<anchor xml:id="__map_8cs_source_1l02453"/>02453 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02454"/>02454 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;action(this.cells[i,&#32;j]);
<anchor xml:id="__map_8cs_source_1l02455"/>02455 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02456"/>02456 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02457"/>02457 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02458"/>02458 
<anchor xml:id="__map_8cs_source_1l02459"/>02459 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F5F&#32;RID:&#32;12127&#32;RVA:&#32;0x0010B810&#32;File&#32;Offset:&#32;0x00109A10</emphasis>
<anchor xml:id="__map_8cs_source_1l02460"/>02460 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;ForeachPoint(Action&lt;Point&gt;&#32;action)
<anchor xml:id="__map_8cs_source_1l02461"/>02461 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02462"/>02462 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_point">Point</link>&#32;point&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_point">Point</link>();
<anchor xml:id="__map_8cs_source_1l02463"/>02463 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;this.Size;&#32;i++)
<anchor xml:id="__map_8cs_source_1l02464"/>02464 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02465"/>02465 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;j&#32;=&#32;0;&#32;j&#32;&lt;&#32;this.Size;&#32;j++)
<anchor xml:id="__map_8cs_source_1l02466"/>02466 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02467"/>02467 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;action(point.Set(i,&#32;j));
<anchor xml:id="__map_8cs_source_1l02468"/>02468 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02469"/>02469 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02470"/>02470 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02471"/>02471 
<anchor xml:id="__map_8cs_source_1l02472"/>02472 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F60&#32;RID:&#32;12128&#32;RVA:&#32;0x0010B854&#32;File&#32;Offset:&#32;0x00109A54</emphasis>
<anchor xml:id="__map_8cs_source_1l02473"/>02473 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;ForeachXYZ(Action&lt;int,&#32;int&gt;&#32;action)
<anchor xml:id="__map_8cs_source_1l02474"/>02474 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02475"/>02475 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;this.Size;&#32;i++)
<anchor xml:id="__map_8cs_source_1l02476"/>02476 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02477"/>02477 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;j&#32;=&#32;0;&#32;j&#32;&lt;&#32;this.Size;&#32;j++)
<anchor xml:id="__map_8cs_source_1l02478"/>02478 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02479"/>02479 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;action(i,&#32;j);
<anchor xml:id="__map_8cs_source_1l02480"/>02480 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02481"/>02481 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02482"/>02482 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02483"/>02483 
<anchor xml:id="__map_8cs_source_1l02484"/>02484 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F61&#32;RID:&#32;12129&#32;RVA:&#32;0x0010B88C&#32;File&#32;Offset:&#32;0x00109A8C</emphasis>
<anchor xml:id="__map_8cs_source_1l02485"/>02485 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;ForeachSphere(<emphasis role="keywordtype">int</emphasis>&#32;_x,&#32;<emphasis role="keywordtype">int</emphasis>&#32;_z,&#32;<emphasis role="keywordtype">float</emphasis>&#32;r,&#32;Action&lt;Point&gt;&#32;action)
<anchor xml:id="__map_8cs_source_1l02486"/>02486 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02487"/>02487 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_point">Point</link>&#32;point&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_point">Point</link>();
<anchor xml:id="__map_8cs_source_1l02488"/>02488 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;num&#32;=&#32;(int)Mathf.Ceil(r);
<anchor xml:id="__map_8cs_source_1l02489"/>02489 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;_x&#32;-&#32;num;&#32;i&#32;&lt;&#32;_x&#32;+&#32;num&#32;+&#32;1;&#32;i++)
<anchor xml:id="__map_8cs_source_1l02490"/>02490 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02491"/>02491 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(i&#32;&gt;=&#32;0&#32;&amp;&amp;&#32;i&#32;&lt;&#32;this.Size)
<anchor xml:id="__map_8cs_source_1l02492"/>02492 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02493"/>02493 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;j&#32;=&#32;_z&#32;-&#32;num;&#32;j&#32;&lt;&#32;_z&#32;+&#32;num&#32;+&#32;1;&#32;j++)
<anchor xml:id="__map_8cs_source_1l02494"/>02494 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02495"/>02495 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(j&#32;&gt;=&#32;0&#32;&amp;&amp;&#32;j&#32;&lt;&#32;this.Size&#32;&amp;&amp;&#32;(<emphasis role="keywordtype">float</emphasis>)((i&#32;-&#32;_x)&#32;*&#32;(i&#32;-&#32;_x)&#32;+&#32;(j&#32;-&#32;_z)&#32;*&#32;(j&#32;-&#32;_z))&#32;&lt;&#32;r&#32;*&#32;r)
<anchor xml:id="__map_8cs_source_1l02496"/>02496 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02497"/>02497 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;point.Set(i,&#32;j);
<anchor xml:id="__map_8cs_source_1l02498"/>02498 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;action(point);
<anchor xml:id="__map_8cs_source_1l02499"/>02499 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02500"/>02500 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02501"/>02501 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02502"/>02502 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02503"/>02503 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02504"/>02504 
<anchor xml:id="__map_8cs_source_1l02505"/>02505 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F62&#32;RID:&#32;12130&#32;RVA:&#32;0x0010B90C&#32;File&#32;Offset:&#32;0x00109B0C</emphasis>
<anchor xml:id="__map_8cs_source_1l02506"/>02506 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;ForeachNeighbor(<link linkend="_class_point">Point</link>&#32;center,&#32;Action&lt;Point&gt;&#32;action)
<anchor xml:id="__map_8cs_source_1l02507"/>02507 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02508"/>02508 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;x&#32;=&#32;center.x;
<anchor xml:id="__map_8cs_source_1l02509"/>02509 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;z&#32;=&#32;center.z;
<anchor xml:id="__map_8cs_source_1l02510"/>02510 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_point">Point</link>&#32;point&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_point">Point</link>();
<anchor xml:id="__map_8cs_source_1l02511"/>02511 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;x&#32;-&#32;1;&#32;i&#32;&lt;&#32;x&#32;+&#32;2;&#32;i++)
<anchor xml:id="__map_8cs_source_1l02512"/>02512 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02513"/>02513 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(i&#32;&gt;=&#32;0&#32;&amp;&amp;&#32;i&#32;&lt;&#32;this.Size)
<anchor xml:id="__map_8cs_source_1l02514"/>02514 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02515"/>02515 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;j&#32;=&#32;z&#32;-&#32;1;&#32;j&#32;&lt;&#32;z&#32;+&#32;2;&#32;j++)
<anchor xml:id="__map_8cs_source_1l02516"/>02516 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02517"/>02517 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(j&#32;&gt;=&#32;0&#32;&amp;&amp;&#32;j&#32;&lt;&#32;this.Size)
<anchor xml:id="__map_8cs_source_1l02518"/>02518 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02519"/>02519 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;point.Set(i,&#32;j);
<anchor xml:id="__map_8cs_source_1l02520"/>02520 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;action(point);
<anchor xml:id="__map_8cs_source_1l02521"/>02521 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02522"/>02522 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02523"/>02523 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02524"/>02524 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02525"/>02525 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02526"/>02526 
<anchor xml:id="__map_8cs_source_1l02527"/>02527 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F63&#32;RID:&#32;12131&#32;RVA:&#32;0x0010B980&#32;File&#32;Offset:&#32;0x00109B80</emphasis>
<anchor xml:id="__map_8cs_source_1l02528"/>02528 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Quake()
<anchor xml:id="__map_8cs_source_1l02529"/>02529 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02530"/>02530 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_point">Point</link>&#32;point&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_point">Point</link>();
<anchor xml:id="__map_8cs_source_1l02531"/>02531 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;this.Size;&#32;i++)
<anchor xml:id="__map_8cs_source_1l02532"/>02532 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02533"/>02533 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;j&#32;=&#32;0;&#32;j&#32;&lt;&#32;this.Size;&#32;j++)
<anchor xml:id="__map_8cs_source_1l02534"/>02534 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02535"/>02535 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;point.x&#32;=&#32;i;
<anchor xml:id="__map_8cs_source_1l02536"/>02536 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;point.z&#32;=&#32;j;
<anchor xml:id="__map_8cs_source_1l02537"/>02537 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;point.Copy().Animate(AnimeID.Quake,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__map_8cs_source_1l02538"/>02538 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;j&#32;+=&#32;<link linkend="_class_e_class">EClass</link>.rnd(2);
<anchor xml:id="__map_8cs_source_1l02539"/>02539 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02540"/>02540 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;i&#32;+=&#32;<link linkend="_class_e_class">EClass</link>.rnd(2);
<anchor xml:id="__map_8cs_source_1l02541"/>02541 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02542"/>02542 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02543"/>02543 
<anchor xml:id="__map_8cs_source_1l02544"/>02544 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F64&#32;RID:&#32;12132&#32;RVA:&#32;0x0010B9E4&#32;File&#32;Offset:&#32;0x00109BE4</emphasis>
<anchor xml:id="__map_8cs_source_1l02545"/>02545 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;CountChara(<link linkend="_class_faction">Faction</link>&#32;faction)
<anchor xml:id="__map_8cs_source_1l02546"/>02546 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02547"/>02547 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;num&#32;=&#32;0;
<anchor xml:id="__map_8cs_source_1l02548"/>02548 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;(List&lt;Chara&gt;.Enumerator&#32;enumerator&#32;=&#32;this.charas.GetEnumerator())
<anchor xml:id="__map_8cs_source_1l02549"/>02549 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02550"/>02550 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(enumerator.MoveNext())
<anchor xml:id="__map_8cs_source_1l02551"/>02551 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02552"/>02552 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(enumerator.Current.faction&#32;==&#32;faction)
<anchor xml:id="__map_8cs_source_1l02553"/>02553 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02554"/>02554 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num++;
<anchor xml:id="__map_8cs_source_1l02555"/>02555 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02556"/>02556 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02557"/>02557 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02558"/>02558 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;num;
<anchor xml:id="__map_8cs_source_1l02559"/>02559 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02560"/>02560 
<anchor xml:id="__map_8cs_source_1l02561"/>02561 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F65&#32;RID:&#32;12133&#32;RVA:&#32;0x0010BA40&#32;File&#32;Offset:&#32;0x00109C40</emphasis>
<anchor xml:id="__map_8cs_source_1l02562"/>02562 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;CountGuest()
<anchor xml:id="__map_8cs_source_1l02563"/>02563 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02564"/>02564 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;num&#32;=&#32;0;
<anchor xml:id="__map_8cs_source_1l02565"/>02565 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;(List&lt;Chara&gt;.Enumerator&#32;enumerator&#32;=&#32;this.charas.GetEnumerator())
<anchor xml:id="__map_8cs_source_1l02566"/>02566 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02567"/>02567 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(enumerator.MoveNext())
<anchor xml:id="__map_8cs_source_1l02568"/>02568 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02569"/>02569 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(enumerator.Current.IsGuest())
<anchor xml:id="__map_8cs_source_1l02570"/>02570 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02571"/>02571 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num++;
<anchor xml:id="__map_8cs_source_1l02572"/>02572 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02573"/>02573 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02574"/>02574 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02575"/>02575 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;num;
<anchor xml:id="__map_8cs_source_1l02576"/>02576 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02577"/>02577 
<anchor xml:id="__map_8cs_source_1l02578"/>02578 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F66&#32;RID:&#32;12134&#32;RVA:&#32;0x0010BA9C&#32;File&#32;Offset:&#32;0x00109C9C</emphasis>
<anchor xml:id="__map_8cs_source_1l02579"/>02579 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;CountHostile()
<anchor xml:id="__map_8cs_source_1l02580"/>02580 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02581"/>02581 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;num&#32;=&#32;0;
<anchor xml:id="__map_8cs_source_1l02582"/>02582 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_chara">Chara</link>&#32;chara&#32;<emphasis role="keywordflow">in</emphasis>&#32;this.charas)
<anchor xml:id="__map_8cs_source_1l02583"/>02583 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02584"/>02584 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!chara.IsPCFaction&#32;&amp;&amp;&#32;chara.IsHostile())
<anchor xml:id="__map_8cs_source_1l02585"/>02585 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02586"/>02586 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num++;
<anchor xml:id="__map_8cs_source_1l02587"/>02587 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02588"/>02588 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02589"/>02589 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;num;
<anchor xml:id="__map_8cs_source_1l02590"/>02590 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02591"/>02591 
<anchor xml:id="__map_8cs_source_1l02592"/>02592 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F67&#32;RID:&#32;12135&#32;RVA:&#32;0x0010BB00&#32;File&#32;Offset:&#32;0x00109D00</emphasis>
<anchor xml:id="__map_8cs_source_1l02593"/>02593 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;CountWildAnimal()
<anchor xml:id="__map_8cs_source_1l02594"/>02594 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02595"/>02595 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;num&#32;=&#32;0;
<anchor xml:id="__map_8cs_source_1l02596"/>02596 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_chara">Chara</link>&#32;chara&#32;<emphasis role="keywordflow">in</emphasis>&#32;this.charas)
<anchor xml:id="__map_8cs_source_1l02597"/>02597 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02598"/>02598 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!chara.IsPCFaction&#32;&amp;&amp;&#32;chara.race.IsAnimal)
<anchor xml:id="__map_8cs_source_1l02599"/>02599 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02600"/>02600 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num++;
<anchor xml:id="__map_8cs_source_1l02601"/>02601 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02602"/>02602 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02603"/>02603 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;num;
<anchor xml:id="__map_8cs_source_1l02604"/>02604 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02605"/>02605 
<anchor xml:id="__map_8cs_source_1l02606"/>02606 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F68&#32;RID:&#32;12136&#32;RVA:&#32;0x0010BB68&#32;File&#32;Offset:&#32;0x00109D68</emphasis>
<anchor xml:id="__map_8cs_source_1l02607"/>02607 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;CountNonHostile()
<anchor xml:id="__map_8cs_source_1l02608"/>02608 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02609"/>02609 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;num&#32;=&#32;0;
<anchor xml:id="__map_8cs_source_1l02610"/>02610 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_chara">Chara</link>&#32;chara&#32;<emphasis role="keywordflow">in</emphasis>&#32;this.charas)
<anchor xml:id="__map_8cs_source_1l02611"/>02611 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02612"/>02612 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!chara.IsPCFaction&#32;&amp;&amp;&#32;!chara.IsHostile())
<anchor xml:id="__map_8cs_source_1l02613"/>02613 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02614"/>02614 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num++;
<anchor xml:id="__map_8cs_source_1l02615"/>02615 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02616"/>02616 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02617"/>02617 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;num;
<anchor xml:id="__map_8cs_source_1l02618"/>02618 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02619"/>02619 
<anchor xml:id="__map_8cs_source_1l02620"/>02620 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F69&#32;RID:&#32;12137&#32;RVA:&#32;0x0010BBCC&#32;File&#32;Offset:&#32;0x00109DCC</emphasis>
<anchor xml:id="__map_8cs_source_1l02621"/>02621 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;List&lt;Chara&gt;&#32;ListChara(<link linkend="_class_faction">Faction</link>&#32;faction)
<anchor xml:id="__map_8cs_source_1l02622"/>02622 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02623"/>02623 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;List&lt;Chara&gt;&#32;list&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;Chara&gt;();
<anchor xml:id="__map_8cs_source_1l02624"/>02624 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_chara">Chara</link>&#32;chara&#32;<emphasis role="keywordflow">in</emphasis>&#32;this.charas)
<anchor xml:id="__map_8cs_source_1l02625"/>02625 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02626"/>02626 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(chara.faction&#32;==&#32;faction)
<anchor xml:id="__map_8cs_source_1l02627"/>02627 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02628"/>02628 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;list.Add(chara);
<anchor xml:id="__map_8cs_source_1l02629"/>02629 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02630"/>02630 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02631"/>02631 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;list;
<anchor xml:id="__map_8cs_source_1l02632"/>02632 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02633"/>02633 
<anchor xml:id="__map_8cs_source_1l02634"/>02634 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F6A&#32;RID:&#32;12138&#32;RVA:&#32;0x0010BC30&#32;File&#32;Offset:&#32;0x00109E30</emphasis>
<anchor xml:id="__map_8cs_source_1l02635"/>02635 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;List&lt;Thing&gt;&#32;ListThing&lt;T&gt;()&#32;where&#32;T&#32;:&#32;<link linkend="_class_trait">Trait</link>
<anchor xml:id="__map_8cs_source_1l02636"/>02636 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02637"/>02637 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;List&lt;Thing&gt;&#32;list&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;Thing&gt;();
<anchor xml:id="__map_8cs_source_1l02638"/>02638 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_thing">Thing</link>&#32;thing&#32;<emphasis role="keywordflow">in</emphasis>&#32;this.things)
<anchor xml:id="__map_8cs_source_1l02639"/>02639 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02640"/>02640 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(thing.IsInstalled&#32;&amp;&amp;&#32;thing.trait&#32;is&#32;T)
<anchor xml:id="__map_8cs_source_1l02641"/>02641 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02642"/>02642 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;list.Add(thing);
<anchor xml:id="__map_8cs_source_1l02643"/>02643 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02644"/>02644 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02645"/>02645 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;list;
<anchor xml:id="__map_8cs_source_1l02646"/>02646 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02647"/>02647 
<anchor xml:id="__map_8cs_source_1l02648"/>02648 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F6B&#32;RID:&#32;12139&#32;RVA:&#32;0x0010BCA0&#32;File&#32;Offset:&#32;0x00109EA0</emphasis>
<anchor xml:id="__map_8cs_source_1l02649"/>02649 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;PutAway(<link linkend="_class_card">Card</link>&#32;c)
<anchor xml:id="__map_8cs_source_1l02650"/>02650 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02651"/>02651 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(c.IsPC&#32;||&#32;(c.trait.CanOnlyCarry&#32;&amp;&amp;&#32;!<link linkend="_class_e_class">EClass</link>.debug.ignoreBuildRule))
<anchor xml:id="__map_8cs_source_1l02652"/>02652 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02653"/>02653 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__map_8cs_source_1l02654"/>02654 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02655"/>02655 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(c.isChara)
<anchor xml:id="__map_8cs_source_1l02656"/>02656 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02657"/>02657 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_e_class">EClass</link>.debug.ignoreBuildRule)
<anchor xml:id="__map_8cs_source_1l02658"/>02658 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02659"/>02659 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__map_8cs_source_1l02660"/>02660 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02661"/>02661 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;c.Destroy();
<anchor xml:id="__map_8cs_source_1l02662"/>02662 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__map_8cs_source_1l02663"/>02663 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02664"/>02664 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__map_8cs_source_1l02665"/>02665 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02666"/>02666 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_thing">Thing</link>&#32;thing&#32;=&#32;c.Thing;
<anchor xml:id="__map_8cs_source_1l02667"/>02667 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(thing.parent&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__map_8cs_source_1l02668"/>02668 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02669"/>02669 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;thing.parent.RemoveCard(thing);
<anchor xml:id="__map_8cs_source_1l02670"/>02670 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02671"/>02671 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;thing.isMasked&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__map_8cs_source_1l02672"/>02672 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;thing.isRoofItem&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__map_8cs_source_1l02673"/>02673 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_e_class">EClass</link>._zone.IsPCFaction&#32;&amp;&amp;&#32;<link linkend="_class_e_class">EClass</link>._map.props.installed.traits.GetRandomThing&lt;<link linkend="_class_trait_spot_stockpile">TraitSpotStockpile</link>&gt;()&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__map_8cs_source_1l02674"/>02674 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02675"/>02675 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_e_class">EClass</link>._zone.TryAddThingInSpot&lt;<link linkend="_class_trait_spot_stockpile">TraitSpotStockpile</link>&gt;(thing,&#32;<emphasis role="keyword">true</emphasis>,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__map_8cs_source_1l02676"/>02676 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__map_8cs_source_1l02677"/>02677 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02678"/>02678 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_e_class">EClass</link>.debug.enable)
<anchor xml:id="__map_8cs_source_1l02679"/>02679 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02680"/>02680 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_e_class">EClass</link>.debug.GetOrCreateDebugContainer().AddThing(thing,&#32;<emphasis role="keyword">true</emphasis>,&#32;-1,&#32;-1);
<anchor xml:id="__map_8cs_source_1l02681"/>02681 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__map_8cs_source_1l02682"/>02682 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02683"/>02683 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_e_class">EClass</link>.pc.Pick(thing,&#32;<emphasis role="keyword">false</emphasis>,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__map_8cs_source_1l02684"/>02684 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__map_8cs_source_1l02685"/>02685 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02686"/>02686 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02687"/>02687 
<anchor xml:id="__map_8cs_source_1l02688"/>02688 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F6C&#32;RID:&#32;12140&#32;RVA:&#32;0x0010BD80&#32;File&#32;Offset:&#32;0x00109F80</emphasis>
<anchor xml:id="__map_8cs_source_1l02689"/>02689 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_chara">Chara</link>&#32;FindChara(<emphasis role="keywordtype">string</emphasis>&#32;<emphasis role="keywordtype">id</emphasis>)
<anchor xml:id="__map_8cs_source_1l02690"/>02690 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02691"/>02691 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_chara">Chara</link>&#32;chara&#32;<emphasis role="keywordflow">in</emphasis>&#32;this.charas)
<anchor xml:id="__map_8cs_source_1l02692"/>02692 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02693"/>02693 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(chara.id&#32;==&#32;<emphasis role="keywordtype">id</emphasis>)
<anchor xml:id="__map_8cs_source_1l02694"/>02694 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02695"/>02695 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;chara;
<anchor xml:id="__map_8cs_source_1l02696"/>02696 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02697"/>02697 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02698"/>02698 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__map_8cs_source_1l02699"/>02699 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02700"/>02700 
<anchor xml:id="__map_8cs_source_1l02701"/>02701 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F6D&#32;RID:&#32;12141&#32;RVA:&#32;0x0010BDE4&#32;File&#32;Offset:&#32;0x00109FE4</emphasis>
<anchor xml:id="__map_8cs_source_1l02702"/>02702 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_chara">Chara</link>&#32;FindChara(<emphasis role="keywordtype">int</emphasis>&#32;uid)
<anchor xml:id="__map_8cs_source_1l02703"/>02703 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02704"/>02704 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_chara">Chara</link>&#32;chara&#32;<emphasis role="keywordflow">in</emphasis>&#32;this.charas)
<anchor xml:id="__map_8cs_source_1l02705"/>02705 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02706"/>02706 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(chara.uid&#32;==&#32;uid)
<anchor xml:id="__map_8cs_source_1l02707"/>02707 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02708"/>02708 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;chara;
<anchor xml:id="__map_8cs_source_1l02709"/>02709 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02710"/>02710 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02711"/>02711 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__map_8cs_source_1l02712"/>02712 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02713"/>02713 
<anchor xml:id="__map_8cs_source_1l02714"/>02714 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F6E&#32;RID:&#32;12142&#32;RVA:&#32;0x0010BE40&#32;File&#32;Offset:&#32;0x0010A040</emphasis>
<anchor xml:id="__map_8cs_source_1l02715"/>02715 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_thing">Thing</link>&#32;FindThing(Func&lt;Thing,&#32;bool&gt;&#32;func)
<anchor xml:id="__map_8cs_source_1l02716"/>02716 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02717"/>02717 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_thing">Thing</link>&#32;thing&#32;<emphasis role="keywordflow">in</emphasis>&#32;this.things)
<anchor xml:id="__map_8cs_source_1l02718"/>02718 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02719"/>02719 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(func(thing))
<anchor xml:id="__map_8cs_source_1l02720"/>02720 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02721"/>02721 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;thing;
<anchor xml:id="__map_8cs_source_1l02722"/>02722 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02723"/>02723 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02724"/>02724 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__map_8cs_source_1l02725"/>02725 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02726"/>02726 
<anchor xml:id="__map_8cs_source_1l02727"/>02727 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F6F&#32;RID:&#32;12143&#32;RVA:&#32;0x0010BE9C&#32;File&#32;Offset:&#32;0x0010A09C</emphasis>
<anchor xml:id="__map_8cs_source_1l02728"/>02728 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_thing">Thing</link>&#32;FindThing(<emphasis role="keywordtype">int</emphasis>&#32;uid)
<anchor xml:id="__map_8cs_source_1l02729"/>02729 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02730"/>02730 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_thing">Thing</link>&#32;thing&#32;<emphasis role="keywordflow">in</emphasis>&#32;this.things)
<anchor xml:id="__map_8cs_source_1l02731"/>02731 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02732"/>02732 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(thing.uid&#32;==&#32;uid)
<anchor xml:id="__map_8cs_source_1l02733"/>02733 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02734"/>02734 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;thing;
<anchor xml:id="__map_8cs_source_1l02735"/>02735 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02736"/>02736 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02737"/>02737 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__map_8cs_source_1l02738"/>02738 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02739"/>02739 
<anchor xml:id="__map_8cs_source_1l02740"/>02740 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F70&#32;RID:&#32;12144&#32;RVA:&#32;0x0010BEF8&#32;File&#32;Offset:&#32;0x0010A0F8</emphasis>
<anchor xml:id="__map_8cs_source_1l02741"/>02741 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;T&#32;FindThing&lt;T&gt;()&#32;where&#32;T&#32;:&#32;<link linkend="_class_trait">Trait</link>
<anchor xml:id="__map_8cs_source_1l02742"/>02742 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02743"/>02743 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_thing">Thing</link>&#32;thing&#32;<emphasis role="keywordflow">in</emphasis>&#32;this.things)
<anchor xml:id="__map_8cs_source_1l02744"/>02744 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02745"/>02745 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(thing.trait&#32;is&#32;T)
<anchor xml:id="__map_8cs_source_1l02746"/>02746 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02747"/>02747 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;thing.trait&#32;as&#32;T;
<anchor xml:id="__map_8cs_source_1l02748"/>02748 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02749"/>02749 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02750"/>02750 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keywordflow">default</emphasis>(T);
<anchor xml:id="__map_8cs_source_1l02751"/>02751 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02752"/>02752 
<anchor xml:id="__map_8cs_source_1l02753"/>02753 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F71&#32;RID:&#32;12145&#32;RVA:&#32;0x0010BF70&#32;File&#32;Offset:&#32;0x0010A170</emphasis>
<anchor xml:id="__map_8cs_source_1l02754"/>02754 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_thing">Thing</link>&#32;FindThing(Type&#32;type,&#32;<link linkend="_class_chara">Chara</link>&#32;c&#32;=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__map_8cs_source_1l02755"/>02755 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02756"/>02756 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this._things.Clear();
<anchor xml:id="__map_8cs_source_1l02757"/>02757 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_thing">Thing</link>&#32;thing&#32;<emphasis role="keywordflow">in</emphasis>&#32;<link linkend="_class_e_class">EClass</link>._map.props.installed.things)
<anchor xml:id="__map_8cs_source_1l02758"/>02758 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02759"/>02759 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(type.IsAssignableFrom(thing.trait.GetType())&#32;&amp;&amp;&#32;thing.pos.IsPublicSpace())
<anchor xml:id="__map_8cs_source_1l02760"/>02760 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02761"/>02761 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this._things.Add(thing);
<anchor xml:id="__map_8cs_source_1l02762"/>02762 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02763"/>02763 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02764"/>02764 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this._things.Count&#32;&lt;=&#32;0)
<anchor xml:id="__map_8cs_source_1l02765"/>02765 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02766"/>02766 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__map_8cs_source_1l02767"/>02767 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02768"/>02768 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this._things.RandomItem&lt;<link linkend="_class_thing">Thing</link>&gt;();
<anchor xml:id="__map_8cs_source_1l02769"/>02769 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02770"/>02770 
<anchor xml:id="__map_8cs_source_1l02771"/>02771 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F72&#32;RID:&#32;12146&#32;RVA:&#32;0x0010C01C&#32;File&#32;Offset:&#32;0x0010A21C</emphasis>
<anchor xml:id="__map_8cs_source_1l02772"/>02772 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_thing">Thing</link>&#32;FindThing(Type&#32;type,&#32;<link linkend="_class_base_area">BaseArea</link>&#32;area1,&#32;<link linkend="_class_base_area">BaseArea</link>&#32;area2&#32;=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__map_8cs_source_1l02773"/>02773 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02774"/>02774 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_map">Map</link>.&lt;&gt;c__DisplayClass169_0&#32;CS$&lt;&gt;8__locals1;
<anchor xml:id="__map_8cs_source_1l02775"/>02775 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CS$&lt;&gt;8__locals1.&lt;&gt;4__this&#32;=&#32;<emphasis role="keyword">this</emphasis>;
<anchor xml:id="__map_8cs_source_1l02776"/>02776 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CS$&lt;&gt;8__locals1.type&#32;=&#32;type;
<anchor xml:id="__map_8cs_source_1l02777"/>02777 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(area1&#32;==&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;area2&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__map_8cs_source_1l02778"/>02778 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02779"/>02779 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__map_8cs_source_1l02780"/>02780 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02781"/>02781 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_thing">Thing</link>&#32;thing&#32;=&#32;this.&lt;FindThing&gt;g__Find|169_0(area1,&#32;ref&#32;CS$&lt;&gt;8__locals1);
<anchor xml:id="__map_8cs_source_1l02782"/>02782 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(thing&#32;==&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;area2&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__map_8cs_source_1l02783"/>02783 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02784"/>02784 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;thing&#32;=&#32;this.&lt;FindThing&gt;g__Find|169_0(area2,&#32;ref&#32;CS$&lt;&gt;8__locals1);
<anchor xml:id="__map_8cs_source_1l02785"/>02785 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02786"/>02786 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;thing;
<anchor xml:id="__map_8cs_source_1l02787"/>02787 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02788"/>02788 
<anchor xml:id="__map_8cs_source_1l02789"/>02789 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F73&#32;RID:&#32;12147&#32;RVA:&#32;0x0010C05C&#32;File&#32;Offset:&#32;0x0010A25C</emphasis>
<anchor xml:id="__map_8cs_source_1l02790"/>02790 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_thing">Thing</link>&#32;FindThing(<emphasis role="keywordtype">string</emphasis>&#32;workTag,&#32;<link linkend="_class_base_area">BaseArea</link>&#32;area1&#32;=&#32;<emphasis role="keyword">null</emphasis>,&#32;<link linkend="_class_base_area">BaseArea</link>&#32;area2&#32;=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__map_8cs_source_1l02791"/>02791 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02792"/>02792 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(area1&#32;==&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;area2&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__map_8cs_source_1l02793"/>02793 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02794"/>02794 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__map_8cs_source_1l02795"/>02795 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02796"/>02796 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_thing">Thing</link>&#32;thing&#32;=&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__map_8cs_source_1l02797"/>02797 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_prop_set">PropSet</link>&#32;orCreate&#32;=&#32;<link linkend="_class_e_class">EClass</link>._map.Installed.workMap.GetOrCreate(workTag,&#32;<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__map_8cs_source_1l02798"/>02798 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(area1&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__map_8cs_source_1l02799"/>02799 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02800"/>02800 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;IEnumerable&lt;Card&gt;&#32;enumerable&#32;=&#32;from&#32;a&#32;in&#32;orCreate.Values
<anchor xml:id="__map_8cs_source_1l02801"/>02801 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;where&#32;a.pos.HasRoomOrArea(area1)
<anchor xml:id="__map_8cs_source_1l02802"/>02802 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;select&#32;a;
<anchor xml:id="__map_8cs_source_1l02803"/>02803 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(enumerable.Count&lt;<link linkend="_class_card">Card</link>&gt;()&#32;&gt;&#32;0)
<anchor xml:id="__map_8cs_source_1l02804"/>02804 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02805"/>02805 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;thing&#32;=&#32;(enumerable.RandomItem&lt;<link linkend="_class_card">Card</link>&gt;()&#32;as&#32;<link linkend="_class_thing">Thing</link>);
<anchor xml:id="__map_8cs_source_1l02806"/>02806 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02807"/>02807 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02808"/>02808 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(thing&#32;==&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;area2&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__map_8cs_source_1l02809"/>02809 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02810"/>02810 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;IEnumerable&lt;Card&gt;&#32;enumerable2&#32;=&#32;from&#32;a&#32;in&#32;orCreate.Values
<anchor xml:id="__map_8cs_source_1l02811"/>02811 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;where&#32;a.pos.HasRoomOrArea(area2)
<anchor xml:id="__map_8cs_source_1l02812"/>02812 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;select&#32;a;
<anchor xml:id="__map_8cs_source_1l02813"/>02813 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(enumerable2.Count&lt;<link linkend="_class_card">Card</link>&gt;()&#32;&gt;&#32;0)
<anchor xml:id="__map_8cs_source_1l02814"/>02814 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02815"/>02815 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;thing&#32;=&#32;(enumerable2.RandomItem&lt;<link linkend="_class_card">Card</link>&gt;()&#32;as&#32;<link linkend="_class_thing">Thing</link>);
<anchor xml:id="__map_8cs_source_1l02816"/>02816 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02817"/>02817 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02818"/>02818 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;thing;
<anchor xml:id="__map_8cs_source_1l02819"/>02819 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02820"/>02820 
<anchor xml:id="__map_8cs_source_1l02821"/>02821 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F74&#32;RID:&#32;12148&#32;RVA:&#32;0x0010C11C&#32;File&#32;Offset:&#32;0x0010A31C</emphasis>
<anchor xml:id="__map_8cs_source_1l02822"/>02822 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_thing">Thing</link>&#32;FindThing(<emphasis role="keywordtype">string</emphasis>&#32;workTag,&#32;<link linkend="_class_chara">Chara</link>&#32;c)
<anchor xml:id="__map_8cs_source_1l02823"/>02823 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02824"/>02824 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_thing">Thing</link>&#32;result&#32;=&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__map_8cs_source_1l02825"/>02825 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;IEnumerable&lt;Card&gt;&#32;enumerable&#32;=&#32;from&#32;a&#32;in&#32;<link linkend="_class_e_class">EClass</link>._map.Installed.workMap.GetOrCreate(workTag,&#32;<emphasis role="keyword">null</emphasis>).Values
<anchor xml:id="__map_8cs_source_1l02826"/>02826 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;where&#32;a.pos.IsPublicSpace()
<anchor xml:id="__map_8cs_source_1l02827"/>02827 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;select&#32;a;
<anchor xml:id="__map_8cs_source_1l02828"/>02828 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(enumerable.Count&lt;<link linkend="_class_card">Card</link>&gt;()&#32;&gt;&#32;0)
<anchor xml:id="__map_8cs_source_1l02829"/>02829 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02830"/>02830 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result&#32;=&#32;(enumerable.RandomItem&lt;<link linkend="_class_card">Card</link>&gt;()&#32;as&#32;<link linkend="_class_thing">Thing</link>);
<anchor xml:id="__map_8cs_source_1l02831"/>02831 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02832"/>02832 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;result;
<anchor xml:id="__map_8cs_source_1l02833"/>02833 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02834"/>02834 
<anchor xml:id="__map_8cs_source_1l02835"/>02835 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F75&#32;RID:&#32;12149&#32;RVA:&#32;0x0010C184&#32;File&#32;Offset:&#32;0x0010A384</emphasis>
<anchor xml:id="__map_8cs_source_1l02836"/>02836 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_base_area">BaseArea</link>&#32;FindPublicArea()
<anchor xml:id="__map_8cs_source_1l02837"/>02837 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02838"/>02838 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(from&#32;a&#32;in&#32;this.rooms.listArea.Concat(<emphasis role="keyword">this</emphasis>.rooms.listRoom)
<anchor xml:id="__map_8cs_source_1l02839"/>02839 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;where&#32;a.type.IsPublicArea
<anchor xml:id="__map_8cs_source_1l02840"/>02840 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;select&#32;a).RandomItem&lt;<link linkend="_class_base_area">BaseArea</link>&gt;();
<anchor xml:id="__map_8cs_source_1l02841"/>02841 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02842"/>02842 
<anchor xml:id="__map_8cs_source_1l02843"/>02843 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F76&#32;RID:&#32;12150&#32;RVA:&#32;0x0010C1D8&#32;File&#32;Offset:&#32;0x0010A3D8</emphasis>
<anchor xml:id="__map_8cs_source_1l02844"/>02844 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;RefreshSunMap()
<anchor xml:id="__map_8cs_source_1l02845"/>02845 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02846"/>02846 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_map">Map</link>.isDirtySunMap)
<anchor xml:id="__map_8cs_source_1l02847"/>02847 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02848"/>02848 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_map">Map</link>.sunMap.Clear();
<anchor xml:id="__map_8cs_source_1l02849"/>02849 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_trait">Trait</link>&#32;trait&#32;<emphasis role="keywordflow">in</emphasis>&#32;<link linkend="_class_e_class">EClass</link>._map.props.installed.traits.suns.Values)
<anchor xml:id="__map_8cs_source_1l02850"/>02850 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02851"/>02851 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_point">Point</link>&#32;point&#32;<emphasis role="keywordflow">in</emphasis>&#32;trait.ListPoints(<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keyword">false</emphasis>))
<anchor xml:id="__map_8cs_source_1l02852"/>02852 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02853"/>02853 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_map">Map</link>.sunMap.Add(point.index);
<anchor xml:id="__map_8cs_source_1l02854"/>02854 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02855"/>02855 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02856"/>02856 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Map.isDirtySunMap&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__map_8cs_source_1l02857"/>02857 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02858"/>02858 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02859"/>02859 
<anchor xml:id="__map_8cs_source_1l02860"/>02860 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F7B&#32;RID:&#32;12155&#32;RVA:&#32;0x0010C309&#32;File&#32;Offset:&#32;0x0010A509</emphasis>
<anchor xml:id="__map_8cs_source_1l02861"/>02861 &#32;&#32;&#32;&#32;[CompilerGenerated]
<anchor xml:id="__map_8cs_source_1l02862"/>02862 &#32;&#32;&#32;&#32;<emphasis role="keyword">internal</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;bool&#32;&lt;TryShatter&gt;g__CanCook|99_0(<link linkend="_class_card">Card</link>&#32;c,&#32;ref&#32;<link linkend="_class_map">Map</link>.&lt;&gt;c__DisplayClass99_0&#32;A_1)
<anchor xml:id="__map_8cs_source_1l02863"/>02863 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02864"/>02864 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;A_1.fire&#32;&amp;&amp;&#32;c.IsFood&#32;&amp;&amp;&#32;c.category.IsChildOf(<emphasis role="stringliteral">&quot;foodstuff&quot;</emphasis>);
<anchor xml:id="__map_8cs_source_1l02865"/>02865 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02866"/>02866 
<anchor xml:id="__map_8cs_source_1l02867"/>02867 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F7C&#32;RID:&#32;12156&#32;RVA:&#32;0x0010C32D&#32;File&#32;Offset:&#32;0x0010A52D</emphasis>
<anchor xml:id="__map_8cs_source_1l02868"/>02868 &#32;&#32;&#32;&#32;[CompilerGenerated]
<anchor xml:id="__map_8cs_source_1l02869"/>02869 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;void&#32;&lt;MineObj&gt;g__Pop|119_0(<link linkend="_class_thing">Thing</link>&#32;t,&#32;ref&#32;<link linkend="_class_map">Map</link>.&lt;&gt;c__DisplayClass119_0&#32;A_2)
<anchor xml:id="__map_8cs_source_1l02870"/>02870 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02871"/>02871 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_e_class">EClass</link>.scene.actionMode.IsBuildMode&#32;&amp;&amp;&#32;<link linkend="_class_e_class">EClass</link>.debug.godBuild)
<anchor xml:id="__map_8cs_source_1l02872"/>02872 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02873"/>02873 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_e_class">EClass</link>._map.PutAway(t);
<anchor xml:id="__map_8cs_source_1l02874"/>02874 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__map_8cs_source_1l02875"/>02875 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02876"/>02876 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.TrySmoothPick(A_2.point,&#32;t,&#32;A_2.c);
<anchor xml:id="__map_8cs_source_1l02877"/>02877 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02878"/>02878 
<anchor xml:id="__map_8cs_source_1l02879"/>02879 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002F7D&#32;RID:&#32;12157&#32;RVA:&#32;0x0010C36C&#32;File&#32;Offset:&#32;0x0010A56C</emphasis>
<anchor xml:id="__map_8cs_source_1l02880"/>02880 &#32;&#32;&#32;&#32;[CompilerGenerated]
<anchor xml:id="__map_8cs_source_1l02881"/>02881 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Thing&#32;&lt;FindThing&gt;g__Find|169_0(<link linkend="_class_base_area">BaseArea</link>&#32;area,&#32;ref&#32;<link linkend="_class_map">Map</link>.&lt;&gt;c__DisplayClass169_0&#32;A_2)
<anchor xml:id="__map_8cs_source_1l02882"/>02882 &#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02883"/>02883 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this._things.Clear();
<anchor xml:id="__map_8cs_source_1l02884"/>02884 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_thing">Thing</link>&#32;thing&#32;<emphasis role="keywordflow">in</emphasis>&#32;<link linkend="_class_e_class">EClass</link>._map.props.installed.things)
<anchor xml:id="__map_8cs_source_1l02885"/>02885 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02886"/>02886 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(A_2.type.IsAssignableFrom(thing.trait.GetType())&#32;&amp;&amp;&#32;thing.pos.HasRoomOrArea(area))
<anchor xml:id="__map_8cs_source_1l02887"/>02887 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02888"/>02888 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this._things.Add(thing);
<anchor xml:id="__map_8cs_source_1l02889"/>02889 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02890"/>02890 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02891"/>02891 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this._things.Count&#32;&lt;=&#32;0)
<anchor xml:id="__map_8cs_source_1l02892"/>02892 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__map_8cs_source_1l02893"/>02893 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__map_8cs_source_1l02894"/>02894 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02895"/>02895 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this._things.RandomItem&lt;<link linkend="_class_thing">Thing</link>&gt;();
<anchor xml:id="__map_8cs_source_1l02896"/>02896 &#32;&#32;&#32;&#32;}
<anchor xml:id="__map_8cs_source_1l02897"/>02897 
<anchor xml:id="__map_8cs_source_1l02898"/>02898 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04001A94&#32;RID:&#32;6804</emphasis>
<anchor xml:id="__map_8cs_source_1l02899"/>02899 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;HashSet&lt;int&gt;&#32;sunMap&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;HashSet&lt;int&gt;();
<anchor xml:id="__map_8cs_source_1l02900"/>02900 
<anchor xml:id="__map_8cs_source_1l02901"/>02901 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04001A95&#32;RID:&#32;6805</emphasis>
<anchor xml:id="__map_8cs_source_1l02902"/>02902 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isDirtySunMap;
<anchor xml:id="__map_8cs_source_1l02903"/>02903 
<anchor xml:id="__map_8cs_source_1l02904"/>02904 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04001A96&#32;RID:&#32;6806</emphasis>
<anchor xml:id="__map_8cs_source_1l02905"/>02905 &#32;&#32;&#32;&#32;[JsonProperty]
<anchor xml:id="__map_8cs_source_1l02906"/>02906 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;seed;
<anchor xml:id="__map_8cs_source_1l02907"/>02907 
<anchor xml:id="__map_8cs_source_1l02908"/>02908 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04001A97&#32;RID:&#32;6807</emphasis>
<anchor xml:id="__map_8cs_source_1l02909"/>02909 &#32;&#32;&#32;&#32;[JsonProperty]
<anchor xml:id="__map_8cs_source_1l02910"/>02910 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;_bits;
<anchor xml:id="__map_8cs_source_1l02911"/>02911 
<anchor xml:id="__map_8cs_source_1l02912"/>02912 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04001A98&#32;RID:&#32;6808</emphasis>
<anchor xml:id="__map_8cs_source_1l02913"/>02913 &#32;&#32;&#32;&#32;[JsonProperty]
<anchor xml:id="__map_8cs_source_1l02914"/>02914 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;global::Version&#32;version;
<anchor xml:id="__map_8cs_source_1l02915"/>02915 
<anchor xml:id="__map_8cs_source_1l02916"/>02916 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04001A99&#32;RID:&#32;6809</emphasis>
<anchor xml:id="__map_8cs_source_1l02917"/>02917 &#32;&#32;&#32;&#32;[JsonProperty]
<anchor xml:id="__map_8cs_source_1l02918"/>02918 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_room_manager">RoomManager</link>&#32;rooms&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_room_manager">RoomManager</link>();
<anchor xml:id="__map_8cs_source_1l02919"/>02919 
<anchor xml:id="__map_8cs_source_1l02920"/>02920 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04001A9A&#32;RID:&#32;6810</emphasis>
<anchor xml:id="__map_8cs_source_1l02921"/>02921 &#32;&#32;&#32;&#32;[JsonProperty]
<anchor xml:id="__map_8cs_source_1l02922"/>02922 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_task_manager">TaskManager</link>&#32;tasks&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_task_manager">TaskManager</link>();
<anchor xml:id="__map_8cs_source_1l02923"/>02923 
<anchor xml:id="__map_8cs_source_1l02924"/>02924 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04001A9B&#32;RID:&#32;6811</emphasis>
<anchor xml:id="__map_8cs_source_1l02925"/>02925 &#32;&#32;&#32;&#32;[JsonProperty]
<anchor xml:id="__map_8cs_source_1l02926"/>02926 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_map_config">MapConfig</link>&#32;config&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_map_config">MapConfig</link>();
<anchor xml:id="__map_8cs_source_1l02927"/>02927 
<anchor xml:id="__map_8cs_source_1l02928"/>02928 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04001A9C&#32;RID:&#32;6812</emphasis>
<anchor xml:id="__map_8cs_source_1l02929"/>02929 &#32;&#32;&#32;&#32;[JsonProperty]
<anchor xml:id="__map_8cs_source_1l02930"/>02930 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_custom_data">CustomData</link>&#32;custom;
<anchor xml:id="__map_8cs_source_1l02931"/>02931 
<anchor xml:id="__map_8cs_source_1l02932"/>02932 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04001A9D&#32;RID:&#32;6813</emphasis>
<anchor xml:id="__map_8cs_source_1l02933"/>02933 &#32;&#32;&#32;&#32;[JsonProperty]
<anchor xml:id="__map_8cs_source_1l02934"/>02934 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;List&lt;Chara&gt;&#32;serializedCharas&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;Chara&gt;();
<anchor xml:id="__map_8cs_source_1l02935"/>02935 
<anchor xml:id="__map_8cs_source_1l02936"/>02936 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04001A9E&#32;RID:&#32;6814</emphasis>
<anchor xml:id="__map_8cs_source_1l02937"/>02937 &#32;&#32;&#32;&#32;[JsonProperty]
<anchor xml:id="__map_8cs_source_1l02938"/>02938 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;List&lt;Chara&gt;&#32;deadCharas&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;Chara&gt;();
<anchor xml:id="__map_8cs_source_1l02939"/>02939 
<anchor xml:id="__map_8cs_source_1l02940"/>02940 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04001A9F&#32;RID:&#32;6815</emphasis>
<anchor xml:id="__map_8cs_source_1l02941"/>02941 &#32;&#32;&#32;&#32;[JsonProperty]
<anchor xml:id="__map_8cs_source_1l02942"/>02942 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;List&lt;Thing&gt;&#32;things&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;Thing&gt;();
<anchor xml:id="__map_8cs_source_1l02943"/>02943 
<anchor xml:id="__map_8cs_source_1l02944"/>02944 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04001AA0&#32;RID:&#32;6816</emphasis>
<anchor xml:id="__map_8cs_source_1l02945"/>02945 &#32;&#32;&#32;&#32;[JsonProperty]
<anchor xml:id="__map_8cs_source_1l02946"/>02946 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_map_bounds">MapBounds</link>&#32;bounds&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_map_bounds">MapBounds</link>();
<anchor xml:id="__map_8cs_source_1l02947"/>02947 
<anchor xml:id="__map_8cs_source_1l02948"/>02948 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04001AA1&#32;RID:&#32;6817</emphasis>
<anchor xml:id="__map_8cs_source_1l02949"/>02949 &#32;&#32;&#32;&#32;[JsonProperty]
<anchor xml:id="__map_8cs_source_1l02950"/>02950 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;List&lt;int&gt;&#32;_plDay&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;int&gt;();
<anchor xml:id="__map_8cs_source_1l02951"/>02951 
<anchor xml:id="__map_8cs_source_1l02952"/>02952 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04001AA2&#32;RID:&#32;6818</emphasis>
<anchor xml:id="__map_8cs_source_1l02953"/>02953 &#32;&#32;&#32;&#32;[JsonProperty]
<anchor xml:id="__map_8cs_source_1l02954"/>02954 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;List&lt;int&gt;&#32;_plNight&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;int&gt;();
<anchor xml:id="__map_8cs_source_1l02955"/>02955 
<anchor xml:id="__map_8cs_source_1l02956"/>02956 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04001AA3&#32;RID:&#32;6819</emphasis>
<anchor xml:id="__map_8cs_source_1l02957"/>02957 &#32;&#32;&#32;&#32;[JsonProperty]
<anchor xml:id="__map_8cs_source_1l02958"/>02958 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Dictionary&lt;int,&#32;int&gt;&#32;gatherCounts&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Dictionary&lt;int,&#32;int&gt;();
<anchor xml:id="__map_8cs_source_1l02959"/>02959 
<anchor xml:id="__map_8cs_source_1l02960"/>02960 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04001AA4&#32;RID:&#32;6820</emphasis>
<anchor xml:id="__map_8cs_source_1l02961"/>02961 &#32;&#32;&#32;&#32;[JsonProperty]
<anchor xml:id="__map_8cs_source_1l02962"/>02962 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Dictionary&lt;int,&#32;CellEffect&gt;&#32;cellEffects&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Dictionary&lt;int,&#32;CellEffect&gt;();
<anchor xml:id="__map_8cs_source_1l02963"/>02963 
<anchor xml:id="__map_8cs_source_1l02964"/>02964 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04001AA5&#32;RID:&#32;6821</emphasis>
<anchor xml:id="__map_8cs_source_1l02965"/>02965 &#32;&#32;&#32;&#32;[JsonProperty]
<anchor xml:id="__map_8cs_source_1l02966"/>02966 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Dictionary&lt;int,&#32;int&gt;&#32;backerObjs&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Dictionary&lt;int,&#32;int&gt;();
<anchor xml:id="__map_8cs_source_1l02967"/>02967 
<anchor xml:id="__map_8cs_source_1l02968"/>02968 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04001AA6&#32;RID:&#32;6822</emphasis>
<anchor xml:id="__map_8cs_source_1l02969"/>02969 &#32;&#32;&#32;&#32;[JsonProperty]
<anchor xml:id="__map_8cs_source_1l02970"/>02970 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Dictionary&lt;int,&#32;PlantData&gt;&#32;plants&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Dictionary&lt;int,&#32;PlantData&gt;();
<anchor xml:id="__map_8cs_source_1l02971"/>02971 
<anchor xml:id="__map_8cs_source_1l02972"/>02972 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04001AA7&#32;RID:&#32;6823</emphasis>
<anchor xml:id="__map_8cs_source_1l02973"/>02973 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;BitArray32&#32;bits;
<anchor xml:id="__map_8cs_source_1l02974"/>02974 
<anchor xml:id="__map_8cs_source_1l02975"/>02975 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04001AA8&#32;RID:&#32;6824</emphasis>
<anchor xml:id="__map_8cs_source_1l02976"/>02976 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Playlist&#32;plDay;
<anchor xml:id="__map_8cs_source_1l02977"/>02977 
<anchor xml:id="__map_8cs_source_1l02978"/>02978 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04001AA9&#32;RID:&#32;6825</emphasis>
<anchor xml:id="__map_8cs_source_1l02979"/>02979 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Playlist&#32;plNight;
<anchor xml:id="__map_8cs_source_1l02980"/>02980 
<anchor xml:id="__map_8cs_source_1l02981"/>02981 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04001AAA&#32;RID:&#32;6826</emphasis>
<anchor xml:id="__map_8cs_source_1l02982"/>02982 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;List&lt;Chara&gt;&#32;charas&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;Chara&gt;();
<anchor xml:id="__map_8cs_source_1l02983"/>02983 
<anchor xml:id="__map_8cs_source_1l02984"/>02984 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04001AAB&#32;RID:&#32;6827</emphasis>
<anchor xml:id="__map_8cs_source_1l02985"/>02985 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;List&lt;TransAnime&gt;&#32;pointAnimes&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;TransAnime&gt;();
<anchor xml:id="__map_8cs_source_1l02986"/>02986 
<anchor xml:id="__map_8cs_source_1l02987"/>02987 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04001AAC&#32;RID:&#32;6828</emphasis>
<anchor xml:id="__map_8cs_source_1l02988"/>02988 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_cell">Cell</link>[,]&#32;cells;
<anchor xml:id="__map_8cs_source_1l02989"/>02989 
<anchor xml:id="__map_8cs_source_1l02990"/>02990 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04001AAD&#32;RID:&#32;6829</emphasis>
<anchor xml:id="__map_8cs_source_1l02991"/>02991 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_zone">Zone</link>&#32;zone;
<anchor xml:id="__map_8cs_source_1l02992"/>02992 
<anchor xml:id="__map_8cs_source_1l02993"/>02993 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04001AAE&#32;RID:&#32;6830</emphasis>
<anchor xml:id="__map_8cs_source_1l02994"/>02994 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_cell_effect_manager">CellEffectManager</link>&#32;effectManager&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_cell_effect_manager">CellEffectManager</link>();
<anchor xml:id="__map_8cs_source_1l02995"/>02995 
<anchor xml:id="__map_8cs_source_1l02996"/>02996 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04001AAF&#32;RID:&#32;6831</emphasis>
<anchor xml:id="__map_8cs_source_1l02997"/>02997 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_props_manager">PropsManager</link>&#32;props&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_props_manager">PropsManager</link>();
<anchor xml:id="__map_8cs_source_1l02998"/>02998 
<anchor xml:id="__map_8cs_source_1l02999"/>02999 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04001AB0&#32;RID:&#32;6832</emphasis>
<anchor xml:id="__map_8cs_source_1l03000"/>03000 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;FloodSpiller&#32;flood&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;FloodSpiller();
<anchor xml:id="__map_8cs_source_1l03001"/>03001 
<anchor xml:id="__map_8cs_source_1l03002"/>03002 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04001AB1&#32;RID:&#32;6833</emphasis>
<anchor xml:id="__map_8cs_source_1l03003"/>03003 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_biome_profile">BiomeProfile</link>[,]&#32;biomes;
<anchor xml:id="__map_8cs_source_1l03004"/>03004 
<anchor xml:id="__map_8cs_source_1l03005"/>03005 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04001AB2&#32;RID:&#32;6834</emphasis>
<anchor xml:id="__map_8cs_source_1l03006"/>03006 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_p_o_i_map">POIMap</link>&#32;poiMap;
<anchor xml:id="__map_8cs_source_1l03007"/>03007 
<anchor xml:id="__map_8cs_source_1l03008"/>03008 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04001AB3&#32;RID:&#32;6835</emphasis>
<anchor xml:id="__map_8cs_source_1l03009"/>03009 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;List&lt;Footmark&gt;&#32;footmarks&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;Footmark&gt;();
<anchor xml:id="__map_8cs_source_1l03010"/>03010 
<anchor xml:id="__map_8cs_source_1l03011"/>03011 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04001AB4&#32;RID:&#32;6836</emphasis>
<anchor xml:id="__map_8cs_source_1l03012"/>03012 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_fow_profile">FowProfile</link>&#32;fowProfile;
<anchor xml:id="__map_8cs_source_1l03013"/>03013 
<anchor xml:id="__map_8cs_source_1l03014"/>03014 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04001AB5&#32;RID:&#32;6837</emphasis>
<anchor xml:id="__map_8cs_source_1l03015"/>03015 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;revealed;
<anchor xml:id="__map_8cs_source_1l03016"/>03016 
<anchor xml:id="__map_8cs_source_1l03017"/>03017 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04001AB6&#32;RID:&#32;6838</emphasis>
<anchor xml:id="__map_8cs_source_1l03018"/>03018 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;HashSet&lt;int&gt;&#32;roomHash&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;HashSet&lt;int&gt;();
<anchor xml:id="__map_8cs_source_1l03019"/>03019 
<anchor xml:id="__map_8cs_source_1l03020"/>03020 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04001AB7&#32;RID:&#32;6839</emphasis>
<anchor xml:id="__map_8cs_source_1l03021"/>03021 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;List&lt;Thing&gt;&#32;_things&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;Thing&gt;();
<anchor xml:id="__map_8cs_source_1l03022"/>03022 }
</programlisting></section>
