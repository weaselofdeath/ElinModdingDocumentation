<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__zone_pre_enter_encounter_8cs_source" xml:lang="en-US">
<title>ZonePreEnterEncounter.cs</title>
<indexterm><primary>Elin/ZonePreEnterEncounter.cs</primary></indexterm>
<programlisting linenumbering="unnumbered"><anchor xml:id="__zone_pre_enter_encounter_8cs_source_1l00001"/>00001 <emphasis role="keyword">using&#32;</emphasis>System;
<anchor xml:id="__zone_pre_enter_encounter_8cs_source_1l00002"/>00002 <emphasis role="keyword">using&#32;</emphasis>UnityEngine;
<anchor xml:id="__zone_pre_enter_encounter_8cs_source_1l00003"/>00003 
<anchor xml:id="__zone_pre_enter_encounter_8cs_source_1l00004"/>00004 <emphasis role="comment">//&#32;Token:&#32;0x0200074E&#32;RID:&#32;1870</emphasis>
<anchor xml:id="__zone_pre_enter_encounter_8cs_source_1l00005"/><link linkend="_class_zone_pre_enter_encounter">00005</link> <emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_zone_pre_enter_encounter">ZonePreEnterEncounter</link>&#32;:&#32;<link linkend="_class_zone_pre_enter_event">ZonePreEnterEvent</link>
<anchor xml:id="__zone_pre_enter_encounter_8cs_source_1l00006"/>00006 {
<anchor xml:id="__zone_pre_enter_encounter_8cs_source_1l00007"/>00007 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x0600363F&#32;RID:&#32;13887&#32;RVA:&#32;0x00126860&#32;File&#32;Offset:&#32;0x00124A60</emphasis>
<anchor xml:id="__zone_pre_enter_encounter_8cs_source_1l00008"/>00008 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Execute()
<anchor xml:id="__zone_pre_enter_encounter_8cs_source_1l00009"/>00009 &#32;&#32;&#32;&#32;{
<anchor xml:id="__zone_pre_enter_encounter_8cs_source_1l00010"/>00010 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;flag&#32;=&#32;<link linkend="_class_e_class">EClass</link>.pc.HasCondition&lt;<link linkend="_class_con_draw_metal">ConDrawMetal</link>&gt;();
<anchor xml:id="__zone_pre_enter_encounter_8cs_source_1l00011"/>00011 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;lv&#32;=&#32;Mathf.Max(<link linkend="_class_e_class">EClass</link>._zone.DangerLv,&#32;<link linkend="_class_e_class">EClass</link>.pc.FameLv&#32;*&#32;Math.Min(<emphasis role="keyword">this</emphasis>.roadDist&#32;*&#32;20,&#32;100)&#32;/&#32;100);
<anchor xml:id="__zone_pre_enter_encounter_8cs_source_1l00012"/>00012 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;this.enemies;&#32;i++)
<anchor xml:id="__zone_pre_enter_encounter_8cs_source_1l00013"/>00013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__zone_pre_enter_encounter_8cs_source_1l00014"/>00014 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_point">Point</link>&#32;nearestPoint&#32;=&#32;(<link linkend="_class_e_class">EClass</link>.pc.pos.GetRandomPoint(4,&#32;<emphasis role="keyword">true</emphasis>,&#32;<emphasis role="keyword">true</emphasis>,&#32;<emphasis role="keyword">false</emphasis>,&#32;100)&#32;??&#32;<link linkend="_class_e_class">EClass</link>.pc.pos).GetNearestPoint(<emphasis role="keyword">false</emphasis>,&#32;<emphasis role="keyword">false</emphasis>,&#32;<emphasis role="keyword">true</emphasis>,&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__zone_pre_enter_encounter_8cs_source_1l00015"/>00015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_chara">Chara</link>&#32;chara&#32;=&#32;<link linkend="_class_e_class">EClass</link>._zone.SpawnMob(nearestPoint,&#32;<link linkend="_class_spawn_setting">SpawnSetting</link>.Encounter(lv));
<anchor xml:id="__zone_pre_enter_encounter_8cs_source_1l00016"/>00016 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;chara.hostility&#32;=&#32;(chara.c_originalHostility&#32;=&#32;Hostility.Enemy);
<anchor xml:id="__zone_pre_enter_encounter_8cs_source_1l00017"/>00017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;chara.enemy&#32;=&#32;<link linkend="_class_e_class">EClass</link>.pc.party.members.RandomItem&lt;<link linkend="_class_chara">Chara</link>&gt;();
<anchor xml:id="__zone_pre_enter_encounter_8cs_source_1l00018"/>00018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__zone_pre_enter_encounter_8cs_source_1l00019"/>00019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(flag&#32;&amp;&amp;&#32;<link linkend="_class_e_class">EClass</link>.rnd(<link linkend="_class_e_class">EClass</link>.debug.enable&#32;?&#32;1&#32;:&#32;3)&#32;==&#32;0)
<anchor xml:id="__zone_pre_enter_encounter_8cs_source_1l00020"/>00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__zone_pre_enter_encounter_8cs_source_1l00021"/>00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_point">Point</link>&#32;nearestPoint2&#32;=&#32;(<link linkend="_class_e_class">EClass</link>.pc.pos.GetRandomPoint(4,&#32;<emphasis role="keyword">true</emphasis>,&#32;<emphasis role="keyword">true</emphasis>,&#32;<emphasis role="keyword">false</emphasis>,&#32;100)&#32;??&#32;<link linkend="_class_e_class">EClass</link>.pc.pos).GetNearestPoint(<emphasis role="keyword">false</emphasis>,&#32;<emphasis role="keyword">false</emphasis>,&#32;<emphasis role="keyword">true</emphasis>,&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__zone_pre_enter_encounter_8cs_source_1l00022"/>00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_spawn_list">SpawnList</link>&#32;list&#32;=&#32;<link linkend="_class_spawn_list_chara">SpawnListChara</link>.Get(<emphasis role="stringliteral">&quot;c_metal&quot;</emphasis>,&#32;(<link linkend="_class_source_chara">SourceChara</link>.<link linkend="_class_source_chara_1_1_row">Row</link>&#32;s)&#32;=&gt;&#32;s.race&#32;==&#32;<emphasis role="stringliteral">&quot;metal&quot;</emphasis>);
<anchor xml:id="__zone_pre_enter_encounter_8cs_source_1l00023"/>00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_e_class">EClass</link>._zone.AddCard(<link linkend="_class_chara_gen">CharaGen</link>.CreateFromFilter(list,&#32;<link linkend="_class_e_class">EClass</link>._zone.DangerLv,&#32;-1),&#32;nearestPoint2);
<anchor xml:id="__zone_pre_enter_encounter_8cs_source_1l00024"/>00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__zone_pre_enter_encounter_8cs_source_1l00025"/>00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((<link linkend="_class_e_class">EClass</link>._zone.Tile.isRoad&#32;||&#32;<link linkend="_class_e_class">EClass</link>._zone.Tile.IsNeighborRoad)&#32;&amp;&amp;&#32;<link linkend="_class_e_class">EClass</link>.rnd(2)&#32;==&#32;0)
<anchor xml:id="__zone_pre_enter_encounter_8cs_source_1l00026"/>00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__zone_pre_enter_encounter_8cs_source_1l00027"/>00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_point">Point</link>&#32;nearestPoint3&#32;=&#32;(<link linkend="_class_e_class">EClass</link>.pc.pos.GetRandomPoint(4,&#32;<emphasis role="keyword">true</emphasis>,&#32;<emphasis role="keyword">true</emphasis>,&#32;<emphasis role="keyword">false</emphasis>,&#32;100)&#32;??&#32;<link linkend="_class_e_class">EClass</link>.pc.pos).GetNearestPoint(<emphasis role="keyword">false</emphasis>,&#32;<emphasis role="keyword">false</emphasis>,&#32;<emphasis role="keyword">true</emphasis>,&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__zone_pre_enter_encounter_8cs_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_e_class">EClass</link>._zone.AddCard(<link linkend="_class_chara_gen">CharaGen</link>.Create(<emphasis role="stringliteral">&quot;guard&quot;</emphasis>,&#32;-1),&#32;nearestPoint3);
<anchor xml:id="__zone_pre_enter_encounter_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__zone_pre_enter_encounter_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;}
<anchor xml:id="__zone_pre_enter_encounter_8cs_source_1l00031"/>00031 
<anchor xml:id="__zone_pre_enter_encounter_8cs_source_1l00032"/>00032 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04001CA4&#32;RID:&#32;7332</emphasis>
<anchor xml:id="__zone_pre_enter_encounter_8cs_source_1l00033"/>00033 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;enemies;
<anchor xml:id="__zone_pre_enter_encounter_8cs_source_1l00034"/>00034 
<anchor xml:id="__zone_pre_enter_encounter_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04001CA5&#32;RID:&#32;7333</emphasis>
<anchor xml:id="__zone_pre_enter_encounter_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;roadDist;
<anchor xml:id="__zone_pre_enter_encounter_8cs_source_1l00037"/>00037 }
</programlisting></section>
