<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__con_sleep_8cs_source" xml:lang="en-US">
<title>ConSleep.cs</title>
<indexterm><primary>Elin/ConSleep.cs</primary></indexterm>
<programlisting linenumbering="unnumbered"><anchor xml:id="__con_sleep_8cs_source_1l00001"/>00001 <emphasis role="keyword">using&#32;</emphasis>System;
<anchor xml:id="__con_sleep_8cs_source_1l00002"/>00002 <emphasis role="keyword">using&#32;</emphasis>System.Runtime.CompilerServices;
<anchor xml:id="__con_sleep_8cs_source_1l00003"/>00003 <emphasis role="keyword">using&#32;</emphasis>Newtonsoft.Json;
<anchor xml:id="__con_sleep_8cs_source_1l00004"/>00004 
<anchor xml:id="__con_sleep_8cs_source_1l00005"/>00005 <emphasis role="comment">//&#32;Token:&#32;0x020002C2&#32;RID:&#32;706</emphasis>
<anchor xml:id="__con_sleep_8cs_source_1l00006"/><link linkend="_class_con_sleep">00006</link> <emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_con_sleep">ConSleep</link>&#32;:&#32;<link linkend="_class_bad_condition">BadCondition</link>
<anchor xml:id="__con_sleep_8cs_source_1l00007"/>00007 {
<anchor xml:id="__con_sleep_8cs_source_1l00008"/>00008 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x17000663&#32;RID:&#32;1635</emphasis>
<anchor xml:id="__con_sleep_8cs_source_1l00009"/>00009 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;(get)&#32;Token:&#32;0x060016E0&#32;RID:&#32;5856&#32;RVA:&#32;0x00097363&#32;File&#32;Offset:&#32;0x00095563</emphasis>
<anchor xml:id="__con_sleep_8cs_source_1l00010"/>00010 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;Emo2&#32;EmoIcon
<anchor xml:id="__con_sleep_8cs_source_1l00011"/>00011 &#32;&#32;&#32;&#32;{
<anchor xml:id="__con_sleep_8cs_source_1l00012"/>00012 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
<anchor xml:id="__con_sleep_8cs_source_1l00013"/>00013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__con_sleep_8cs_source_1l00014"/>00014 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Emo2.speeing;
<anchor xml:id="__con_sleep_8cs_source_1l00015"/>00015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__con_sleep_8cs_source_1l00016"/>00016 &#32;&#32;&#32;&#32;}
<anchor xml:id="__con_sleep_8cs_source_1l00017"/>00017 
<anchor xml:id="__con_sleep_8cs_source_1l00018"/>00018 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x060016E1&#32;RID:&#32;5857&#32;RVA:&#32;0x00097367&#32;File&#32;Offset:&#32;0x00095567</emphasis>
<anchor xml:id="__con_sleep_8cs_source_1l00019"/>00019 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;GetPhase()
<anchor xml:id="__con_sleep_8cs_source_1l00020"/>00020 &#32;&#32;&#32;&#32;{
<anchor xml:id="__con_sleep_8cs_source_1l00021"/>00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="__con_sleep_8cs_source_1l00022"/>00022 &#32;&#32;&#32;&#32;}
<anchor xml:id="__con_sleep_8cs_source_1l00023"/>00023 
<anchor xml:id="__con_sleep_8cs_source_1l00024"/>00024 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x17000664&#32;RID:&#32;1636</emphasis>
<anchor xml:id="__con_sleep_8cs_source_1l00025"/>00025 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;(get)&#32;Token:&#32;0x060016E2&#32;RID:&#32;5858&#32;RVA:&#32;0x0009736A&#32;File&#32;Offset:&#32;0x0009556A</emphasis>
<anchor xml:id="__con_sleep_8cs_source_1l00026"/>00026 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;ConsumeTurn
<anchor xml:id="__con_sleep_8cs_source_1l00027"/>00027 &#32;&#32;&#32;&#32;{
<anchor xml:id="__con_sleep_8cs_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
<anchor xml:id="__con_sleep_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__con_sleep_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__con_sleep_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__con_sleep_8cs_source_1l00032"/>00032 &#32;&#32;&#32;&#32;}
<anchor xml:id="__con_sleep_8cs_source_1l00033"/>00033 
<anchor xml:id="__con_sleep_8cs_source_1l00034"/>00034 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x17000665&#32;RID:&#32;1637</emphasis>
<anchor xml:id="__con_sleep_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;(get)&#32;Token:&#32;0x060016E3&#32;RID:&#32;5859&#32;RVA:&#32;0x0009736D&#32;File&#32;Offset:&#32;0x0009556D</emphasis>
<anchor xml:id="__con_sleep_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;CancelAI
<anchor xml:id="__con_sleep_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;{
<anchor xml:id="__con_sleep_8cs_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
<anchor xml:id="__con_sleep_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__con_sleep_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__con_sleep_8cs_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__con_sleep_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;}
<anchor xml:id="__con_sleep_8cs_source_1l00043"/>00043 
<anchor xml:id="__con_sleep_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x060016E4&#32;RID:&#32;5860&#32;RVA:&#32;0x00097370&#32;File&#32;Offset:&#32;0x00095570</emphasis>
<anchor xml:id="__con_sleep_8cs_source_1l00045"/>00045 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;SetOwner(<link linkend="_class_chara">Chara</link>&#32;_owner,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;onDeserialize&#32;=&#32;<emphasis role="keyword">false</emphasis>)
<anchor xml:id="__con_sleep_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;{
<anchor xml:id="__con_sleep_8cs_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;base.SetOwner(_owner,&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__con_sleep_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.owner.conSleep&#32;=&#32;<emphasis role="keyword">this</emphasis>;
<anchor xml:id="__con_sleep_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.owner.renderer&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__con_sleep_8cs_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__con_sleep_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.owner.renderer.RefreshSprite();
<anchor xml:id="__con_sleep_8cs_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__con_sleep_8cs_source_1l00053"/>00053 &#32;&#32;&#32;&#32;}
<anchor xml:id="__con_sleep_8cs_source_1l00054"/>00054 
<anchor xml:id="__con_sleep_8cs_source_1l00055"/>00055 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x060016E5&#32;RID:&#32;5861&#32;RVA:&#32;0x000973A4&#32;File&#32;Offset:&#32;0x000955A4</emphasis>
<anchor xml:id="__con_sleep_8cs_source_1l00056"/>00056 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnBeforeStart()
<anchor xml:id="__con_sleep_8cs_source_1l00057"/>00057 &#32;&#32;&#32;&#32;{
<anchor xml:id="__con_sleep_8cs_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_trait_pillow">TraitPillow</link>&#32;traitPillow&#32;=&#32;this.owner.pos.FindThing&lt;<link linkend="_class_trait_pillow">TraitPillow</link>&gt;();
<anchor xml:id="__con_sleep_8cs_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(traitPillow&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__con_sleep_8cs_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__con_sleep_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.owner.Say(<emphasis role="stringliteral">&quot;pillow&quot;</emphasis>,&#32;this.owner,&#32;traitPillow.owner,&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__con_sleep_8cs_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__con_sleep_8cs_source_1l00063"/>00063 &#32;&#32;&#32;&#32;}
<anchor xml:id="__con_sleep_8cs_source_1l00064"/>00064 
<anchor xml:id="__con_sleep_8cs_source_1l00065"/>00065 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x060016E6&#32;RID:&#32;5862&#32;RVA:&#32;0x000973E4&#32;File&#32;Offset:&#32;0x000955E4</emphasis>
<anchor xml:id="__con_sleep_8cs_source_1l00066"/>00066 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Tick()
<anchor xml:id="__con_sleep_8cs_source_1l00067"/>00067 &#32;&#32;&#32;&#32;{
<anchor xml:id="__con_sleep_8cs_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!this.succubusChecked&#32;&amp;&amp;&#32;<link linkend="_class_e_class">EClass</link>._zone.isStarted&#32;&amp;&amp;&#32;(base.value&#32;&gt;&#32;50&#32;||&#32;<emphasis role="keyword">this</emphasis>.pcSleep&#32;!=&#32;0))
<anchor xml:id="__con_sleep_8cs_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__con_sleep_8cs_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_con_sleep">ConSleep</link>.SuccubusVisit(this.owner);
<anchor xml:id="__con_sleep_8cs_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.succubusChecked&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__con_sleep_8cs_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__con_sleep_8cs_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.owner.IsPC&#32;&amp;&amp;&#32;<emphasis role="keyword">this</emphasis>.pcSleep&#32;&gt;&#32;0)
<anchor xml:id="__con_sleep_8cs_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__con_sleep_8cs_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.pcSleep--;
<anchor xml:id="__con_sleep_8cs_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.pcSleep&#32;==&#32;0)
<anchor xml:id="__con_sleep_8cs_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__con_sleep_8cs_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;phase&#32;=&#32;<link linkend="_class_e_class">EClass</link>.pc.sleepiness.GetPhase();
<anchor xml:id="__con_sleep_8cs_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;num&#32;=&#32;(phase&#32;&gt;=&#32;3)&#32;?&#32;12&#32;:&#32;((phase&#32;&gt;=&#32;2)&#32;?&#32;10&#32;:&#32;((phase&#32;&gt;=&#32;1)&#32;?&#32;7&#32;:&#32;5));
<anchor xml:id="__con_sleep_8cs_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;phase&#32;=&#32;<link linkend="_class_e_class">EClass</link>.pc.stamina.GetPhase();
<anchor xml:id="__con_sleep_8cs_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num&#32;+=&#32;((phase&#32;==&#32;0)&#32;?&#32;4&#32;:&#32;((phase&#32;==&#32;1)&#32;?&#32;3&#32;:&#32;((phase&#32;==&#32;2)&#32;?&#32;2&#32;:&#32;0)));
<anchor xml:id="__con_sleep_8cs_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num&#32;+=&#32;<link linkend="_class_e_class">EClass</link>.rnd(3)&#32;-&#32;<link linkend="_class_e_class">EClass</link>.rnd(2);
<anchor xml:id="__con_sleep_8cs_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_con_sleep">ConSleep</link>.SuccubusSleep(<link linkend="_class_e_class">EClass</link>.pc);
<anchor xml:id="__con_sleep_8cs_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_e_class">EClass</link>.pc.isDead)
<anchor xml:id="__con_sleep_8cs_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__con_sleep_8cs_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__con_sleep_8cs_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__con_sleep_8cs_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;base.value&#32;=&#32;1;
<anchor xml:id="__con_sleep_8cs_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.slept&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__con_sleep_8cs_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_e_class">EClass</link>.ui.AddLayer&lt;<link linkend="_class_layer_sleep">LayerSleep</link>&gt;().Sleep(num,&#32;this.pcBed,&#32;this.pcPillow);
<anchor xml:id="__con_sleep_8cs_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__con_sleep_8cs_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__con_sleep_8cs_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__con_sleep_8cs_source_1l00094"/>00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_e_class">EClass</link>.rnd(50)&#32;==&#32;0&#32;&amp;&amp;&#32;!<emphasis role="keyword">this</emphasis>.owner.IsPC)
<anchor xml:id="__con_sleep_8cs_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__con_sleep_8cs_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_e_class">EClass</link>.rnd(10)&#32;==&#32;0)
<anchor xml:id="__con_sleep_8cs_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__con_sleep_8cs_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.owner.Talk(<emphasis role="stringliteral">&quot;sleepFav&quot;</emphasis>,&#32;(<link linkend="_class_e_class">EClass</link>.rnd(2)&#32;==&#32;0)&#32;?&#32;<emphasis role="keyword">this</emphasis>.owner.GetFavCat().GetName().ToLower()&#32;:&#32;<emphasis role="keyword">this</emphasis>.owner.GetFavFood().GetName(),&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__con_sleep_8cs_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!this.owner.knowFav&#32;&amp;&amp;&#32;<emphasis role="keyword">this</emphasis>.owner.isSynced)
<anchor xml:id="__con_sleep_8cs_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__con_sleep_8cs_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_msg">Msg</link>.Say(<emphasis role="stringliteral">&quot;noteFav&quot;</emphasis>,&#32;this.owner,&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__con_sleep_8cs_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.owner.knowFav&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__con_sleep_8cs_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__con_sleep_8cs_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__con_sleep_8cs_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__con_sleep_8cs_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__con_sleep_8cs_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.owner.Talk(<emphasis role="stringliteral">&quot;sleep&quot;</emphasis>,&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__con_sleep_8cs_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__con_sleep_8cs_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__con_sleep_8cs_source_1l00110"/>00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.owner.ai&#32;is&#32;<link linkend="_class_goal_sleep">GoalSleep</link>&#32;&amp;&amp;&#32;<emphasis role="keyword">this</emphasis>.owner.CurrentSpan&#32;==&#32;<link linkend="_class_time_table">TimeTable</link>.Span.Sleep)
<anchor xml:id="__con_sleep_8cs_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__con_sleep_8cs_source_1l00112"/>00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__con_sleep_8cs_source_1l00113"/>00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__con_sleep_8cs_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.owner.HealHP(<link linkend="_class_e_class">EClass</link>.rnd(4)&#32;+&#32;1,&#32;HealSource.None);
<anchor xml:id="__con_sleep_8cs_source_1l00115"/>00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.owner.mana.Mod(<link linkend="_class_e_class">EClass</link>.rnd(3)&#32;+&#32;1);
<anchor xml:id="__con_sleep_8cs_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!this.owner.IsPC)
<anchor xml:id="__con_sleep_8cs_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__con_sleep_8cs_source_1l00118"/>00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.owner.stamina.Mod(<link linkend="_class_e_class">EClass</link>.rnd(2)&#32;+&#32;1);
<anchor xml:id="__con_sleep_8cs_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__con_sleep_8cs_source_1l00120"/>00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;base.Mod(-1,&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__con_sleep_8cs_source_1l00121"/>00121 &#32;&#32;&#32;&#32;}
<anchor xml:id="__con_sleep_8cs_source_1l00122"/>00122 
<anchor xml:id="__con_sleep_8cs_source_1l00123"/>00123 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x060016E7&#32;RID:&#32;5863&#32;RVA:&#32;0x00097630&#32;File&#32;Offset:&#32;0x00095830</emphasis>
<anchor xml:id="__con_sleep_8cs_source_1l00124"/>00124 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;SuccubusVisit(<link linkend="_class_chara">Chara</link>&#32;tg)
<anchor xml:id="__con_sleep_8cs_source_1l00125"/>00125 &#32;&#32;&#32;&#32;{
<anchor xml:id="__con_sleep_8cs_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(tg.bio.IsUnderAge)
<anchor xml:id="__con_sleep_8cs_source_1l00127"/>00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__con_sleep_8cs_source_1l00128"/>00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__con_sleep_8cs_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__con_sleep_8cs_source_1l00130"/>00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_chara">Chara</link>&#32;chara&#32;<emphasis role="keywordflow">in</emphasis>&#32;<link linkend="_class_e_class">EClass</link>._map.charas)
<anchor xml:id="__con_sleep_8cs_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__con_sleep_8cs_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(chara&#32;!=&#32;tg&#32;&amp;&amp;&#32;!chara.IsPC&#32;&amp;&amp;&#32;<link linkend="_class_e_class">EClass</link>.rnd(3)&#32;==&#32;0&#32;&amp;&amp;&#32;!chara.IsDisabled&#32;&amp;&amp;&#32;chara.IsIdle)
<anchor xml:id="__con_sleep_8cs_source_1l00133"/>00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__con_sleep_8cs_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_thing">Thing</link>&#32;thing&#32;=&#32;chara.things.Find&lt;<link linkend="_class_trait_dream_bug">TraitDreamBug</link>&gt;();
<anchor xml:id="__con_sleep_8cs_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((chara.HasElement(1216,&#32;1)&#32;||&#32;thing&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;&amp;&amp;&#32;chara.host&#32;==&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;(!tg.IsPC&#32;||&#32;thing&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;||&#32;<link linkend="_class_e_class">EClass</link>.rnd(200)&#32;==&#32;0))
<anchor xml:id="__con_sleep_8cs_source_1l00136"/>00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__con_sleep_8cs_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;chara.Teleport(tg.pos,&#32;<emphasis role="keyword">false</emphasis>,&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__con_sleep_8cs_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(chara.Dist(tg.pos)&#32;&lt;=&#32;2)
<anchor xml:id="__con_sleep_8cs_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__con_sleep_8cs_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(thing&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__con_sleep_8cs_source_1l00141"/>00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__con_sleep_8cs_source_1l00142"/>00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tg.Say(<emphasis role="stringliteral">&quot;dreambug_teleport&quot;</emphasis>,&#32;chara,&#32;tg,&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__con_sleep_8cs_source_1l00143"/>00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;thing.ModCharge(-1,&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__con_sleep_8cs_source_1l00144"/>00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(thing.c_charges&#32;&lt;=&#32;0)
<anchor xml:id="__con_sleep_8cs_source_1l00145"/>00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__con_sleep_8cs_source_1l00146"/>00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tg.Say(<emphasis role="stringliteral">&quot;dreambug_destroy&quot;</emphasis>,&#32;chara,&#32;thing,&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__con_sleep_8cs_source_1l00147"/>00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;thing.Destroy();
<anchor xml:id="__con_sleep_8cs_source_1l00148"/>00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__con_sleep_8cs_source_1l00149"/>00149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__con_sleep_8cs_source_1l00150"/>00150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;chara.SetAI(<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_a_i___fuck">AI_Fuck</link>
<anchor xml:id="__con_sleep_8cs_source_1l00151"/>00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__con_sleep_8cs_source_1l00152"/>00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;target&#32;=&#32;tg,
<anchor xml:id="__con_sleep_8cs_source_1l00153"/>00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;succubus&#32;=&#32;<emphasis role="keyword">true</emphasis>
<anchor xml:id="__con_sleep_8cs_source_1l00154"/>00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__con_sleep_8cs_source_1l00155"/>00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__con_sleep_8cs_source_1l00156"/>00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__con_sleep_8cs_source_1l00157"/>00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__con_sleep_8cs_source_1l00158"/>00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__con_sleep_8cs_source_1l00159"/>00159 &#32;&#32;&#32;&#32;}
<anchor xml:id="__con_sleep_8cs_source_1l00160"/>00160 
<anchor xml:id="__con_sleep_8cs_source_1l00161"/>00161 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x060016E8&#32;RID:&#32;5864&#32;RVA:&#32;0x00097778&#32;File&#32;Offset:&#32;0x00095978</emphasis>
<anchor xml:id="__con_sleep_8cs_source_1l00162"/>00162 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;SuccubusSleep(<link linkend="_class_chara">Chara</link>&#32;tg)
<anchor xml:id="__con_sleep_8cs_source_1l00163"/>00163 &#32;&#32;&#32;&#32;{
<anchor xml:id="__con_sleep_8cs_source_1l00164"/>00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_e_class">EClass</link>._map.charas.ForeachReverse(delegate(<link linkend="_class_chara">Chara</link>&#32;c)
<anchor xml:id="__con_sleep_8cs_source_1l00165"/>00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__con_sleep_8cs_source_1l00166"/>00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_a_i___fuck">AI_Fuck</link>&#32;ai_Fuck&#32;=&#32;c.ai&#32;as&#32;<link linkend="_class_a_i___fuck">AI_Fuck</link>;
<anchor xml:id="__con_sleep_8cs_source_1l00167"/>00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ai_Fuck&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;ai_Fuck.IsRunning&#32;&amp;&amp;&#32;ai_Fuck.target&#32;==&#32;tg)
<anchor xml:id="__con_sleep_8cs_source_1l00168"/>00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__con_sleep_8cs_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ai_Fuck.Finish();
<anchor xml:id="__con_sleep_8cs_source_1l00170"/>00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ai_Fuck.Cancel();
<anchor xml:id="__con_sleep_8cs_source_1l00171"/>00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!c.HasCondition&lt;<link linkend="_class_con_sleep">ConSleep</link>&gt;())
<anchor xml:id="__con_sleep_8cs_source_1l00172"/>00172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__con_sleep_8cs_source_1l00173"/>00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;c.AddCondition&lt;<link linkend="_class_con_sleep">ConSleep</link>&gt;(100&#32;+&#32;<link linkend="_class_e_class">EClass</link>.rnd(100),&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__con_sleep_8cs_source_1l00174"/>00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__con_sleep_8cs_source_1l00175"/>00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__con_sleep_8cs_source_1l00176"/>00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__con_sleep_8cs_source_1l00177"/>00177 &#32;&#32;&#32;&#32;}
<anchor xml:id="__con_sleep_8cs_source_1l00178"/>00178 
<anchor xml:id="__con_sleep_8cs_source_1l00179"/>00179 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x060016E9&#32;RID:&#32;5865&#32;RVA:&#32;0x000977B0&#32;File&#32;Offset:&#32;0x000959B0</emphasis>
<anchor xml:id="__con_sleep_8cs_source_1l00180"/>00180 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;unsafe&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnRemoved()
<anchor xml:id="__con_sleep_8cs_source_1l00181"/>00181 &#32;&#32;&#32;&#32;{
<anchor xml:id="__con_sleep_8cs_source_1l00182"/>00182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.owner.conSleep&#32;=&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__con_sleep_8cs_source_1l00183"/>00183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.owner.renderer.RefreshSprite();
<anchor xml:id="__con_sleep_8cs_source_1l00184"/>00184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.owner.renderer.SetFirst(<emphasis role="keyword">true</emphasis>,&#32;*this.owner.pos.PositionAuto());
<anchor xml:id="__con_sleep_8cs_source_1l00185"/>00185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!this.owner.IsPC)
<anchor xml:id="__con_sleep_8cs_source_1l00186"/>00186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__con_sleep_8cs_source_1l00187"/>00187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.owner.sleepiness.Set(0);
<anchor xml:id="__con_sleep_8cs_source_1l00188"/>00188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__con_sleep_8cs_source_1l00189"/>00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__con_sleep_8cs_source_1l00190"/>00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!this.owner.isDead)
<anchor xml:id="__con_sleep_8cs_source_1l00191"/>00191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__con_sleep_8cs_source_1l00192"/>00192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_thing">Thing</link>&#32;thing&#32;=&#32;this.pcPillow;
<anchor xml:id="__con_sleep_8cs_source_1l00193"/>00193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_trait_pillow">TraitPillow</link>&#32;traitPillow&#32;=&#32;(((thing&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;?&#32;thing.trait&#32;:&#32;<emphasis role="keyword">null</emphasis>)&#32;as&#32;<link linkend="_class_trait_pillow">TraitPillow</link>)&#32;??&#32;<link linkend="_class_e_class">EClass</link>.pc.pos.FindThing&lt;<link linkend="_class_trait_pillow">TraitPillow</link>&gt;();
<anchor xml:id="__con_sleep_8cs_source_1l00194"/>00194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(traitPillow&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__con_sleep_8cs_source_1l00195"/>00195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__con_sleep_8cs_source_1l00196"/>00196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(traitPillow&#32;is&#32;<link linkend="_class_trait_pillow_ehekatl">TraitPillowEhekatl</link>)
<anchor xml:id="__con_sleep_8cs_source_1l00197"/>00197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__con_sleep_8cs_source_1l00198"/>00198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_e_class">EClass</link>.game.religions.Luck.Talk(<emphasis role="stringliteral">&quot;morning&quot;</emphasis>,&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__con_sleep_8cs_source_1l00199"/>00199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__con_sleep_8cs_source_1l00200"/>00200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(traitPillow&#32;is&#32;<link linkend="_class_trait_pillow_jure">TraitPillowJure</link>)
<anchor xml:id="__con_sleep_8cs_source_1l00201"/>00201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__con_sleep_8cs_source_1l00202"/>00202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_e_class">EClass</link>.game.religions.Healing.Talk(<emphasis role="stringliteral">&quot;morning&quot;</emphasis>,&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__con_sleep_8cs_source_1l00203"/>00203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_e_class">EClass</link>.pc.SAN.Mod(-<link linkend="_class_e_class">EClass</link>.rndHalf(5));
<anchor xml:id="__con_sleep_8cs_source_1l00204"/>00204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__con_sleep_8cs_source_1l00205"/>00205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(traitPillow&#32;is&#32;<link linkend="_class_trait_pillow_opatos">TraitPillowOpatos</link>)
<anchor xml:id="__con_sleep_8cs_source_1l00206"/>00206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__con_sleep_8cs_source_1l00207"/>00207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_e_class">EClass</link>.game.religions.Earth.Talk(<emphasis role="stringliteral">&quot;morning&quot;</emphasis>,&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__con_sleep_8cs_source_1l00208"/>00208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__con_sleep_8cs_source_1l00209"/>00209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__con_sleep_8cs_source_1l00210"/>00210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.slept)
<anchor xml:id="__con_sleep_8cs_source_1l00211"/>00211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__con_sleep_8cs_source_1l00212"/>00212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_e_class">EClass</link>.player.recipes.OnSleep(traitPillow&#32;is&#32;<link linkend="_class_trait_pillow_ehekatl">TraitPillowEhekatl</link>);
<anchor xml:id="__con_sleep_8cs_source_1l00213"/>00213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_e_class">EClass</link>.player.DreamSpell();
<anchor xml:id="__con_sleep_8cs_source_1l00214"/>00214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__con_sleep_8cs_source_1l00215"/>00215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.pickup)
<anchor xml:id="__con_sleep_8cs_source_1l00216"/>00216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__con_sleep_8cs_source_1l00217"/>00217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_con_sleep">ConSleep</link>.&lt;OnRemoved&gt;g__TryPick|20_0(this.pcBed,&#32;this.posBed);
<anchor xml:id="__con_sleep_8cs_source_1l00218"/>00218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_con_sleep">ConSleep</link>.&lt;OnRemoved&gt;g__TryPick|20_0(this.pcPillow,&#32;this.posPillow);
<anchor xml:id="__con_sleep_8cs_source_1l00219"/>00219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__con_sleep_8cs_source_1l00220"/>00220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.slept)
<anchor xml:id="__con_sleep_8cs_source_1l00221"/>00221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__con_sleep_8cs_source_1l00222"/>00222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_thing">Thing</link>&#32;thing2&#32;=&#32;<link linkend="_class_e_class">EClass</link>.pc.things.Find&lt;<link linkend="_class_trait_grimoire">TraitGrimoire</link>&gt;();
<anchor xml:id="__con_sleep_8cs_source_1l00223"/>00223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(thing2&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;thing2.c_lockLv&#32;==&#32;0&#32;&amp;&amp;&#32;!<link linkend="_class_e_class">EClass</link>._zone.IsRegion)
<anchor xml:id="__con_sleep_8cs_source_1l00224"/>00224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__con_sleep_8cs_source_1l00225"/>00225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_thing">Thing</link>&#32;thing3&#32;<emphasis role="keywordflow">in</emphasis>&#32;thing2.things.List((<link linkend="_class_thing">Thing</link>&#32;_t)&#32;=&gt;&#32;_t.trait&#32;is&#32;<link linkend="_class_trait_spellbook">TraitSpellbook</link>&#32;||&#32;_t.trait&#32;is&#32;<link linkend="_class_trait_ancientbook">TraitAncientbook</link>,&#32;<emphasis role="keyword">false</emphasis>))
<anchor xml:id="__con_sleep_8cs_source_1l00226"/>00226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__con_sleep_8cs_source_1l00227"/>00227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_trait_base_spellbook">TraitBaseSpellbook</link>&#32;traitBaseSpellbook&#32;=&#32;thing3.trait&#32;as&#32;<link linkend="_class_trait_base_spellbook">TraitBaseSpellbook</link>;
<anchor xml:id="__con_sleep_8cs_source_1l00228"/>00228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!(thing3.trait&#32;is&#32;<link linkend="_class_trait_ancientbook">TraitAncientbook</link>)&#32;||&#32;!thing3.isOn)
<anchor xml:id="__con_sleep_8cs_source_1l00229"/>00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__con_sleep_8cs_source_1l00230"/>00230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;c_charges&#32;=&#32;thing3.c_charges;
<anchor xml:id="__con_sleep_8cs_source_1l00231"/>00231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;c_charges;&#32;i++)
<anchor xml:id="__con_sleep_8cs_source_1l00232"/>00232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__con_sleep_8cs_source_1l00233"/>00233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;num&#32;=&#32;traitBaseSpellbook.GetActDuration(<link linkend="_class_e_class">EClass</link>.pc)&#32;+&#32;1;
<anchor xml:id="__con_sleep_8cs_source_1l00234"/>00234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;flag&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__con_sleep_8cs_source_1l00235"/>00235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;j&#32;=&#32;0;
<anchor xml:id="__con_sleep_8cs_source_1l00236"/>00236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(j&#32;&lt;&#32;num)
<anchor xml:id="__con_sleep_8cs_source_1l00237"/>00237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__con_sleep_8cs_source_1l00238"/>00238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!traitBaseSpellbook.TryProgress(<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_a_i_progress">AIProgress</link>
<anchor xml:id="__con_sleep_8cs_source_1l00239"/>00239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__con_sleep_8cs_source_1l00240"/>00240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;owner&#32;=&#32;EClass.pc
<anchor xml:id="__con_sleep_8cs_source_1l00241"/>00241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}))
<anchor xml:id="__con_sleep_8cs_source_1l00242"/>00242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__con_sleep_8cs_source_1l00243"/>00243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;flag&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__con_sleep_8cs_source_1l00244"/>00244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_e_class">EClass</link>.pc.isDead)
<anchor xml:id="__con_sleep_8cs_source_1l00245"/>00245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__con_sleep_8cs_source_1l00246"/>00246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__con_sleep_8cs_source_1l00247"/>00247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__con_sleep_8cs_source_1l00248"/>00248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__con_sleep_8cs_source_1l00249"/>00249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__con_sleep_8cs_source_1l00250"/>00250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__con_sleep_8cs_source_1l00251"/>00251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__con_sleep_8cs_source_1l00252"/>00252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;j++;
<anchor xml:id="__con_sleep_8cs_source_1l00253"/>00253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__con_sleep_8cs_source_1l00254"/>00254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__con_sleep_8cs_source_1l00255"/>00255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!flag)
<anchor xml:id="__con_sleep_8cs_source_1l00256"/>00256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__con_sleep_8cs_source_1l00257"/>00257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;traitBaseSpellbook.OnRead(<link linkend="_class_e_class">EClass</link>.pc);
<anchor xml:id="__con_sleep_8cs_source_1l00258"/>00258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__con_sleep_8cs_source_1l00259"/>00259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__con_sleep_8cs_source_1l00260"/>00260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__con_sleep_8cs_source_1l00261"/>00261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__con_sleep_8cs_source_1l00262"/>00262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__con_sleep_8cs_source_1l00263"/>00263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__con_sleep_8cs_source_1l00264"/>00264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__con_sleep_8cs_source_1l00265"/>00265 &#32;&#32;&#32;&#32;}
<anchor xml:id="__con_sleep_8cs_source_1l00266"/>00266 
<anchor xml:id="__con_sleep_8cs_source_1l00267"/>00267 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x060016EB&#32;RID:&#32;5867&#32;RVA:&#32;0x00097A7C&#32;File&#32;Offset:&#32;0x00095C7C</emphasis>
<anchor xml:id="__con_sleep_8cs_source_1l00268"/>00268 &#32;&#32;&#32;&#32;[CompilerGenerated]
<anchor xml:id="__con_sleep_8cs_source_1l00269"/>00269 &#32;&#32;&#32;&#32;<emphasis role="keyword">internal</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;void&#32;&lt;OnRemoved&gt;g__TryPick|20_0(<link linkend="_class_thing">Thing</link>&#32;t,&#32;<link linkend="_class_item_position">ItemPosition</link>&#32;pos)
<anchor xml:id="__con_sleep_8cs_source_1l00270"/>00270 &#32;&#32;&#32;&#32;{
<anchor xml:id="__con_sleep_8cs_source_1l00271"/>00271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(t&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__con_sleep_8cs_source_1l00272"/>00272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__con_sleep_8cs_source_1l00273"/>00273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__con_sleep_8cs_source_1l00274"/>00274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__con_sleep_8cs_source_1l00275"/>00275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t&#32;=&#32;<link linkend="_class_e_class">EClass</link>._map.FindThing(t.uid);
<anchor xml:id="__con_sleep_8cs_source_1l00276"/>00276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(t&#32;==&#32;<emphasis role="keyword">null</emphasis>&#32;||&#32;!t.ExistsOnMap&#32;||&#32;t.isNPCProperty)
<anchor xml:id="__con_sleep_8cs_source_1l00277"/>00277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__con_sleep_8cs_source_1l00278"/>00278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__con_sleep_8cs_source_1l00279"/>00279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__con_sleep_8cs_source_1l00280"/>00280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pos&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__con_sleep_8cs_source_1l00281"/>00281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__con_sleep_8cs_source_1l00282"/>00282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_card">Card</link>&#32;card&#32;=&#32;(pos.uidContainer&#32;==&#32;<link linkend="_class_e_class">EClass</link>.pc.uid)&#32;?&#32;<link linkend="_class_e_class">EClass</link>.pc&#32;:&#32;<link linkend="_class_e_class">EClass</link>.pc.things.Find(pos.uidContainer);
<anchor xml:id="__con_sleep_8cs_source_1l00283"/>00283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(card&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__con_sleep_8cs_source_1l00284"/>00284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__con_sleep_8cs_source_1l00285"/>00285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_e_class">EClass</link>.pc.PlaySound(<emphasis role="stringliteral">&quot;pick_thing&quot;</emphasis>,&#32;1f,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__con_sleep_8cs_source_1l00286"/>00286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_e_class">EClass</link>.pc.Say(<emphasis role="stringliteral">&quot;pick_thing&quot;</emphasis>,&#32;<link linkend="_class_e_class">EClass</link>.pc,&#32;t,&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__con_sleep_8cs_source_1l00287"/>00287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t&#32;=&#32;card.AddThing(t,&#32;<emphasis role="keyword">false</emphasis>,&#32;pos.invX,&#32;pos.invY);
<anchor xml:id="__con_sleep_8cs_source_1l00288"/>00288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t.invX&#32;=&#32;pos.invX;
<anchor xml:id="__con_sleep_8cs_source_1l00289"/>00289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t.invY&#32;=&#32;pos.invY;
<anchor xml:id="__con_sleep_8cs_source_1l00290"/>00290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_layer_inventory">LayerInventory</link>.SetDirty(t);
<anchor xml:id="__con_sleep_8cs_source_1l00291"/>00291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__con_sleep_8cs_source_1l00292"/>00292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__con_sleep_8cs_source_1l00293"/>00293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__con_sleep_8cs_source_1l00294"/>00294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_e_class">EClass</link>.pc.Pick(t,&#32;<emphasis role="keyword">true</emphasis>,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__con_sleep_8cs_source_1l00295"/>00295 &#32;&#32;&#32;&#32;}
<anchor xml:id="__con_sleep_8cs_source_1l00296"/>00296 
<anchor xml:id="__con_sleep_8cs_source_1l00297"/>00297 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x0400106C&#32;RID:&#32;4204</emphasis>
<anchor xml:id="__con_sleep_8cs_source_1l00298"/>00298 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;succubusChecked;
<anchor xml:id="__con_sleep_8cs_source_1l00299"/>00299 
<anchor xml:id="__con_sleep_8cs_source_1l00300"/>00300 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x0400106D&#32;RID:&#32;4205</emphasis>
<anchor xml:id="__con_sleep_8cs_source_1l00301"/>00301 &#32;&#32;&#32;&#32;[JsonProperty]
<anchor xml:id="__con_sleep_8cs_source_1l00302"/>00302 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;pcSleep;
<anchor xml:id="__con_sleep_8cs_source_1l00303"/>00303 
<anchor xml:id="__con_sleep_8cs_source_1l00304"/>00304 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x0400106E&#32;RID:&#32;4206</emphasis>
<anchor xml:id="__con_sleep_8cs_source_1l00305"/>00305 &#32;&#32;&#32;&#32;[JsonProperty]
<anchor xml:id="__con_sleep_8cs_source_1l00306"/>00306 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_thing">Thing</link>&#32;pcBed;
<anchor xml:id="__con_sleep_8cs_source_1l00307"/>00307 
<anchor xml:id="__con_sleep_8cs_source_1l00308"/>00308 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x0400106F&#32;RID:&#32;4207</emphasis>
<anchor xml:id="__con_sleep_8cs_source_1l00309"/>00309 &#32;&#32;&#32;&#32;[JsonProperty]
<anchor xml:id="__con_sleep_8cs_source_1l00310"/>00310 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_thing">Thing</link>&#32;pcPillow;
<anchor xml:id="__con_sleep_8cs_source_1l00311"/>00311 
<anchor xml:id="__con_sleep_8cs_source_1l00312"/>00312 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04001070&#32;RID:&#32;4208</emphasis>
<anchor xml:id="__con_sleep_8cs_source_1l00313"/>00313 &#32;&#32;&#32;&#32;[JsonProperty]
<anchor xml:id="__con_sleep_8cs_source_1l00314"/>00314 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_item_position">ItemPosition</link>&#32;posBed;
<anchor xml:id="__con_sleep_8cs_source_1l00315"/>00315 
<anchor xml:id="__con_sleep_8cs_source_1l00316"/>00316 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04001071&#32;RID:&#32;4209</emphasis>
<anchor xml:id="__con_sleep_8cs_source_1l00317"/>00317 &#32;&#32;&#32;&#32;[JsonProperty]
<anchor xml:id="__con_sleep_8cs_source_1l00318"/>00318 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_item_position">ItemPosition</link>&#32;posPillow;
<anchor xml:id="__con_sleep_8cs_source_1l00319"/>00319 
<anchor xml:id="__con_sleep_8cs_source_1l00320"/>00320 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04001072&#32;RID:&#32;4210</emphasis>
<anchor xml:id="__con_sleep_8cs_source_1l00321"/>00321 &#32;&#32;&#32;&#32;[JsonProperty]
<anchor xml:id="__con_sleep_8cs_source_1l00322"/>00322 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;pickup;
<anchor xml:id="__con_sleep_8cs_source_1l00323"/>00323 
<anchor xml:id="__con_sleep_8cs_source_1l00324"/>00324 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04001073&#32;RID:&#32;4211</emphasis>
<anchor xml:id="__con_sleep_8cs_source_1l00325"/>00325 &#32;&#32;&#32;&#32;[JsonProperty]
<anchor xml:id="__con_sleep_8cs_source_1l00326"/>00326 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;slept;
<anchor xml:id="__con_sleep_8cs_source_1l00327"/>00327 }
</programlisting></section>
