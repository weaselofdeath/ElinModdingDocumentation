<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__logical_point_manager_8cs_source" xml:lang="en-US">
<title>LogicalPointManager.cs</title>
<indexterm><primary>Elin/LogicalPointManager.cs</primary></indexterm>
<programlisting linenumbering="unnumbered"><anchor xml:id="__logical_point_manager_8cs_source_1l00001"/>00001 <emphasis role="keyword">using&#32;</emphasis>System;
<anchor xml:id="__logical_point_manager_8cs_source_1l00002"/>00002 <emphasis role="keyword">using&#32;</emphasis>System.Collections.Generic;
<anchor xml:id="__logical_point_manager_8cs_source_1l00003"/>00003 
<anchor xml:id="__logical_point_manager_8cs_source_1l00004"/>00004 <emphasis role="comment">//&#32;Token:&#32;0x02000682&#32;RID:&#32;1666</emphasis>
<anchor xml:id="__logical_point_manager_8cs_source_1l00005"/><link linkend="_class_logical_point_manager">00005</link> <emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_logical_point_manager">LogicalPointManager</link>&#32;:&#32;<link linkend="_class_e_class">EClass</link>
<anchor xml:id="__logical_point_manager_8cs_source_1l00006"/>00006 {
<anchor xml:id="__logical_point_manager_8cs_source_1l00007"/>00007 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002EDC&#32;RID:&#32;11996&#32;RVA:&#32;0x00106DA7&#32;File&#32;Offset:&#32;0x00104FA7</emphasis>
<anchor xml:id="__logical_point_manager_8cs_source_1l00008"/>00008 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">virtual</emphasis>&#32;<link linkend="_class_logical_point">LogicalPoint</link>&#32;Create()
<anchor xml:id="__logical_point_manager_8cs_source_1l00009"/>00009 &#32;&#32;&#32;&#32;{
<anchor xml:id="__logical_point_manager_8cs_source_1l00010"/>00010 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__logical_point_manager_8cs_source_1l00011"/>00011 &#32;&#32;&#32;&#32;}
<anchor xml:id="__logical_point_manager_8cs_source_1l00012"/>00012 
<anchor xml:id="__logical_point_manager_8cs_source_1l00013"/>00013 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x17000D5A&#32;RID:&#32;3418</emphasis>
<anchor xml:id="__logical_point_manager_8cs_source_1l00014"/>00014 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;(get)&#32;Token:&#32;0x06002EDD&#32;RID:&#32;11997&#32;RVA:&#32;0x00106DAA&#32;File&#32;Offset:&#32;0x00104FAA</emphasis>
<anchor xml:id="__logical_point_manager_8cs_source_1l00015"/>00015 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;AllowBlock
<anchor xml:id="__logical_point_manager_8cs_source_1l00016"/>00016 &#32;&#32;&#32;&#32;{
<anchor xml:id="__logical_point_manager_8cs_source_1l00017"/>00017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
<anchor xml:id="__logical_point_manager_8cs_source_1l00018"/>00018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__logical_point_manager_8cs_source_1l00019"/>00019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__logical_point_manager_8cs_source_1l00020"/>00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__logical_point_manager_8cs_source_1l00021"/>00021 &#32;&#32;&#32;&#32;}
<anchor xml:id="__logical_point_manager_8cs_source_1l00022"/>00022 
<anchor xml:id="__logical_point_manager_8cs_source_1l00023"/>00023 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002EDE&#32;RID:&#32;11998&#32;RVA:&#32;0x00106DB0&#32;File&#32;Offset:&#32;0x00104FB0</emphasis>
<anchor xml:id="__logical_point_manager_8cs_source_1l00024"/>00024 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_logical_point">LogicalPoint</link>&#32;GetOrCreate(<link linkend="_class_point">Point</link>&#32;point)
<anchor xml:id="__logical_point_manager_8cs_source_1l00025"/>00025 &#32;&#32;&#32;&#32;{
<anchor xml:id="__logical_point_manager_8cs_source_1l00026"/>00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!point.IsValid)
<anchor xml:id="__logical_point_manager_8cs_source_1l00027"/>00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__logical_point_manager_8cs_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__logical_point_manager_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__logical_point_manager_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;index&#32;=&#32;point.index;
<anchor xml:id="__logical_point_manager_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_logical_point">LogicalPoint</link>&#32;logicalPoint&#32;=&#32;this.dict.TryGetValue(index,&#32;<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__logical_point_manager_8cs_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(logicalPoint&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__logical_point_manager_8cs_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__logical_point_manager_8cs_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!this.AllowBlock&#32;&amp;&amp;&#32;point.cell.HasBlock)
<anchor xml:id="__logical_point_manager_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__logical_point_manager_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__logical_point_manager_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__logical_point_manager_8cs_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;logicalPoint&#32;=&#32;this.Create();
<anchor xml:id="__logical_point_manager_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;logicalPoint.Set(point);
<anchor xml:id="__logical_point_manager_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.list.Add(logicalPoint);
<anchor xml:id="__logical_point_manager_8cs_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.dict.Add(index,&#32;logicalPoint);
<anchor xml:id="__logical_point_manager_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__logical_point_manager_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;logicalPoint;
<anchor xml:id="__logical_point_manager_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;}
<anchor xml:id="__logical_point_manager_8cs_source_1l00045"/>00045 
<anchor xml:id="__logical_point_manager_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002EDF&#32;RID:&#32;11999&#32;RVA:&#32;0x00106E1E&#32;File&#32;Offset:&#32;0x0010501E</emphasis>
<anchor xml:id="__logical_point_manager_8cs_source_1l00047"/>00047 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_logical_point">LogicalPoint</link>&#32;Refresh(<link linkend="_class_point">Point</link>&#32;point)
<anchor xml:id="__logical_point_manager_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;{
<anchor xml:id="__logical_point_manager_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this.GetOrCreate(point);
<anchor xml:id="__logical_point_manager_8cs_source_1l00050"/>00050 &#32;&#32;&#32;&#32;}
<anchor xml:id="__logical_point_manager_8cs_source_1l00051"/>00051 
<anchor xml:id="__logical_point_manager_8cs_source_1l00052"/>00052 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002EE0&#32;RID:&#32;12000&#32;RVA:&#32;0x00106E28&#32;File&#32;Offset:&#32;0x00105028</emphasis>
<anchor xml:id="__logical_point_manager_8cs_source_1l00053"/>00053 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Remove(<emphasis role="keywordtype">int</emphasis>&#32;key)
<anchor xml:id="__logical_point_manager_8cs_source_1l00054"/>00054 &#32;&#32;&#32;&#32;{
<anchor xml:id="__logical_point_manager_8cs_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_logical_point">LogicalPoint</link>&#32;item&#32;=&#32;this.dict[key];
<anchor xml:id="__logical_point_manager_8cs_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.list.Remove(item);
<anchor xml:id="__logical_point_manager_8cs_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.dict.Remove(key);
<anchor xml:id="__logical_point_manager_8cs_source_1l00058"/>00058 &#32;&#32;&#32;&#32;}
<anchor xml:id="__logical_point_manager_8cs_source_1l00059"/>00059 
<anchor xml:id="__logical_point_manager_8cs_source_1l00060"/>00060 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04001A58&#32;RID:&#32;6744</emphasis>
<anchor xml:id="__logical_point_manager_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;List&lt;LogicalPoint&gt;&#32;list&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;LogicalPoint&gt;();
<anchor xml:id="__logical_point_manager_8cs_source_1l00062"/>00062 
<anchor xml:id="__logical_point_manager_8cs_source_1l00063"/>00063 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04001A59&#32;RID:&#32;6745</emphasis>
<anchor xml:id="__logical_point_manager_8cs_source_1l00064"/>00064 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Dictionary&lt;int,&#32;LogicalPoint&gt;&#32;dict&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Dictionary&lt;int,&#32;LogicalPoint&gt;();
<anchor xml:id="__logical_point_manager_8cs_source_1l00065"/>00065 
<anchor xml:id="__logical_point_manager_8cs_source_1l00066"/>00066 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04001A5A&#32;RID:&#32;6746</emphasis>
<anchor xml:id="__logical_point_manager_8cs_source_1l00067"/>00067 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;HashSet&lt;Point&gt;&#32;refreshList&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;HashSet&lt;Point&gt;();
<anchor xml:id="__logical_point_manager_8cs_source_1l00068"/>00068 }
</programlisting></section>
