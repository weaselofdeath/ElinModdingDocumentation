<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__liquid_profile_8cs_source" xml:lang="en-US">
<title>LiquidProfile.cs</title>
<indexterm><primary>Elin/LiquidProfile.cs</primary></indexterm>
<programlisting linenumbering="unnumbered"><anchor xml:id="__liquid_profile_8cs_source_1l00001"/>00001 <emphasis role="keyword">using&#32;</emphasis>System;
<anchor xml:id="__liquid_profile_8cs_source_1l00002"/>00002 <emphasis role="keyword">using&#32;</emphasis>System.Runtime.CompilerServices;
<anchor xml:id="__liquid_profile_8cs_source_1l00003"/>00003 <emphasis role="keyword">using&#32;</emphasis>UnityEngine;
<anchor xml:id="__liquid_profile_8cs_source_1l00004"/>00004 
<anchor xml:id="__liquid_profile_8cs_source_1l00005"/>00005 <emphasis role="comment">//&#32;Token:&#32;0x0200016D&#32;RID:&#32;365</emphasis>
<anchor xml:id="__liquid_profile_8cs_source_1l00006"/><link linkend="_class_liquid_profile">00006</link> <emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_liquid_profile">LiquidProfile</link>&#32;:&#32;<link linkend="_class_e_scriptable">EScriptable</link>
<anchor xml:id="__liquid_profile_8cs_source_1l00007"/>00007 {
<anchor xml:id="__liquid_profile_8cs_source_1l00008"/>00008 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06000AB4&#32;RID:&#32;2740&#32;RVA:&#32;0x00042365&#32;File&#32;Offset:&#32;0x00040565</emphasis>
<anchor xml:id="__liquid_profile_8cs_source_1l00009"/>00009 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class_liquid_profile">LiquidProfile</link>&#32;Get(<emphasis role="keywordtype">string</emphasis>&#32;<emphasis role="keywordtype">id</emphasis>)
<anchor xml:id="__liquid_profile_8cs_source_1l00010"/>00010 &#32;&#32;&#32;&#32;{
<anchor xml:id="__liquid_profile_8cs_source_1l00011"/>00011 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Resources.Load&lt;<link linkend="_class_liquid_profile">LiquidProfile</link>&gt;(<emphasis role="stringliteral">&quot;Scene/Profile/Liquid/&quot;</emphasis>&#32;+&#32;id);
<anchor xml:id="__liquid_profile_8cs_source_1l00012"/>00012 &#32;&#32;&#32;&#32;}
<anchor xml:id="__liquid_profile_8cs_source_1l00013"/>00013 
<anchor xml:id="__liquid_profile_8cs_source_1l00014"/>00014 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06000AB5&#32;RID:&#32;2741&#32;RVA:&#32;0x00042378&#32;File&#32;Offset:&#32;0x00040578</emphasis>
<anchor xml:id="__liquid_profile_8cs_source_1l00015"/>00015 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Apply(<emphasis role="keywordtype">string</emphasis>&#32;<emphasis role="keywordtype">id</emphasis>)
<anchor xml:id="__liquid_profile_8cs_source_1l00016"/>00016 &#32;&#32;&#32;&#32;{
<anchor xml:id="__liquid_profile_8cs_source_1l00017"/>00017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_liquid_profile">LiquidProfile</link>.Get(<emphasis role="keywordtype">id</emphasis>).Apply(<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__liquid_profile_8cs_source_1l00018"/>00018 &#32;&#32;&#32;&#32;}
<anchor xml:id="__liquid_profile_8cs_source_1l00019"/>00019 
<anchor xml:id="__liquid_profile_8cs_source_1l00020"/>00020 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06000AB6&#32;RID:&#32;2742&#32;RVA:&#32;0x0004239C&#32;File&#32;Offset:&#32;0x0004059C</emphasis>
<anchor xml:id="__liquid_profile_8cs_source_1l00021"/>00021 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Apply(Color?&#32;previewColor&#32;=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__liquid_profile_8cs_source_1l00022"/>00022 &#32;&#32;&#32;&#32;{
<anchor xml:id="__liquid_profile_8cs_source_1l00023"/>00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_liquid_profile">LiquidProfile</link>.&lt;&gt;c__DisplayClass6_0&#32;CS$&lt;&gt;8__locals1;
<anchor xml:id="__liquid_profile_8cs_source_1l00024"/>00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CS$&lt;&gt;8__locals1.&lt;&gt;4__this&#32;=&#32;<emphasis role="keyword">this</emphasis>;
<anchor xml:id="__liquid_profile_8cs_source_1l00025"/>00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CS$&lt;&gt;8__locals1.previewColor&#32;=&#32;previewColor;
<anchor xml:id="__liquid_profile_8cs_source_1l00026"/>00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_base_tile_map">BaseTileMap</link>&#32;tileMap&#32;=&#32;<link linkend="_class_e_class">EClass</link>.scene.screenElin.tileMap;
<anchor xml:id="__liquid_profile_8cs_source_1l00027"/>00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.&lt;Apply&gt;g__Set|6_0(tileMap.passLiquid.mat,&#32;ref&#32;CS$&lt;&gt;8__locals1);
<anchor xml:id="__liquid_profile_8cs_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.&lt;Apply&gt;g__Set|6_0(tileMap.passFloorWater.mat,&#32;ref&#32;CS$&lt;&gt;8__locals1);
<anchor xml:id="__liquid_profile_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.&lt;Apply&gt;g__Set|6_0(tileMap.passAutoTileWater.mat,&#32;ref&#32;CS$&lt;&gt;8__locals1);
<anchor xml:id="__liquid_profile_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;}
<anchor xml:id="__liquid_profile_8cs_source_1l00031"/>00031 
<anchor xml:id="__liquid_profile_8cs_source_1l00032"/>00032 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06000AB7&#32;RID:&#32;2743&#32;RVA:&#32;0x00042402&#32;File&#32;Offset:&#32;0x00040602</emphasis>
<anchor xml:id="__liquid_profile_8cs_source_1l00033"/>00033 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;ApplyColor()
<anchor xml:id="__liquid_profile_8cs_source_1l00034"/>00034 &#32;&#32;&#32;&#32;{
<anchor xml:id="__liquid_profile_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.modColor&#32;=&#32;<link linkend="_class_e_class">EClass</link>._map.config.colorLiquid.Get();
<anchor xml:id="__liquid_profile_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;}
<anchor xml:id="__liquid_profile_8cs_source_1l00037"/>00037 
<anchor xml:id="__liquid_profile_8cs_source_1l00038"/>00038 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06000AB9&#32;RID:&#32;2745&#32;RVA:&#32;0x00042428&#32;File&#32;Offset:&#32;0x00040628</emphasis>
<anchor xml:id="__liquid_profile_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;[CompilerGenerated]
<anchor xml:id="__liquid_profile_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;void&#32;&lt;Apply&gt;g__Set|6_0(Material&#32;mat,&#32;ref&#32;<link linkend="_class_liquid_profile">LiquidProfile</link>.&lt;&gt;c__DisplayClass6_0&#32;A_2)
<anchor xml:id="__liquid_profile_8cs_source_1l00041"/>00041 &#32;&#32;&#32;&#32;{
<anchor xml:id="__liquid_profile_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mat.SetFloat(<emphasis role="stringliteral">&quot;_Transparency&quot;</emphasis>,&#32;this.transparency);
<anchor xml:id="__liquid_profile_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;name&#32;=&#32;<emphasis role="stringliteral">&quot;_ModColor&quot;</emphasis>;
<anchor xml:id="__liquid_profile_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Color?&#32;previewColor&#32;=&#32;A_2.previewColor;
<anchor xml:id="__liquid_profile_8cs_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Color&#32;value;
<anchor xml:id="__liquid_profile_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(previewColor&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__liquid_profile_8cs_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__liquid_profile_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SerializableColor&#32;colorLiquid&#32;=&#32;<link linkend="_class_e_class">EClass</link>._map.config.colorLiquid;
<anchor xml:id="__liquid_profile_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value&#32;=&#32;((colorLiquid&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;?&#32;colorLiquid.Get()&#32;:&#32;this.modColor);
<anchor xml:id="__liquid_profile_8cs_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__liquid_profile_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__liquid_profile_8cs_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__liquid_profile_8cs_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value&#32;=&#32;previewColor.GetValueOrDefault();
<anchor xml:id="__liquid_profile_8cs_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__liquid_profile_8cs_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mat.SetColor(name,&#32;value);
<anchor xml:id="__liquid_profile_8cs_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mat.SetVector(<emphasis role="stringliteral">&quot;_SurfaceAnime&quot;</emphasis>,&#32;this.surfaceAnime);
<anchor xml:id="__liquid_profile_8cs_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mat.SetTexture(<emphasis role="stringliteral">&quot;_SurfaceTex&quot;</emphasis>,&#32;this.surface);
<anchor xml:id="__liquid_profile_8cs_source_1l00058"/>00058 &#32;&#32;&#32;&#32;}
<anchor xml:id="__liquid_profile_8cs_source_1l00059"/>00059 
<anchor xml:id="__liquid_profile_8cs_source_1l00060"/>00060 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x040009C2&#32;RID:&#32;2498</emphasis>
<anchor xml:id="__liquid_profile_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Color&#32;modColor;
<anchor xml:id="__liquid_profile_8cs_source_1l00062"/>00062 
<anchor xml:id="__liquid_profile_8cs_source_1l00063"/>00063 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x040009C3&#32;RID:&#32;2499</emphasis>
<anchor xml:id="__liquid_profile_8cs_source_1l00064"/>00064 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;transparency;
<anchor xml:id="__liquid_profile_8cs_source_1l00065"/>00065 
<anchor xml:id="__liquid_profile_8cs_source_1l00066"/>00066 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x040009C4&#32;RID:&#32;2500</emphasis>
<anchor xml:id="__liquid_profile_8cs_source_1l00067"/>00067 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Texture2D&#32;surface;
<anchor xml:id="__liquid_profile_8cs_source_1l00068"/>00068 
<anchor xml:id="__liquid_profile_8cs_source_1l00069"/>00069 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x040009C5&#32;RID:&#32;2501</emphasis>
<anchor xml:id="__liquid_profile_8cs_source_1l00070"/>00070 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Vector4&#32;surfaceAnime;
<anchor xml:id="__liquid_profile_8cs_source_1l00071"/>00071 }
</programlisting></section>
