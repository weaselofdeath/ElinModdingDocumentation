<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__texture_manager_8cs_source" xml:lang="en-US">
<title>TextureManager.cs</title>
<indexterm><primary>Elin/TextureManager.cs</primary></indexterm>
<programlisting linenumbering="unnumbered"><anchor xml:id="__texture_manager_8cs_source_1l00001"/>00001 <emphasis role="keyword">using&#32;</emphasis>System;
<anchor xml:id="__texture_manager_8cs_source_1l00002"/>00002 <emphasis role="keyword">using&#32;</emphasis>System.Collections.Generic;
<anchor xml:id="__texture_manager_8cs_source_1l00003"/>00003 <emphasis role="keyword">using&#32;</emphasis>System.IO;
<anchor xml:id="__texture_manager_8cs_source_1l00004"/>00004 
<anchor xml:id="__texture_manager_8cs_source_1l00005"/>00005 <emphasis role="comment">//&#32;Token:&#32;0x02000131&#32;RID:&#32;305</emphasis>
<anchor xml:id="__texture_manager_8cs_source_1l00006"/><link linkend="_class_texture_manager">00006</link> <emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_texture_manager">TextureManager</link>
<anchor xml:id="__texture_manager_8cs_source_1l00007"/>00007 {
<anchor xml:id="__texture_manager_8cs_source_1l00008"/>00008 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x170001C7&#32;RID:&#32;455</emphasis>
<anchor xml:id="__texture_manager_8cs_source_1l00009"/>00009 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;(get)&#32;Token:&#32;0x06000827&#32;RID:&#32;2087&#32;RVA:&#32;0x0003597C&#32;File&#32;Offset:&#32;0x00033B7C</emphasis>
<anchor xml:id="__texture_manager_8cs_source_1l00010"/>00010 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;pathTex
<anchor xml:id="__texture_manager_8cs_source_1l00011"/>00011 &#32;&#32;&#32;&#32;{
<anchor xml:id="__texture_manager_8cs_source_1l00012"/>00012 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
<anchor xml:id="__texture_manager_8cs_source_1l00013"/>00013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__texture_manager_8cs_source_1l00014"/>00014 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;CorePath.packageCore&#32;+&#32;<emphasis role="stringliteral">&quot;Texture/&quot;</emphasis>;
<anchor xml:id="__texture_manager_8cs_source_1l00015"/>00015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__texture_manager_8cs_source_1l00016"/>00016 &#32;&#32;&#32;&#32;}
<anchor xml:id="__texture_manager_8cs_source_1l00017"/>00017 
<anchor xml:id="__texture_manager_8cs_source_1l00018"/>00018 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06000828&#32;RID:&#32;2088&#32;RVA:&#32;0x00035990&#32;File&#32;Offset:&#32;0x00033B90</emphasis>
<anchor xml:id="__texture_manager_8cs_source_1l00019"/>00019 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Init()
<anchor xml:id="__texture_manager_8cs_source_1l00020"/>00020 &#32;&#32;&#32;&#32;{
<anchor xml:id="__texture_manager_8cs_source_1l00021"/>00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_base_tile_map">BaseTileMap</link>&#32;tileMap&#32;=&#32;<link linkend="_class_e_class">EClass</link>.scene.screenElin.tileMap;
<anchor xml:id="__texture_manager_8cs_source_1l00022"/>00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_core_ref_1_1_texture_datas">CoreRef.TextureDatas</link>&#32;textureData&#32;=&#32;<link linkend="_class_e_class">EClass</link>.core.refs.textureData;
<anchor xml:id="__texture_manager_8cs_source_1l00023"/>00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.AddBase(textureData.block,&#32;<emphasis role="stringliteral">&quot;blocks.png&quot;</emphasis>,&#32;tileMap.passBlock,&#32;<emphasis role="stringliteral">&quot;_MainTex&quot;</emphasis>);
<anchor xml:id="__texture_manager_8cs_source_1l00024"/>00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.AddBase(textureData.floor,&#32;<emphasis role="stringliteral">&quot;floors.png&quot;</emphasis>,&#32;tileMap.passFloor,&#32;<emphasis role="stringliteral">&quot;_MainTex&quot;</emphasis>);
<anchor xml:id="__texture_manager_8cs_source_1l00025"/>00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.AddBase(textureData.objs_SS,&#32;<emphasis role="stringliteral">&quot;objs_SS.png&quot;</emphasis>,&#32;tileMap.passObjSS,&#32;<emphasis role="stringliteral">&quot;_MainTex&quot;</emphasis>);
<anchor xml:id="__texture_manager_8cs_source_1l00026"/>00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.AddBase(textureData.objs_S,&#32;<emphasis role="stringliteral">&quot;objs_S.png&quot;</emphasis>,&#32;tileMap.passObjS,&#32;<emphasis role="stringliteral">&quot;_MainTex&quot;</emphasis>);
<anchor xml:id="__texture_manager_8cs_source_1l00027"/>00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.AddBase(textureData.objs,&#32;<emphasis role="stringliteral">&quot;objs.png&quot;</emphasis>,&#32;tileMap.passObj,&#32;<emphasis role="stringliteral">&quot;_MainTex&quot;</emphasis>);
<anchor xml:id="__texture_manager_8cs_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.AddBase(textureData.objs_L,&#32;<emphasis role="stringliteral">&quot;objs_L.png&quot;</emphasis>,&#32;tileMap.passObjL,&#32;<emphasis role="stringliteral">&quot;_MainTex&quot;</emphasis>);
<anchor xml:id="__texture_manager_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.AddBase(textureData.roofs,&#32;<emphasis role="stringliteral">&quot;roofs.png&quot;</emphasis>,&#32;tileMap.passRoof,&#32;<emphasis role="stringliteral">&quot;_MainTex&quot;</emphasis>);
<anchor xml:id="__texture_manager_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.AddBase(textureData.shadows,&#32;<emphasis role="stringliteral">&quot;shadows.png&quot;</emphasis>,&#32;tileMap.passShadow,&#32;<emphasis role="stringliteral">&quot;_MainTex&quot;</emphasis>);
<anchor xml:id="__texture_manager_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.AddBase(textureData.fov,&#32;<emphasis role="stringliteral">&quot;fov.png&quot;</emphasis>,&#32;tileMap.passFov,&#32;<emphasis role="stringliteral">&quot;_MainTex&quot;</emphasis>);
<anchor xml:id="__texture_manager_8cs_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.AddBase(textureData.objs_C,&#32;<emphasis role="stringliteral">&quot;objs_C.png&quot;</emphasis>,&#32;tileMap.passChara,&#32;<emphasis role="stringliteral">&quot;_MainTex&quot;</emphasis>);
<anchor xml:id="__texture_manager_8cs_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.AddBase(textureData.objs_CLL,&#32;<emphasis role="stringliteral">&quot;objs_CLL.png&quot;</emphasis>,&#32;tileMap.passCharaLL,&#32;<emphasis role="stringliteral">&quot;_MainTex&quot;</emphasis>);
<anchor xml:id="__texture_manager_8cs_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.AddBase(textureData.block_snow,&#32;<emphasis role="stringliteral">&quot;blocks_snow.png&quot;</emphasis>,&#32;tileMap.passBlock.snowPass,&#32;<emphasis role="stringliteral">&quot;_MainTex&quot;</emphasis>);
<anchor xml:id="__texture_manager_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.AddBase(textureData.floor_snow,&#32;<emphasis role="stringliteral">&quot;floors_snow.png&quot;</emphasis>,&#32;tileMap.passFloor.snowPass,&#32;<emphasis role="stringliteral">&quot;_MainTex&quot;</emphasis>);
<anchor xml:id="__texture_manager_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.AddBase(textureData.objs_S_snow,&#32;<emphasis role="stringliteral">&quot;objs_S_snow.png&quot;</emphasis>,&#32;tileMap.passObjS.snowPass,&#32;<emphasis role="stringliteral">&quot;_MainTex&quot;</emphasis>);
<anchor xml:id="__texture_manager_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.AddBase(textureData.objs_snow,&#32;<emphasis role="stringliteral">&quot;objs_snow.png&quot;</emphasis>,&#32;tileMap.passObj.snowPass,&#32;<emphasis role="stringliteral">&quot;_MainTex&quot;</emphasis>);
<anchor xml:id="__texture_manager_8cs_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.AddBase(textureData.objs_L_snow,&#32;<emphasis role="stringliteral">&quot;objs_L_snow.png&quot;</emphasis>,&#32;tileMap.passObjL.snowPass,&#32;<emphasis role="stringliteral">&quot;_MainTex&quot;</emphasis>);
<anchor xml:id="__texture_manager_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.Add(tileMap.passRamp,&#32;textureData.block,&#32;<emphasis role="stringliteral">&quot;_MainTex&quot;</emphasis>);
<anchor xml:id="__texture_manager_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.Add(tileMap.passWaterBlock,&#32;textureData.block,&#32;<emphasis role="stringliteral">&quot;_MainTex&quot;</emphasis>);
<anchor xml:id="__texture_manager_8cs_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.Add(tileMap.passFog,&#32;textureData.block,&#32;<emphasis role="stringliteral">&quot;_MainTex&quot;</emphasis>);
<anchor xml:id="__texture_manager_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.Add(tileMap.passLiquid,&#32;textureData.block,&#32;<emphasis role="stringliteral">&quot;_MainTex&quot;</emphasis>);
<anchor xml:id="__texture_manager_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.Add(tileMap.passBlockEx,&#32;textureData.block,&#32;<emphasis role="stringliteral">&quot;_MainTex&quot;</emphasis>);
<anchor xml:id="__texture_manager_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.Add(tileMap.passInner,&#32;textureData.block,&#32;<emphasis role="stringliteral">&quot;_MainTex&quot;</emphasis>);
<anchor xml:id="__texture_manager_8cs_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.Add(tileMap.passBlockMarker,&#32;textureData.block,&#32;<emphasis role="stringliteral">&quot;_MainTex&quot;</emphasis>);
<anchor xml:id="__texture_manager_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.Add(tileMap.passEdge,&#32;textureData.floor,&#32;<emphasis role="stringliteral">&quot;_MainTex&quot;</emphasis>);
<anchor xml:id="__texture_manager_8cs_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.Add(tileMap.passFloorEx,&#32;textureData.floor,&#32;<emphasis role="stringliteral">&quot;_MainTex&quot;</emphasis>);
<anchor xml:id="__texture_manager_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.Add(tileMap.passFloorWater,&#32;textureData.floor,&#32;<emphasis role="stringliteral">&quot;_MainTex&quot;</emphasis>);
<anchor xml:id="__texture_manager_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.Add(tileMap.passAutoTile,&#32;textureData.floor,&#32;<emphasis role="stringliteral">&quot;_MainTex&quot;</emphasis>);
<anchor xml:id="__texture_manager_8cs_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.Add(tileMap.passShore,&#32;textureData.floor,&#32;<emphasis role="stringliteral">&quot;_MainTex&quot;</emphasis>);
<anchor xml:id="__texture_manager_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.Add(tileMap.passAutoTileWater,&#32;textureData.floor,&#32;<emphasis role="stringliteral">&quot;_MainTex&quot;</emphasis>);
<anchor xml:id="__texture_manager_8cs_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.Add(tileMap.passFloorMarker,&#32;textureData.floor,&#32;<emphasis role="stringliteral">&quot;_MainTex&quot;</emphasis>);
<anchor xml:id="__texture_manager_8cs_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.Add(tileMap.passCharaL,&#32;textureData.objs_C,&#32;<emphasis role="stringliteral">&quot;_MainTex&quot;</emphasis>);
<anchor xml:id="__texture_manager_8cs_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.Add(tileMap.passIcon,&#32;textureData.objs_S,&#32;<emphasis role="stringliteral">&quot;_MainTex&quot;</emphasis>);
<anchor xml:id="__texture_manager_8cs_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.AddList(textureData.world,&#32;<emphasis role="stringliteral">&quot;world.png&quot;</emphasis>);
<anchor xml:id="__texture_manager_8cs_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.AddList(textureData.bird,&#32;<emphasis role="stringliteral">&quot;bird1.png&quot;</emphasis>);
<anchor xml:id="__texture_manager_8cs_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(FileInfo&#32;fileInfo&#32;<emphasis role="keywordflow">in</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;DirectoryInfo(CorePath.user&#32;+&#32;<emphasis role="stringliteral">&quot;/Texture&#32;Replace&quot;</emphasis>).GetFiles())
<anchor xml:id="__texture_manager_8cs_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__texture_manager_8cs_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(fileInfo.Name.EndsWith(<emphasis role="stringliteral">&quot;.png&quot;</emphasis>))
<anchor xml:id="__texture_manager_8cs_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__texture_manager_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.TryAddReplace(fileInfo,&#32;<link linkend="_class_texture_replace">TextureReplace</link>.Source.User,&#32;<emphasis role="keyword">true</emphasis>,&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__texture_manager_8cs_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__texture_manager_8cs_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__texture_manager_8cs_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(FileInfo&#32;file&#32;<emphasis role="keywordflow">in</emphasis>&#32;<link linkend="_class_e_class">EClass</link>.core.mods.replaceFiles)
<anchor xml:id="__texture_manager_8cs_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__texture_manager_8cs_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.TryAddReplace(file,&#32;<link linkend="_class_texture_replace">TextureReplace</link>.Source.Mod,&#32;<emphasis role="keyword">true</emphasis>,&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__texture_manager_8cs_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__texture_manager_8cs_source_1l00068"/>00068 &#32;&#32;&#32;&#32;}
<anchor xml:id="__texture_manager_8cs_source_1l00069"/>00069 
<anchor xml:id="__texture_manager_8cs_source_1l00070"/>00070 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06000829&#32;RID:&#32;2089&#32;RVA:&#32;0x00035DCC&#32;File&#32;Offset:&#32;0x00033FCC</emphasis>
<anchor xml:id="__texture_manager_8cs_source_1l00071"/>00071 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;AddBase(<link linkend="_class_texture_data">TextureData</link>&#32;data,&#32;<emphasis role="keywordtype">string</emphasis>&#32;path,&#32;<link linkend="_class_mesh_pass">MeshPass</link>&#32;pass,&#32;<emphasis role="keywordtype">string</emphasis>&#32;texName&#32;=&#32;<emphasis role="stringliteral">&quot;_MainTex&quot;</emphasis>)
<anchor xml:id="__texture_manager_8cs_source_1l00072"/>00072 &#32;&#32;&#32;&#32;{
<anchor xml:id="__texture_manager_8cs_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.texMap[data.id]&#32;=&#32;data;
<anchor xml:id="__texture_manager_8cs_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;data.path&#32;=&#32;this.pathTex&#32;+&#32;path;
<anchor xml:id="__texture_manager_8cs_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;data.texName&#32;=&#32;texName;
<anchor xml:id="__texture_manager_8cs_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;data.dictReplace.Clear();
<anchor xml:id="__texture_manager_8cs_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;data.tileW&#32;=&#32;data.tex.width&#32;/&#32;(int)pass.pmesh.tiling.x;
<anchor xml:id="__texture_manager_8cs_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;data.tileH&#32;=&#32;data.tex.height&#32;/&#32;(int)pass.pmesh.tiling.y;
<anchor xml:id="__texture_manager_8cs_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.texMap[data.id].listPass.Add(pass);
<anchor xml:id="__texture_manager_8cs_source_1l00080"/>00080 &#32;&#32;&#32;&#32;}
<anchor xml:id="__texture_manager_8cs_source_1l00081"/>00081 
<anchor xml:id="__texture_manager_8cs_source_1l00082"/>00082 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x0600082A&#32;RID:&#32;2090&#32;RVA:&#32;0x00035E72&#32;File&#32;Offset:&#32;0x00034072</emphasis>
<anchor xml:id="__texture_manager_8cs_source_1l00083"/>00083 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Add(<link linkend="_class_mesh_pass">MeshPass</link>&#32;to,&#32;<link linkend="_class_texture_data">TextureData</link>&#32;from,&#32;<emphasis role="keywordtype">string</emphasis>&#32;texName&#32;=&#32;<emphasis role="stringliteral">&quot;_MainTex&quot;</emphasis>)
<anchor xml:id="__texture_manager_8cs_source_1l00084"/>00084 &#32;&#32;&#32;&#32;{
<anchor xml:id="__texture_manager_8cs_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.texMap[from.id].listPass.Add(to);
<anchor xml:id="__texture_manager_8cs_source_1l00086"/>00086 &#32;&#32;&#32;&#32;}
<anchor xml:id="__texture_manager_8cs_source_1l00087"/>00087 
<anchor xml:id="__texture_manager_8cs_source_1l00088"/>00088 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x0600082B&#32;RID:&#32;2091&#32;RVA:&#32;0x00035E90&#32;File&#32;Offset:&#32;0x00034090</emphasis>
<anchor xml:id="__texture_manager_8cs_source_1l00089"/>00089 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;AddList(<link linkend="_class_texture_data">TextureData</link>&#32;data,&#32;<emphasis role="keywordtype">string</emphasis>&#32;path)
<anchor xml:id="__texture_manager_8cs_source_1l00090"/>00090 &#32;&#32;&#32;&#32;{
<anchor xml:id="__texture_manager_8cs_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;data.path&#32;=&#32;this.pathTex&#32;+&#32;path;
<anchor xml:id="__texture_manager_8cs_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.texMap[data.id]&#32;=&#32;data;
<anchor xml:id="__texture_manager_8cs_source_1l00093"/>00093 &#32;&#32;&#32;&#32;}
<anchor xml:id="__texture_manager_8cs_source_1l00094"/>00094 
<anchor xml:id="__texture_manager_8cs_source_1l00095"/>00095 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x0600082C&#32;RID:&#32;2092&#32;RVA:&#32;0x00035EB8&#32;File&#32;Offset:&#32;0x000340B8</emphasis>
<anchor xml:id="__texture_manager_8cs_source_1l00096"/>00096 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;RefreshTextures()
<anchor xml:id="__texture_manager_8cs_source_1l00097"/>00097 &#32;&#32;&#32;&#32;{
<anchor xml:id="__texture_manager_8cs_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_texture_data">TextureData</link>&#32;textureData&#32;<emphasis role="keywordflow">in</emphasis>&#32;this.texMap.Values)
<anchor xml:id="__texture_manager_8cs_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__texture_manager_8cs_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;textureData.TryRefresh();
<anchor xml:id="__texture_manager_8cs_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__texture_manager_8cs_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_e_class">EClass</link>.core.IsGameStarted&#32;&amp;&amp;&#32;<link linkend="_class_e_class">EClass</link>._zone&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;<link linkend="_class_e_class">EClass</link>._zone.isStarted)
<anchor xml:id="__texture_manager_8cs_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__texture_manager_8cs_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_e_class">EClass</link>.scene.ApplyZoneConfig();
<anchor xml:id="__texture_manager_8cs_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__texture_manager_8cs_source_1l00106"/>00106 &#32;&#32;&#32;&#32;}
<anchor xml:id="__texture_manager_8cs_source_1l00107"/>00107 
<anchor xml:id="__texture_manager_8cs_source_1l00108"/>00108 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x0600082D&#32;RID:&#32;2093&#32;RVA:&#32;0x00035F38&#32;File&#32;Offset:&#32;0x00034138</emphasis>
<anchor xml:id="__texture_manager_8cs_source_1l00109"/>00109 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnDropFile(List&lt;string&gt;&#32;paths)
<anchor xml:id="__texture_manager_8cs_source_1l00110"/>00110 &#32;&#32;&#32;&#32;{
<anchor xml:id="__texture_manager_8cs_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;num&#32;=&#32;0;
<anchor xml:id="__texture_manager_8cs_source_1l00112"/>00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<emphasis role="keywordtype">string</emphasis>&#32;fileName&#32;<emphasis role="keywordflow">in</emphasis>&#32;paths)
<anchor xml:id="__texture_manager_8cs_source_1l00113"/>00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__texture_manager_8cs_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;FileInfo&#32;fileInfo&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;FileInfo(fileName);
<anchor xml:id="__texture_manager_8cs_source_1l00115"/>00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.TryAddReplace(fileInfo,&#32;<link linkend="_class_texture_replace">TextureReplace</link>.Source.User,&#32;<emphasis role="keyword">false</emphasis>,&#32;<emphasis role="keyword">false</emphasis>))
<anchor xml:id="__texture_manager_8cs_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__texture_manager_8cs_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;text&#32;=&#32;CorePath.user&#32;+&#32;<emphasis role="stringliteral">&quot;/Texture&#32;Replace/&quot;</emphasis>&#32;+&#32;fileInfo.Name;
<anchor xml:id="__texture_manager_8cs_source_1l00118"/>00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">try</emphasis>
<anchor xml:id="__texture_manager_8cs_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__texture_manager_8cs_source_1l00120"/>00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(File.Exists(text))
<anchor xml:id="__texture_manager_8cs_source_1l00121"/>00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__texture_manager_8cs_source_1l00122"/>00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;File.Delete(text);
<anchor xml:id="__texture_manager_8cs_source_1l00123"/>00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__texture_manager_8cs_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fileInfo.CopyTo(text,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__texture_manager_8cs_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__texture_manager_8cs_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">catch</emphasis>&#32;(Exception)
<anchor xml:id="__texture_manager_8cs_source_1l00127"/>00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__texture_manager_8cs_source_1l00128"/>00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__texture_manager_8cs_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.TryAddReplace(<emphasis role="keyword">new</emphasis>&#32;FileInfo(text),&#32;<link linkend="_class_texture_replace">TextureReplace</link>.Source.User,&#32;<emphasis role="keyword">true</emphasis>,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__texture_manager_8cs_source_1l00130"/>00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num++;
<anchor xml:id="__texture_manager_8cs_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__texture_manager_8cs_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__texture_manager_8cs_source_1l00133"/>00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_msg">Msg</link>.Say(<emphasis role="stringliteral">&quot;Imported&#32;&quot;</emphasis>&#32;+&#32;num.ToString()&#32;+&#32;<emphasis role="stringliteral">&quot;image(s)&quot;</emphasis>);
<anchor xml:id="__texture_manager_8cs_source_1l00134"/>00134 &#32;&#32;&#32;&#32;}
<anchor xml:id="__texture_manager_8cs_source_1l00135"/>00135 
<anchor xml:id="__texture_manager_8cs_source_1l00136"/>00136 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x0600082E&#32;RID:&#32;2094&#32;RVA:&#32;0x00036000&#32;File&#32;Offset:&#32;0x00034200</emphasis>
<anchor xml:id="__texture_manager_8cs_source_1l00137"/>00137 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;TryAddReplace(FileInfo&#32;file,&#32;<link linkend="_class_texture_replace">TextureReplace</link>.Source&#32;source&#32;=&#32;<link linkend="_class_texture_replace">TextureReplace</link>.Source.Mod,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;add&#32;=&#32;<emphasis role="keyword">true</emphasis>,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;refresh&#32;=&#32;<emphasis role="keyword">false</emphasis>)
<anchor xml:id="__texture_manager_8cs_source_1l00138"/>00138 &#32;&#32;&#32;&#32;{
<anchor xml:id="__texture_manager_8cs_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>[]&#32;array&#32;=&#32;Path.GetFileNameWithoutExtension(file.Name).Split(<emphasis role="charliteral">&apos;_&apos;</emphasis>,&#32;StringSplitOptions.None);
<anchor xml:id="__texture_manager_8cs_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(array.Length&#32;==&#32;1)
<anchor xml:id="__texture_manager_8cs_source_1l00141"/>00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__texture_manager_8cs_source_1l00142"/>00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__texture_manager_8cs_source_1l00143"/>00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__texture_manager_8cs_source_1l00144"/>00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;key&#32;=&#32;array[0];
<anchor xml:id="__texture_manager_8cs_source_1l00145"/>00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;index;
<anchor xml:id="__texture_manager_8cs_source_1l00146"/>00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<emphasis role="keywordtype">int</emphasis>.TryParse(array[1],&#32;out&#32;index))
<anchor xml:id="__texture_manager_8cs_source_1l00147"/>00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__texture_manager_8cs_source_1l00148"/>00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__texture_manager_8cs_source_1l00149"/>00149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__texture_manager_8cs_source_1l00150"/>00150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!this.texMap.ContainsKey(key))
<anchor xml:id="__texture_manager_8cs_source_1l00151"/>00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__texture_manager_8cs_source_1l00152"/>00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__texture_manager_8cs_source_1l00153"/>00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__texture_manager_8cs_source_1l00154"/>00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_texture_data">TextureData</link>&#32;textureData&#32;=&#32;this.texMap[key];
<anchor xml:id="__texture_manager_8cs_source_1l00155"/>00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(textureData.listPass.Count&#32;==&#32;0)
<anchor xml:id="__texture_manager_8cs_source_1l00156"/>00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__texture_manager_8cs_source_1l00157"/>00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__texture_manager_8cs_source_1l00158"/>00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__texture_manager_8cs_source_1l00159"/>00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(add)
<anchor xml:id="__texture_manager_8cs_source_1l00160"/>00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__texture_manager_8cs_source_1l00161"/>00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;textureData.AddReplace(<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_texture_replace">TextureReplace</link>
<anchor xml:id="__texture_manager_8cs_source_1l00162"/>00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__texture_manager_8cs_source_1l00163"/>00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;file&#32;=&#32;file,
<anchor xml:id="__texture_manager_8cs_source_1l00164"/>00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;index&#32;=&#32;index,
<anchor xml:id="__texture_manager_8cs_source_1l00165"/>00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;data&#32;=&#32;textureData,
<anchor xml:id="__texture_manager_8cs_source_1l00166"/>00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;source&#32;=&#32;source
<anchor xml:id="__texture_manager_8cs_source_1l00167"/>00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__texture_manager_8cs_source_1l00168"/>00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(refresh)
<anchor xml:id="__texture_manager_8cs_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__texture_manager_8cs_source_1l00170"/>00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;textureData.TryRefresh();
<anchor xml:id="__texture_manager_8cs_source_1l00171"/>00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__texture_manager_8cs_source_1l00172"/>00172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__texture_manager_8cs_source_1l00173"/>00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__texture_manager_8cs_source_1l00174"/>00174 &#32;&#32;&#32;&#32;}
<anchor xml:id="__texture_manager_8cs_source_1l00175"/>00175 
<anchor xml:id="__texture_manager_8cs_source_1l00176"/>00176 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x0600082F&#32;RID:&#32;2095&#32;RVA:&#32;0x0003609C&#32;File&#32;Offset:&#32;0x0003429C</emphasis>
<anchor xml:id="__texture_manager_8cs_source_1l00177"/>00177 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;ApplyLocalReplace(<emphasis role="keywordtype">string</emphasis>&#32;path)
<anchor xml:id="__texture_manager_8cs_source_1l00178"/>00178 &#32;&#32;&#32;&#32;{
<anchor xml:id="__texture_manager_8cs_source_1l00179"/>00179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_texture_data">TextureData</link>&#32;textureData&#32;<emphasis role="keywordflow">in</emphasis>&#32;this.texMap.Values)
<anchor xml:id="__texture_manager_8cs_source_1l00180"/>00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__texture_manager_8cs_source_1l00181"/>00181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(textureData.listReplaceLocal.Count&#32;&gt;&#32;0)
<anchor xml:id="__texture_manager_8cs_source_1l00182"/>00182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__texture_manager_8cs_source_1l00183"/>00183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;textureData.forceRefresh&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__texture_manager_8cs_source_1l00184"/>00184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_texture_replace">TextureReplace</link>&#32;textureReplace&#32;<emphasis role="keywordflow">in</emphasis>&#32;textureData.listReplaceLocal)
<anchor xml:id="__texture_manager_8cs_source_1l00185"/>00185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__texture_manager_8cs_source_1l00186"/>00186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;textureReplace.DestoryTex();
<anchor xml:id="__texture_manager_8cs_source_1l00187"/>00187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(textureReplace.original&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__texture_manager_8cs_source_1l00188"/>00188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__texture_manager_8cs_source_1l00189"/>00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;textureData.dictReplace[textureReplace.index]&#32;=&#32;textureReplace.original;
<anchor xml:id="__texture_manager_8cs_source_1l00190"/>00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__texture_manager_8cs_source_1l00191"/>00191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__texture_manager_8cs_source_1l00192"/>00192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__texture_manager_8cs_source_1l00193"/>00193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;textureData.dictReplace.Remove(textureReplace.index);
<anchor xml:id="__texture_manager_8cs_source_1l00194"/>00194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__texture_manager_8cs_source_1l00195"/>00195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__texture_manager_8cs_source_1l00196"/>00196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__texture_manager_8cs_source_1l00197"/>00197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;textureData.listReplaceLocal.Clear();
<anchor xml:id="__texture_manager_8cs_source_1l00198"/>00198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__texture_manager_8cs_source_1l00199"/>00199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;path2&#32;=&#32;path&#32;+&#32;<emphasis role="stringliteral">&quot;Texture&#32;Replace&quot;</emphasis>;
<anchor xml:id="__texture_manager_8cs_source_1l00200"/>00200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Directory.Exists(path2))
<anchor xml:id="__texture_manager_8cs_source_1l00201"/>00201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__texture_manager_8cs_source_1l00202"/>00202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(FileInfo&#32;file&#32;<emphasis role="keywordflow">in</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;DirectoryInfo(path2).GetFiles())
<anchor xml:id="__texture_manager_8cs_source_1l00203"/>00203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__texture_manager_8cs_source_1l00204"/>00204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.TryAddReplace(file,&#32;<link linkend="_class_texture_replace">TextureReplace</link>.Source.Local,&#32;<emphasis role="keyword">true</emphasis>,&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__texture_manager_8cs_source_1l00205"/>00205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__texture_manager_8cs_source_1l00206"/>00206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__texture_manager_8cs_source_1l00207"/>00207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.RefreshTextures();
<anchor xml:id="__texture_manager_8cs_source_1l00208"/>00208 &#32;&#32;&#32;&#32;}
<anchor xml:id="__texture_manager_8cs_source_1l00209"/>00209 
<anchor xml:id="__texture_manager_8cs_source_1l00210"/>00210 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x0400088D&#32;RID:&#32;2189</emphasis>
<anchor xml:id="__texture_manager_8cs_source_1l00211"/>00211 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Dictionary&lt;string,&#32;TextureData&gt;&#32;texMap&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Dictionary&lt;string,&#32;TextureData&gt;();
<anchor xml:id="__texture_manager_8cs_source_1l00212"/>00212 }
</programlisting></section>
