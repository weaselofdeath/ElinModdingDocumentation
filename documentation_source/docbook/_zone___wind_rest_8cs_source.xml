<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__zone___wind_rest_8cs_source" xml:lang="en-US">
<title>Zone_WindRest.cs</title>
<indexterm><primary>Elin/Zone_WindRest.cs</primary></indexterm>
<programlisting linenumbering="unnumbered"><anchor xml:id="__zone___wind_rest_8cs_source_1l00001"/>00001 <emphasis role="keyword">using&#32;</emphasis>System;
<anchor xml:id="__zone___wind_rest_8cs_source_1l00002"/>00002 <emphasis role="keyword">using&#32;</emphasis>System.Collections.Generic;
<anchor xml:id="__zone___wind_rest_8cs_source_1l00003"/>00003 <emphasis role="keyword">using&#32;</emphasis>System.Runtime.CompilerServices;
<anchor xml:id="__zone___wind_rest_8cs_source_1l00004"/>00004 <emphasis role="keyword">using&#32;</emphasis>UnityEngine;
<anchor xml:id="__zone___wind_rest_8cs_source_1l00005"/>00005 
<anchor xml:id="__zone___wind_rest_8cs_source_1l00006"/>00006 <emphasis role="comment">//&#32;Token:&#32;0x020006FD&#32;RID:&#32;1789</emphasis>
<anchor xml:id="__zone___wind_rest_8cs_source_1l00007"/><link linkend="_class_zone___wind_rest">00007</link> <emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_zone___wind_rest">Zone_WindRest</link>&#32;:&#32;<link linkend="_class_zone">Zone</link>
<anchor xml:id="__zone___wind_rest_8cs_source_1l00008"/>00008 {
<anchor xml:id="__zone___wind_rest_8cs_source_1l00009"/>00009 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x17000F9B&#32;RID:&#32;3995</emphasis>
<anchor xml:id="__zone___wind_rest_8cs_source_1l00010"/>00010 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;(get)&#32;Token:&#32;0x060033FF&#32;RID:&#32;13311&#32;RVA:&#32;0x0011BBF3&#32;File&#32;Offset:&#32;0x00119DF3</emphasis>
<anchor xml:id="__zone___wind_rest_8cs_source_1l00011"/>00011 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;IsSnowCovered
<anchor xml:id="__zone___wind_rest_8cs_source_1l00012"/>00012 &#32;&#32;&#32;&#32;{
<anchor xml:id="__zone___wind_rest_8cs_source_1l00013"/>00013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
<anchor xml:id="__zone___wind_rest_8cs_source_1l00014"/>00014 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__zone___wind_rest_8cs_source_1l00015"/>00015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__zone___wind_rest_8cs_source_1l00016"/>00016 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__zone___wind_rest_8cs_source_1l00017"/>00017 &#32;&#32;&#32;&#32;}
<anchor xml:id="__zone___wind_rest_8cs_source_1l00018"/>00018 
<anchor xml:id="__zone___wind_rest_8cs_source_1l00019"/>00019 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06003400&#32;RID:&#32;13312&#32;RVA:&#32;0x0011BBF8&#32;File&#32;Offset:&#32;0x00119DF8</emphasis>
<anchor xml:id="__zone___wind_rest_8cs_source_1l00020"/>00020 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnGenerateMap()
<anchor xml:id="__zone___wind_rest_8cs_source_1l00021"/>00021 &#32;&#32;&#32;&#32;{
<anchor xml:id="__zone___wind_rest_8cs_source_1l00022"/>00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;base.OnGenerateMap();
<anchor xml:id="__zone___wind_rest_8cs_source_1l00023"/>00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;List&lt;Dictionary&lt;string,&#32;string&gt;&gt;&#32;list&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;ExcelData(<emphasis role="stringliteral">&quot;Data/Raw/dagger_graves&quot;</emphasis>,&#32;1).BuildList(<emphasis role="stringliteral">&quot;_default&quot;</emphasis>);
<anchor xml:id="__zone___wind_rest_8cs_source_1l00024"/>00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;list.RemoveAt(0);
<anchor xml:id="__zone___wind_rest_8cs_source_1l00025"/>00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;num&#32;=&#32;0;
<anchor xml:id="__zone___wind_rest_8cs_source_1l00026"/>00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_thing">Thing</link>&#32;thing&#32;<emphasis role="keywordflow">in</emphasis>&#32;<link linkend="_class_e_class">EClass</link>._map.things)
<anchor xml:id="__zone___wind_rest_8cs_source_1l00027"/>00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__zone___wind_rest_8cs_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!(thing.id&#32;!=&#32;<emphasis role="stringliteral">&quot;grave_dagger1&quot;</emphasis>)&#32;||&#32;!(thing.id&#32;!=&#32;<emphasis role="stringliteral">&quot;grave_dagger2&quot;</emphasis>))
<anchor xml:id="__zone___wind_rest_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__zone___wind_rest_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;thing.isOn&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__zone___wind_rest_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(num&#32;&lt;&#32;list.Count)
<anchor xml:id="__zone___wind_rest_8cs_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__zone___wind_rest_8cs_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Dictionary&lt;string,&#32;string&gt;&#32;dictionary&#32;=&#32;list[num];
<anchor xml:id="__zone___wind_rest_8cs_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;num2&#32;=&#32;dictionary[<emphasis role="stringliteral">&quot;id&quot;</emphasis>].ToInt();
<anchor xml:id="__zone___wind_rest_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num++;
<anchor xml:id="__zone___wind_rest_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(num2&#32;!=&#32;0)
<anchor xml:id="__zone___wind_rest_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__zone___wind_rest_8cs_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;thing.c_note&#32;=&#32;dictionary[<emphasis role="stringliteral">&quot;First_&quot;</emphasis>&#32;+&#32;(Lang.isJP&#32;?&#32;<emphasis role="stringliteral">&quot;JP&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;EN&quot;</emphasis>)];
<anchor xml:id="__zone___wind_rest_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;thing.c_context&#32;=&#32;dictionary[<emphasis role="stringliteral">&quot;Full&quot;</emphasis>];
<anchor xml:id="__zone___wind_rest_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;thing.c_idBacker&#32;=&#32;num2;
<anchor xml:id="__zone___wind_rest_8cs_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;thing.isModified&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__zone___wind_rest_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__zone___wind_rest_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__zone___wind_rest_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__zone___wind_rest_8cs_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__zone___wind_rest_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Debug.Log(num.ToString()&#32;+&#32;<emphasis role="stringliteral">&quot;/&quot;</emphasis>&#32;+&#32;list.Count.ToString());
<anchor xml:id="__zone___wind_rest_8cs_source_1l00047"/>00047 &#32;&#32;&#32;&#32;}
<anchor xml:id="__zone___wind_rest_8cs_source_1l00048"/>00048 
<anchor xml:id="__zone___wind_rest_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06003401&#32;RID:&#32;13313&#32;RVA:&#32;0x0011BD3C&#32;File&#32;Offset:&#32;0x00119F3C</emphasis>
<anchor xml:id="__zone___wind_rest_8cs_source_1l00050"/>00050 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnAfterSimulate()
<anchor xml:id="__zone___wind_rest_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;{
<anchor xml:id="__zone___wind_rest_8cs_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;base.OnAfterSimulate();
<anchor xml:id="__zone___wind_rest_8cs_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(base.HourSinceLastActive&#32;&gt;=&#32;168)
<anchor xml:id="__zone___wind_rest_8cs_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__zone___wind_rest_8cs_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_zone___wind_rest">Zone_WindRest</link>.&lt;OnAfterSimulate&gt;g__TryRevive|3_0(<emphasis role="stringliteral">&quot;eureka&quot;</emphasis>,&#32;60,&#32;61);
<anchor xml:id="__zone___wind_rest_8cs_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_zone___wind_rest">Zone_WindRest</link>.&lt;OnAfterSimulate&gt;g__TryRevive|3_0(<emphasis role="stringliteral">&quot;billy&quot;</emphasis>,&#32;35,&#32;64);
<anchor xml:id="__zone___wind_rest_8cs_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__zone___wind_rest_8cs_source_1l00058"/>00058 &#32;&#32;&#32;&#32;}
<anchor xml:id="__zone___wind_rest_8cs_source_1l00059"/>00059 
<anchor xml:id="__zone___wind_rest_8cs_source_1l00060"/>00060 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06003403&#32;RID:&#32;13315&#32;RVA:&#32;0x0011BD78&#32;File&#32;Offset:&#32;0x00119F78</emphasis>
<anchor xml:id="__zone___wind_rest_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;[CompilerGenerated]
<anchor xml:id="__zone___wind_rest_8cs_source_1l00062"/>00062 &#32;&#32;&#32;&#32;<emphasis role="keyword">internal</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;void&#32;&lt;OnAfterSimulate&gt;g__TryRevive|3_0(<emphasis role="keywordtype">string</emphasis>&#32;<emphasis role="keywordtype">id</emphasis>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;x,&#32;<emphasis role="keywordtype">int</emphasis>&#32;y)
<anchor xml:id="__zone___wind_rest_8cs_source_1l00063"/>00063 &#32;&#32;&#32;&#32;{
<anchor xml:id="__zone___wind_rest_8cs_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_e_class">EClass</link>.game.cards.globalCharas.Find(<emphasis role="keywordtype">id</emphasis>)&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__zone___wind_rest_8cs_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__zone___wind_rest_8cs_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;flag&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__zone___wind_rest_8cs_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;(List&lt;Chara&gt;.Enumerator&#32;enumerator&#32;=&#32;<link linkend="_class_e_class">EClass</link>._map.charas.GetEnumerator())
<anchor xml:id="__zone___wind_rest_8cs_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__zone___wind_rest_8cs_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(enumerator.MoveNext())
<anchor xml:id="__zone___wind_rest_8cs_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__zone___wind_rest_8cs_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(enumerator.Current.id&#32;==&#32;<emphasis role="keywordtype">id</emphasis>)
<anchor xml:id="__zone___wind_rest_8cs_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__zone___wind_rest_8cs_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;flag&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__zone___wind_rest_8cs_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__zone___wind_rest_8cs_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__zone___wind_rest_8cs_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__zone___wind_rest_8cs_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!flag)
<anchor xml:id="__zone___wind_rest_8cs_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__zone___wind_rest_8cs_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_e_class">EClass</link>._zone.AddCard(<link linkend="_class_chara_gen">CharaGen</link>.Create(<emphasis role="keywordtype">id</emphasis>,&#32;-1),&#32;x,&#32;y);
<anchor xml:id="__zone___wind_rest_8cs_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__zone___wind_rest_8cs_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__zone___wind_rest_8cs_source_1l00082"/>00082 &#32;&#32;&#32;&#32;}
<anchor xml:id="__zone___wind_rest_8cs_source_1l00083"/>00083 }
</programlisting></section>
