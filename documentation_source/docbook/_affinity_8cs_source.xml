<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__affinity_8cs_source" xml:lang="en-US">
<title>Affinity.cs</title>
<indexterm><primary>Elin/Affinity.cs</primary></indexterm>
<programlisting linenumbering="unnumbered"><anchor xml:id="__affinity_8cs_source_1l00001"/>00001 <emphasis role="keyword">using&#32;</emphasis>System;
<anchor xml:id="__affinity_8cs_source_1l00002"/>00002 <emphasis role="keyword">using&#32;</emphasis>System.Collections.Generic;
<anchor xml:id="__affinity_8cs_source_1l00003"/>00003 <emphasis role="keyword">using&#32;</emphasis>UnityEngine;
<anchor xml:id="__affinity_8cs_source_1l00004"/>00004 
<anchor xml:id="__affinity_8cs_source_1l00005"/>00005 <emphasis role="comment">//&#32;Token:&#32;0x02000035&#32;RID:&#32;53</emphasis>
<anchor xml:id="__affinity_8cs_source_1l00006"/>00006 [Serializable]
<anchor xml:id="__affinity_8cs_source_1l00007"/><link linkend="_class_affinity">00007</link> <emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_affinity">Affinity</link>&#32;:&#32;<link linkend="_class_e_class">EClass</link>
<anchor xml:id="__affinity_8cs_source_1l00008"/>00008 {
<anchor xml:id="__affinity_8cs_source_1l00009"/>00009 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x1700003E&#32;RID:&#32;62</emphasis>
<anchor xml:id="__affinity_8cs_source_1l00010"/>00010 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;(get)&#32;Token:&#32;0x06000176&#32;RID:&#32;374&#32;RVA:&#32;0x0000E046&#32;File&#32;Offset:&#32;0x0000C246</emphasis>
<anchor xml:id="__affinity_8cs_source_1l00011"/>00011 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;List&lt;Affinity&gt;&#32;list
<anchor xml:id="__affinity_8cs_source_1l00012"/>00012 &#32;&#32;&#32;&#32;{
<anchor xml:id="__affinity_8cs_source_1l00013"/>00013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
<anchor xml:id="__affinity_8cs_source_1l00014"/>00014 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__affinity_8cs_source_1l00015"/>00015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_e_class">EClass</link>.gamedata.affinities;
<anchor xml:id="__affinity_8cs_source_1l00016"/>00016 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__affinity_8cs_source_1l00017"/>00017 &#32;&#32;&#32;&#32;}
<anchor xml:id="__affinity_8cs_source_1l00018"/>00018 
<anchor xml:id="__affinity_8cs_source_1l00019"/>00019 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x1700003F&#32;RID:&#32;63</emphasis>
<anchor xml:id="__affinity_8cs_source_1l00020"/>00020 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;(get)&#32;Token:&#32;0x06000177&#32;RID:&#32;375&#32;RVA:&#32;0x0000E052&#32;File&#32;Offset:&#32;0x0000C252</emphasis>
<anchor xml:id="__affinity_8cs_source_1l00021"/>00021 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;Name
<anchor xml:id="__affinity_8cs_source_1l00022"/>00022 &#32;&#32;&#32;&#32;{
<anchor xml:id="__affinity_8cs_source_1l00023"/>00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
<anchor xml:id="__affinity_8cs_source_1l00024"/>00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__affinity_8cs_source_1l00025"/>00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Lang.GetList(<emphasis role="stringliteral">&quot;affinity&quot;</emphasis>)[<link linkend="_class_affinity">Affinity</link>.list.IndexOf(<emphasis role="keyword">this</emphasis>)];
<anchor xml:id="__affinity_8cs_source_1l00026"/>00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__affinity_8cs_source_1l00027"/>00027 &#32;&#32;&#32;&#32;}
<anchor xml:id="__affinity_8cs_source_1l00028"/>00028 
<anchor xml:id="__affinity_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06000178&#32;RID:&#32;376&#32;RVA:&#32;0x0000E06C&#32;File&#32;Offset:&#32;0x0000C26C</emphasis>
<anchor xml:id="__affinity_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class_affinity">Affinity</link>&#32;Get(<link linkend="_class_chara">Chara</link>&#32;c)
<anchor xml:id="__affinity_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;{
<anchor xml:id="__affinity_8cs_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Affinity.CC&#32;=&#32;c;
<anchor xml:id="__affinity_8cs_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_affinity">Affinity</link>&#32;affinity&#32;<emphasis role="keywordflow">in</emphasis>&#32;<link linkend="_class_affinity">Affinity</link>.list)
<anchor xml:id="__affinity_8cs_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__affinity_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(c._affinity&#32;&lt;&#32;affinity.value)
<anchor xml:id="__affinity_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__affinity_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;affinity;
<anchor xml:id="__affinity_8cs_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__affinity_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__affinity_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_affinity">Affinity</link>.list.LastItem&lt;<link linkend="_class_affinity">Affinity</link>&gt;();
<anchor xml:id="__affinity_8cs_source_1l00041"/>00041 &#32;&#32;&#32;&#32;}
<anchor xml:id="__affinity_8cs_source_1l00042"/>00042 
<anchor xml:id="__affinity_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06000179&#32;RID:&#32;377&#32;RVA:&#32;0x0000E0DC&#32;File&#32;Offset:&#32;0x0000C2DC</emphasis>
<anchor xml:id="__affinity_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;CanInvite()
<anchor xml:id="__affinity_8cs_source_1l00045"/>00045 &#32;&#32;&#32;&#32;{
<anchor xml:id="__affinity_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;EClass.debug.inviteAnytime&#32;||&#32;<link linkend="_class_affinity">Affinity</link>.list.IndexOf(<emphasis role="keyword">this</emphasis>)&#32;&gt;=&#32;6;
<anchor xml:id="__affinity_8cs_source_1l00047"/>00047 &#32;&#32;&#32;&#32;}
<anchor xml:id="__affinity_8cs_source_1l00048"/>00048 
<anchor xml:id="__affinity_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x0600017A&#32;RID:&#32;378&#32;RVA:&#32;0x0000E0FD&#32;File&#32;Offset:&#32;0x0000C2FD</emphasis>
<anchor xml:id="__affinity_8cs_source_1l00050"/>00050 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;CanMarry()
<anchor xml:id="__affinity_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;{
<anchor xml:id="__affinity_8cs_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;EClass.debug.marryAnytime&#32;||&#32;<link linkend="_class_affinity">Affinity</link>.list.IndexOf(<emphasis role="keyword">this</emphasis>)&#32;&gt;=&#32;7;
<anchor xml:id="__affinity_8cs_source_1l00053"/>00053 &#32;&#32;&#32;&#32;}
<anchor xml:id="__affinity_8cs_source_1l00054"/>00054 
<anchor xml:id="__affinity_8cs_source_1l00055"/>00055 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x0600017B&#32;RID:&#32;379&#32;RVA:&#32;0x0000E120&#32;File&#32;Offset:&#32;0x0000C320</emphasis>
<anchor xml:id="__affinity_8cs_source_1l00056"/>00056 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_thing">Thing</link>&#32;OnGift(<link linkend="_class_thing">Thing</link>&#32;t)
<anchor xml:id="__affinity_8cs_source_1l00057"/>00057 &#32;&#32;&#32;&#32;{
<anchor xml:id="__affinity_8cs_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_thing">Thing</link>&#32;result&#32;=&#32;<link linkend="_class_affinity">Affinity</link>.CC.AddThing(t.Thing,&#32;<emphasis role="keyword">true</emphasis>,&#32;-1,&#32;-1);
<anchor xml:id="__affinity_8cs_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_e_class">EClass</link>.pc.PlaySound(<emphasis role="stringliteral">&quot;build_resource&quot;</emphasis>,&#32;1f,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__affinity_8cs_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;flag&#32;=&#32;t.HasTag(CTAG.gift);
<anchor xml:id="__affinity_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;flag2&#32;=&#32;t.category.IsChildOf(<link linkend="_class_affinity">Affinity</link>.CC.GetFavCat());
<anchor xml:id="__affinity_8cs_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;flag3&#32;=&#32;t.id&#32;==&#32;<link linkend="_class_affinity">Affinity</link>.CC.GetFavFood().id;
<anchor xml:id="__affinity_8cs_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_e_class">EClass</link>.debug.alwaysFavFood&#32;&amp;&amp;&#32;t.trait&#32;is&#32;<link linkend="_class_trait_food">TraitFood</link>)
<anchor xml:id="__affinity_8cs_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__affinity_8cs_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;flag3&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__affinity_8cs_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__affinity_8cs_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;num&#32;=&#32;Mathf.Clamp(t.GetPrice(CurrencyType.Money,&#32;<emphasis role="keyword">false</emphasis>,&#32;PriceType.Default,&#32;<emphasis role="keyword">null</emphasis>)&#32;/&#32;(flag3&#32;?&#32;10&#32;:&#32;(flag2&#32;?&#32;20&#32;:&#32;200)),&#32;0,&#32;50)&#32;+&#32;(flag3&#32;?&#32;20&#32;:&#32;(flag2&#32;?&#32;5&#32;:&#32;0));
<anchor xml:id="__affinity_8cs_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num&#32;=&#32;num&#32;*&#32;100&#32;/&#32;(100&#32;+&#32;Affinity.CC.LV&#32;*&#32;10);
<anchor xml:id="__affinity_8cs_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(flag)
<anchor xml:id="__affinity_8cs_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__affinity_8cs_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num&#32;+=&#32;100;
<anchor xml:id="__affinity_8cs_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_affinity">Affinity</link>.CC.Say(<emphasis role="stringliteral">&quot;give_ring&quot;</emphasis>,&#32;<link linkend="_class_affinity">Affinity</link>.CC,&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__affinity_8cs_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_affinity">Affinity</link>.CC.Talk(<emphasis role="stringliteral">&quot;thanks3&quot;</emphasis>,&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__affinity_8cs_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__affinity_8cs_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(flag3&#32;||&#32;num&#32;&gt;&#32;20)
<anchor xml:id="__affinity_8cs_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__affinity_8cs_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_affinity">Affinity</link>.CC.Talk(<emphasis role="stringliteral">&quot;thanks3&quot;</emphasis>,&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__affinity_8cs_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__affinity_8cs_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(flag2&#32;||&#32;num&#32;&gt;&#32;10)
<anchor xml:id="__affinity_8cs_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__affinity_8cs_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_affinity">Affinity</link>.CC.Talk(<emphasis role="stringliteral">&quot;thanks&quot;</emphasis>,&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__affinity_8cs_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__affinity_8cs_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__affinity_8cs_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__affinity_8cs_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_affinity">Affinity</link>.CC.Talk(<emphasis role="stringliteral">&quot;thanks2&quot;</emphasis>,&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__affinity_8cs_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__affinity_8cs_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_affinity">Affinity</link>.CC.ModAffinity(<link linkend="_class_e_class">EClass</link>.pc,&#32;num,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__affinity_8cs_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;result;
<anchor xml:id="__affinity_8cs_source_1l00089"/>00089 &#32;&#32;&#32;&#32;}
<anchor xml:id="__affinity_8cs_source_1l00090"/>00090 
<anchor xml:id="__affinity_8cs_source_1l00091"/>00091 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x0600017C&#32;RID:&#32;380&#32;RVA:&#32;0x0000E284&#32;File&#32;Offset:&#32;0x0000C484</emphasis>
<anchor xml:id="__affinity_8cs_source_1l00092"/>00092 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnTalkRumor()
<anchor xml:id="__affinity_8cs_source_1l00093"/>00093 &#32;&#32;&#32;&#32;{
<anchor xml:id="__affinity_8cs_source_1l00094"/>00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;flag&#32;=&#32;<link linkend="_class_e_class">EClass</link>.rnd(60&#32;+&#32;<link linkend="_class_e_class">EClass</link>.pc.CHA&#32;*&#32;2&#32;+&#32;<link linkend="_class_e_class">EClass</link>.pc.Evalue(291)&#32;*&#32;3)&#32;&gt;&#32;50&#32;+&#32;this.difficulty&#32;+&#32;<link linkend="_class_e_class">EClass</link>.rnd(<link linkend="_class_affinity">Affinity</link>.CC.CHA&#32;+&#32;1);
<anchor xml:id="__affinity_8cs_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_affinity">Affinity</link>.CC.ModAffinity(<link linkend="_class_e_class">EClass</link>.pc,&#32;flag&#32;?&#32;(<link linkend="_class_e_class">EClass</link>.rnd(4)&#32;+&#32;1)&#32;:&#32;(-<link linkend="_class_e_class">EClass</link>.rnd(4)&#32;-&#32;1),&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__affinity_8cs_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_e_class">EClass</link>.debug.unlimitedInterest)
<anchor xml:id="__affinity_8cs_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__affinity_8cs_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Affinity.CC.interest&#32;-=&#32;10&#32;+&#32;<link linkend="_class_e_class">EClass</link>.rnd(10);
<anchor xml:id="__affinity_8cs_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__affinity_8cs_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_e_class">EClass</link>.pc.ModExp(291,&#32;20);
<anchor xml:id="__affinity_8cs_source_1l00101"/>00101 &#32;&#32;&#32;&#32;}
<anchor xml:id="__affinity_8cs_source_1l00102"/>00102 
<anchor xml:id="__affinity_8cs_source_1l00103"/>00103 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x0600017D&#32;RID:&#32;381&#32;RVA:&#32;0x0000E334&#32;File&#32;Offset:&#32;0x0000C534</emphasis>
<anchor xml:id="__affinity_8cs_source_1l00104"/>00104 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;Mod(<emphasis role="keywordtype">int</emphasis>&#32;a)
<anchor xml:id="__affinity_8cs_source_1l00105"/>00105 &#32;&#32;&#32;&#32;{
<anchor xml:id="__affinity_8cs_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(a&#32;&lt;&#32;0)
<anchor xml:id="__affinity_8cs_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__affinity_8cs_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Affinity.CC._affinity&#32;+=&#32;a;
<anchor xml:id="__affinity_8cs_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;a;
<anchor xml:id="__affinity_8cs_source_1l00110"/>00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__affinity_8cs_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;num&#32;=&#32;0;
<anchor xml:id="__affinity_8cs_source_1l00112"/>00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;a;&#32;i++)
<anchor xml:id="__affinity_8cs_source_1l00113"/>00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__affinity_8cs_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_affinity">Affinity</link>&#32;affinity&#32;=&#32;<link linkend="_class_affinity">Affinity</link>.Get(<link linkend="_class_affinity">Affinity</link>.CC);
<anchor xml:id="__affinity_8cs_source_1l00115"/>00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_e_class">EClass</link>.rnd(100&#32;+&#32;affinity.difficulty)&#32;&lt;&#32;100)
<anchor xml:id="__affinity_8cs_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__affinity_8cs_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_chara">Chara</link>&#32;cc&#32;=&#32;<link linkend="_class_affinity">Affinity</link>.CC;
<anchor xml:id="__affinity_8cs_source_1l00118"/>00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;affinity2&#32;=&#32;cc._affinity;
<anchor xml:id="__affinity_8cs_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cc._affinity&#32;=&#32;affinity2&#32;+&#32;1;
<anchor xml:id="__affinity_8cs_source_1l00120"/>00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num++;
<anchor xml:id="__affinity_8cs_source_1l00121"/>00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__affinity_8cs_source_1l00122"/>00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__affinity_8cs_source_1l00123"/>00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;num;
<anchor xml:id="__affinity_8cs_source_1l00124"/>00124 &#32;&#32;&#32;&#32;}
<anchor xml:id="__affinity_8cs_source_1l00125"/>00125 
<anchor xml:id="__affinity_8cs_source_1l00126"/>00126 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x040000EE&#32;RID:&#32;238</emphasis>
<anchor xml:id="__affinity_8cs_source_1l00127"/>00127 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class_chara">Chara</link>&#32;CC;
<anchor xml:id="__affinity_8cs_source_1l00128"/>00128 
<anchor xml:id="__affinity_8cs_source_1l00129"/>00129 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x040000EF&#32;RID:&#32;239</emphasis>
<anchor xml:id="__affinity_8cs_source_1l00130"/>00130 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;value;
<anchor xml:id="__affinity_8cs_source_1l00131"/>00131 
<anchor xml:id="__affinity_8cs_source_1l00132"/>00132 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x040000F0&#32;RID:&#32;240</emphasis>
<anchor xml:id="__affinity_8cs_source_1l00133"/>00133 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;difficulty;
<anchor xml:id="__affinity_8cs_source_1l00134"/>00134 }
</programlisting></section>
