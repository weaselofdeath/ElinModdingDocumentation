<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__layer_color_picker_8cs_source" xml:lang="en-US">
<title>LayerColorPicker.cs</title>
<indexterm><primary>Elin/LayerColorPicker.cs</primary></indexterm>
<programlisting linenumbering="unnumbered"><anchor xml:id="__layer_color_picker_8cs_source_1l00001"/>00001 <emphasis role="keyword">using&#32;</emphasis>System;
<anchor xml:id="__layer_color_picker_8cs_source_1l00002"/>00002 <emphasis role="keyword">using&#32;</emphasis>Empyrean.ColorPicker;
<anchor xml:id="__layer_color_picker_8cs_source_1l00003"/>00003 <emphasis role="keyword">using&#32;</emphasis>UnityEngine;
<anchor xml:id="__layer_color_picker_8cs_source_1l00004"/>00004 <emphasis role="keyword">using&#32;</emphasis>UnityEngine.UI;
<anchor xml:id="__layer_color_picker_8cs_source_1l00005"/>00005 
<anchor xml:id="__layer_color_picker_8cs_source_1l00006"/>00006 <emphasis role="comment">//&#32;Token:&#32;0x02000527&#32;RID:&#32;1319</emphasis>
<anchor xml:id="__layer_color_picker_8cs_source_1l00007"/><link linkend="_class_layer_color_picker">00007</link> <emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_layer_color_picker">LayerColorPicker</link>&#32;:&#32;<link linkend="_class_e_layer">ELayer</link>
<anchor xml:id="__layer_color_picker_8cs_source_1l00008"/>00008 {
<anchor xml:id="__layer_color_picker_8cs_source_1l00009"/>00009 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002363&#32;RID:&#32;9059&#32;RVA:&#32;0x000C7298&#32;File&#32;Offset:&#32;0x000C5498</emphasis>
<anchor xml:id="__layer_color_picker_8cs_source_1l00010"/>00010 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;SetColor(Color&#32;_startColor,&#32;Color&#32;_resetColor,&#32;Action&lt;PickerState,&#32;Color&gt;&#32;_onChangeColor)
<anchor xml:id="__layer_color_picker_8cs_source_1l00011"/>00011 &#32;&#32;&#32;&#32;{
<anchor xml:id="__layer_color_picker_8cs_source_1l00012"/>00012 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UIItem&#32;t&#32;=&#32;this.layoutColors.CreateMold(<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__layer_color_picker_8cs_source_1l00013"/>00013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;8;&#32;i++)
<anchor xml:id="__layer_color_picker_8cs_source_1l00014"/>00014 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__layer_color_picker_8cs_source_1l00015"/>00015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UIItem&#32;item&#32;=&#32;Util.Instantiate&lt;UIItem&gt;(t,&#32;this.layoutColors);
<anchor xml:id="__layer_color_picker_8cs_source_1l00016"/>00016 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;_i&#32;=&#32;i;
<anchor xml:id="__layer_color_picker_8cs_source_1l00017"/>00017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;item.button1.icon.color&#32;=&#32;IntColor.FromInt(<link linkend="_class_e_layer">ELayer</link>.core.config.colors[_i]);
<anchor xml:id="__layer_color_picker_8cs_source_1l00018"/>00018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;item.button1.SetOnClick(delegate
<anchor xml:id="__layer_color_picker_8cs_source_1l00019"/>00019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__layer_color_picker_8cs_source_1l00020"/>00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.picker.SelectColor(item.button1.icon.color);
<anchor xml:id="__layer_color_picker_8cs_source_1l00021"/>00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__layer_color_picker_8cs_source_1l00022"/>00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;item.button2.SetOnClick(delegate
<anchor xml:id="__layer_color_picker_8cs_source_1l00023"/>00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__layer_color_picker_8cs_source_1l00024"/>00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;item.button1.icon.color&#32;=&#32;this.picker.SelectedColor;
<anchor xml:id="__layer_color_picker_8cs_source_1l00025"/>00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_e_layer">ELayer</link>.core.config.colors[_i]&#32;=&#32;IntColor.ToInt(this.picker.SelectedColor);
<anchor xml:id="__layer_color_picker_8cs_source_1l00026"/>00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SE.Tab();
<anchor xml:id="__layer_color_picker_8cs_source_1l00027"/>00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__layer_color_picker_8cs_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__layer_color_picker_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.layoutColors.RebuildLayout(<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__layer_color_picker_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.picker.ColorUpdated&#32;+=&#32;delegate(Color&#32;c)
<anchor xml:id="__layer_color_picker_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__layer_color_picker_8cs_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_onChangeColor(PickerState.Modify,&#32;c);
<anchor xml:id="__layer_color_picker_8cs_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__layer_color_picker_8cs_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.startColor&#32;=&#32;_startColor;
<anchor xml:id="__layer_color_picker_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.resetColor&#32;=&#32;_resetColor;
<anchor xml:id="__layer_color_picker_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.picker.Init();
<anchor xml:id="__layer_color_picker_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.picker.SelectColor(_startColor);
<anchor xml:id="__layer_color_picker_8cs_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.picker.SelectColor(_startColor);
<anchor xml:id="__layer_color_picker_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.onChangeColor&#32;=&#32;_onChangeColor;
<anchor xml:id="__layer_color_picker_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;}
<anchor xml:id="__layer_color_picker_8cs_source_1l00041"/>00041 
<anchor xml:id="__layer_color_picker_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002364&#32;RID:&#32;9060&#32;RVA:&#32;0x000C73CB&#32;File&#32;Offset:&#32;0x000C55CB</emphasis>
<anchor xml:id="__layer_color_picker_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnClickConfirm()
<anchor xml:id="__layer_color_picker_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;{
<anchor xml:id="__layer_color_picker_8cs_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.onChangeColor(PickerState.Confirm,&#32;<emphasis role="keyword">this</emphasis>.picker.SelectedColor);
<anchor xml:id="__layer_color_picker_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.Close();
<anchor xml:id="__layer_color_picker_8cs_source_1l00047"/>00047 &#32;&#32;&#32;&#32;}
<anchor xml:id="__layer_color_picker_8cs_source_1l00048"/>00048 
<anchor xml:id="__layer_color_picker_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002365&#32;RID:&#32;9061&#32;RVA:&#32;0x000C73EA&#32;File&#32;Offset:&#32;0x000C55EA</emphasis>
<anchor xml:id="__layer_color_picker_8cs_source_1l00050"/>00050 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnClickCancel()
<anchor xml:id="__layer_color_picker_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;{
<anchor xml:id="__layer_color_picker_8cs_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.onChangeColor(PickerState.Cancel,&#32;<emphasis role="keyword">this</emphasis>.startColor);
<anchor xml:id="__layer_color_picker_8cs_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.Close();
<anchor xml:id="__layer_color_picker_8cs_source_1l00054"/>00054 &#32;&#32;&#32;&#32;}
<anchor xml:id="__layer_color_picker_8cs_source_1l00055"/>00055 
<anchor xml:id="__layer_color_picker_8cs_source_1l00056"/>00056 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002366&#32;RID:&#32;9062&#32;RVA:&#32;0x000C7404&#32;File&#32;Offset:&#32;0x000C5604</emphasis>
<anchor xml:id="__layer_color_picker_8cs_source_1l00057"/>00057 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnClickReset()
<anchor xml:id="__layer_color_picker_8cs_source_1l00058"/>00058 &#32;&#32;&#32;&#32;{
<anchor xml:id="__layer_color_picker_8cs_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.picker.SelectColor(this.resetColor);
<anchor xml:id="__layer_color_picker_8cs_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.onChangeColor(PickerState.Reset,&#32;<emphasis role="keyword">this</emphasis>.resetColor);
<anchor xml:id="__layer_color_picker_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;}
<anchor xml:id="__layer_color_picker_8cs_source_1l00062"/>00062 
<anchor xml:id="__layer_color_picker_8cs_source_1l00063"/>00063 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002367&#32;RID:&#32;9063&#32;RVA:&#32;0x000C742C&#32;File&#32;Offset:&#32;0x000C562C</emphasis>
<anchor xml:id="__layer_color_picker_8cs_source_1l00064"/>00064 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;OnBack()
<anchor xml:id="__layer_color_picker_8cs_source_1l00065"/>00065 &#32;&#32;&#32;&#32;{
<anchor xml:id="__layer_color_picker_8cs_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.picker.dropper.coroutine&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__layer_color_picker_8cs_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__layer_color_picker_8cs_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.picker.dropper.Stop();
<anchor xml:id="__layer_color_picker_8cs_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.picker.dropper.onDropCanceled();
<anchor xml:id="__layer_color_picker_8cs_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__layer_color_picker_8cs_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__layer_color_picker_8cs_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.onChangeColor(PickerState.Cancel,&#32;<emphasis role="keyword">this</emphasis>.startColor);
<anchor xml:id="__layer_color_picker_8cs_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;base.OnBack();
<anchor xml:id="__layer_color_picker_8cs_source_1l00074"/>00074 &#32;&#32;&#32;&#32;}
<anchor xml:id="__layer_color_picker_8cs_source_1l00075"/>00075 
<anchor xml:id="__layer_color_picker_8cs_source_1l00076"/>00076 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002368&#32;RID:&#32;9064&#32;RVA:&#32;0x000C748C&#32;File&#32;Offset:&#32;0x000C568C</emphasis>
<anchor xml:id="__layer_color_picker_8cs_source_1l00077"/>00077 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnKill()
<anchor xml:id="__layer_color_picker_8cs_source_1l00078"/>00078 &#32;&#32;&#32;&#32;{
<anchor xml:id="__layer_color_picker_8cs_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.picker.dropper.coroutine&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__layer_color_picker_8cs_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__layer_color_picker_8cs_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.picker.dropper.Stop();
<anchor xml:id="__layer_color_picker_8cs_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.picker.dropper.onDropCanceled();
<anchor xml:id="__layer_color_picker_8cs_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__layer_color_picker_8cs_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;base.OnKill();
<anchor xml:id="__layer_color_picker_8cs_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EInput.Consume(<emphasis role="keyword">false</emphasis>,&#32;1);
<anchor xml:id="__layer_color_picker_8cs_source_1l00086"/>00086 &#32;&#32;&#32;&#32;}
<anchor xml:id="__layer_color_picker_8cs_source_1l00087"/>00087 
<anchor xml:id="__layer_color_picker_8cs_source_1l00088"/>00088 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x040012D4&#32;RID:&#32;4820</emphasis>
<anchor xml:id="__layer_color_picker_8cs_source_1l00089"/>00089 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;ColorPicker&#32;picker;
<anchor xml:id="__layer_color_picker_8cs_source_1l00090"/>00090 
<anchor xml:id="__layer_color_picker_8cs_source_1l00091"/>00091 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x040012D5&#32;RID:&#32;4821</emphasis>
<anchor xml:id="__layer_color_picker_8cs_source_1l00092"/>00092 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Action&lt;PickerState,&#32;Color&gt;&#32;onChangeColor;
<anchor xml:id="__layer_color_picker_8cs_source_1l00093"/>00093 
<anchor xml:id="__layer_color_picker_8cs_source_1l00094"/>00094 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x040012D6&#32;RID:&#32;4822</emphasis>
<anchor xml:id="__layer_color_picker_8cs_source_1l00095"/>00095 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Color&#32;resetColor;
<anchor xml:id="__layer_color_picker_8cs_source_1l00096"/>00096 
<anchor xml:id="__layer_color_picker_8cs_source_1l00097"/>00097 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x040012D7&#32;RID:&#32;4823</emphasis>
<anchor xml:id="__layer_color_picker_8cs_source_1l00098"/>00098 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Color&#32;startColor;
<anchor xml:id="__layer_color_picker_8cs_source_1l00099"/>00099 
<anchor xml:id="__layer_color_picker_8cs_source_1l00100"/>00100 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x040012D8&#32;RID:&#32;4824</emphasis>
<anchor xml:id="__layer_color_picker_8cs_source_1l00101"/>00101 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;GridLayoutGroup&#32;layoutColors;
<anchor xml:id="__layer_color_picker_8cs_source_1l00102"/>00102 }
</programlisting></section>
