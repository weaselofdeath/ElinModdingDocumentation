<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__a_i_work___clean_8cs_source" xml:lang="en-US">
<title>AIWork_Clean.cs</title>
<indexterm><primary>Elin/AIWork_Clean.cs</primary></indexterm>
<programlisting linenumbering="unnumbered"><anchor xml:id="__a_i_work___clean_8cs_source_1l00001"/>00001 <emphasis role="keyword">using&#32;</emphasis>System;
<anchor xml:id="__a_i_work___clean_8cs_source_1l00002"/>00002 
<anchor xml:id="__a_i_work___clean_8cs_source_1l00003"/>00003 <emphasis role="comment">//&#32;Token:&#32;0x02000212&#32;RID:&#32;530</emphasis>
<anchor xml:id="__a_i_work___clean_8cs_source_1l00004"/><link linkend="_class_a_i_work___clean">00004</link> <emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_a_i_work___clean">AIWork_Clean</link>&#32;:&#32;<link linkend="_class_a_i_work___chore">AIWork_Chore</link>
<anchor xml:id="__a_i_work___clean_8cs_source_1l00005"/>00005 {
<anchor xml:id="__a_i_work___clean_8cs_source_1l00006"/>00006 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06000F21&#32;RID:&#32;3873&#32;RVA:&#32;0x0006EE30&#32;File&#32;Offset:&#32;0x0006D030</emphasis>
<anchor xml:id="__a_i_work___clean_8cs_source_1l00007"/>00007 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnPerformWork(<emphasis role="keywordtype">bool</emphasis>&#32;realtime)
<anchor xml:id="__a_i_work___clean_8cs_source_1l00008"/>00008 &#32;&#32;&#32;&#32;{
<anchor xml:id="__a_i_work___clean_8cs_source_1l00009"/>00009 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;30;&#32;i++)
<anchor xml:id="__a_i_work___clean_8cs_source_1l00010"/>00010 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__a_i_work___clean_8cs_source_1l00011"/>00011 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_point">Point</link>&#32;randomPoint&#32;=&#32;<link linkend="_class_e_class">EClass</link>._map.bounds.GetRandomPoint();
<anchor xml:id="__a_i_work___clean_8cs_source_1l00012"/>00012 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(randomPoint.HasDecal)
<anchor xml:id="__a_i_work___clean_8cs_source_1l00013"/>00013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__a_i_work___clean_8cs_source_1l00014"/>00014 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_e_class">EClass</link>._map.SetDecal(randomPoint.x,&#32;randomPoint.z,&#32;0,&#32;1,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__a_i_work___clean_8cs_source_1l00015"/>00015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__a_i_work___clean_8cs_source_1l00016"/>00016 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__a_i_work___clean_8cs_source_1l00017"/>00017 &#32;&#32;&#32;&#32;}
<anchor xml:id="__a_i_work___clean_8cs_source_1l00018"/>00018 }
</programlisting></section>
