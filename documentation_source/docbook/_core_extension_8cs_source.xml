<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__core_extension_8cs_source" xml:lang="en-US">
<title>CoreExtension.cs</title>
<indexterm><primary>Elin/CoreExtension.cs</primary></indexterm>
<programlisting linenumbering="unnumbered"><anchor xml:id="__core_extension_8cs_source_1l00001"/>00001 <emphasis role="keyword">using&#32;</emphasis>System;
<anchor xml:id="__core_extension_8cs_source_1l00002"/>00002 <emphasis role="keyword">using&#32;</emphasis>UnityEngine;
<anchor xml:id="__core_extension_8cs_source_1l00003"/>00003 
<anchor xml:id="__core_extension_8cs_source_1l00004"/>00004 <emphasis role="comment">//&#32;Token:&#32;0x02000007&#32;RID:&#32;7</emphasis>
<anchor xml:id="__core_extension_8cs_source_1l00005"/>00005 <emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>CoreExtension
<anchor xml:id="__core_extension_8cs_source_1l00006"/>00006 {
<anchor xml:id="__core_extension_8cs_source_1l00007"/>00007 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x0600005F&#32;RID:&#32;95&#32;RVA:&#32;0x00003764&#32;File&#32;Offset:&#32;0x00001964</emphasis>
<anchor xml:id="__core_extension_8cs_source_1l00008"/>00008 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;Color&#32;GetFixedColor(Color&#32;c,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;dark)
<anchor xml:id="__core_extension_8cs_source_1l00009"/>00009 &#32;&#32;&#32;&#32;{
<anchor xml:id="__core_extension_8cs_source_1l00010"/>00010 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SkinColorProfile&#32;@<emphasis role="keywordflow">default</emphasis>&#32;=&#32;(dark&#32;?&#32;SkinManager.Instance.skinDark.colors&#32;:&#32;SkinManager.CurrentSkin.colors)._default;
<anchor xml:id="__core_extension_8cs_source_1l00011"/>00011 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;num&#32;=&#32;1f&#32;+&#32;@<emphasis role="keywordflow">default</emphasis>.contrast;
<anchor xml:id="__core_extension_8cs_source_1l00012"/>00012 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;num2;
<anchor xml:id="__core_extension_8cs_source_1l00013"/>00013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(c.r&#32;+&#32;c.g&#32;+&#32;c.b&#32;&gt;&#32;1.5f)
<anchor xml:id="__core_extension_8cs_source_1l00014"/>00014 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__core_extension_8cs_source_1l00015"/>00015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num2&#32;=&#32;0.5f&#32;+&#32;@<emphasis role="keywordflow">default</emphasis>.strength;
<anchor xml:id="__core_extension_8cs_source_1l00016"/>00016 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__core_extension_8cs_source_1l00017"/>00017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__core_extension_8cs_source_1l00018"/>00018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__core_extension_8cs_source_1l00019"/>00019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num2&#32;=&#32;0.5f&#32;-&#32;@<emphasis role="keywordflow">default</emphasis>.strength;
<anchor xml:id="__core_extension_8cs_source_1l00020"/>00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__core_extension_8cs_source_1l00021"/>00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;c.r&#32;=&#32;Mathf.Clamp((c.r&#32;-&#32;0.5f)&#32;*&#32;num&#32;+&#32;num2,&#32;0f,&#32;1f);
<anchor xml:id="__core_extension_8cs_source_1l00022"/>00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;c.g&#32;=&#32;Mathf.Clamp((c.g&#32;-&#32;0.5f)&#32;*&#32;num&#32;+&#32;num2,&#32;0f,&#32;1f);
<anchor xml:id="__core_extension_8cs_source_1l00023"/>00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;c.b&#32;=&#32;Mathf.Clamp((c.b&#32;-&#32;0.5f)&#32;*&#32;num&#32;+&#32;num2,&#32;0f,&#32;1f);
<anchor xml:id="__core_extension_8cs_source_1l00024"/>00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;c;
<anchor xml:id="__core_extension_8cs_source_1l00025"/>00025 &#32;&#32;&#32;&#32;}
<anchor xml:id="__core_extension_8cs_source_1l00026"/>00026 
<anchor xml:id="__core_extension_8cs_source_1l00027"/>00027 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06000060&#32;RID:&#32;96&#32;RVA:&#32;0x00003854&#32;File&#32;Offset:&#32;0x00001A54</emphasis>
<anchor xml:id="__core_extension_8cs_source_1l00028"/>00028 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;TagColorGoodBad(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;s,&#32;Func&lt;bool&gt;&#32;funcGood,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;dark&#32;=&#32;<emphasis role="keyword">false</emphasis>)
<anchor xml:id="__core_extension_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;{
<anchor xml:id="__core_extension_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SkinColorProfile&#32;@<emphasis role="keywordflow">default</emphasis>&#32;=&#32;(dark&#32;?&#32;SkinManager.Instance.skinDark.colors&#32;:&#32;SkinManager.CurrentSkin.colors)._default;
<anchor xml:id="__core_extension_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>.Concat(<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>[]
<anchor xml:id="__core_extension_8cs_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__core_extension_8cs_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&lt;color=&quot;</emphasis>,
<anchor xml:id="__core_extension_8cs_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CoreExtension.GetFixedColor(funcGood()&#32;?&#32;@<emphasis role="keywordflow">default</emphasis>.textGood&#32;:&#32;@<emphasis role="keywordflow">default</emphasis>.textBad,&#32;dark).ToHex(),
<anchor xml:id="__core_extension_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&gt;&quot;</emphasis>,
<anchor xml:id="__core_extension_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;s,
<anchor xml:id="__core_extension_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&lt;/color&gt;&quot;</emphasis>
<anchor xml:id="__core_extension_8cs_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__core_extension_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;}
<anchor xml:id="__core_extension_8cs_source_1l00040"/>00040 
<anchor xml:id="__core_extension_8cs_source_1l00041"/>00041 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06000061&#32;RID:&#32;97&#32;RVA:&#32;0x000038D0&#32;File&#32;Offset:&#32;0x00001AD0</emphasis>
<anchor xml:id="__core_extension_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;TagColorGoodBad(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;s,&#32;Func&lt;bool&gt;&#32;funcGood,&#32;Func&lt;bool&gt;&#32;funcBad,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;dark&#32;=&#32;<emphasis role="keyword">false</emphasis>)
<anchor xml:id="__core_extension_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;{
<anchor xml:id="__core_extension_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SkinColorProfile&#32;@<emphasis role="keywordflow">default</emphasis>&#32;=&#32;(dark&#32;?&#32;SkinManager.Instance.skinDark.colors&#32;:&#32;SkinManager.CurrentSkin.colors)._default;
<anchor xml:id="__core_extension_8cs_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;flag&#32;=&#32;funcGood();
<anchor xml:id="__core_extension_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;flag2&#32;=&#32;funcBad();
<anchor xml:id="__core_extension_8cs_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!flag&#32;&amp;&amp;&#32;!flag2)
<anchor xml:id="__core_extension_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__core_extension_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;s;
<anchor xml:id="__core_extension_8cs_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__core_extension_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>.Concat(<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>[]
<anchor xml:id="__core_extension_8cs_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__core_extension_8cs_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&lt;color=&quot;</emphasis>,
<anchor xml:id="__core_extension_8cs_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CoreExtension.GetFixedColor(flag&#32;?&#32;@<emphasis role="keywordflow">default</emphasis>.textGood&#32;:&#32;@<emphasis role="keywordflow">default</emphasis>.textBad,&#32;dark).ToHex(),
<anchor xml:id="__core_extension_8cs_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&gt;&quot;</emphasis>,
<anchor xml:id="__core_extension_8cs_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;s,
<anchor xml:id="__core_extension_8cs_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&lt;/color&gt;&quot;</emphasis>
<anchor xml:id="__core_extension_8cs_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__core_extension_8cs_source_1l00059"/>00059 &#32;&#32;&#32;&#32;}
<anchor xml:id="__core_extension_8cs_source_1l00060"/>00060 
<anchor xml:id="__core_extension_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06000062&#32;RID:&#32;98&#32;RVA:&#32;0x0000395D&#32;File&#32;Offset:&#32;0x00001B5D</emphasis>
<anchor xml:id="__core_extension_8cs_source_1l00062"/>00062 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class_u_i_currency">UICurrency</link>&#32;AttachCurrency(<emphasis role="keyword">this</emphasis>&#32;Window&#32;window)
<anchor xml:id="__core_extension_8cs_source_1l00063"/>00063 &#32;&#32;&#32;&#32;{
<anchor xml:id="__core_extension_8cs_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Util.Instantiate&lt;<link linkend="_class_u_i_currency">UICurrency</link>&gt;(<emphasis role="stringliteral">&quot;UI/Util/UICurrency&quot;</emphasis>,&#32;window.transform);
<anchor xml:id="__core_extension_8cs_source_1l00065"/>00065 &#32;&#32;&#32;&#32;}
<anchor xml:id="__core_extension_8cs_source_1l00066"/>00066 
<anchor xml:id="__core_extension_8cs_source_1l00067"/>00067 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06000063&#32;RID:&#32;99&#32;RVA:&#32;0x0000396F&#32;File&#32;Offset:&#32;0x00001B6F</emphasis>
<anchor xml:id="__core_extension_8cs_source_1l00068"/>00068 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;TagColor(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;s,&#32;FontColor&#32;c,&#32;SkinColorProfile&#32;colors&#32;=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__core_extension_8cs_source_1l00069"/>00069 &#32;&#32;&#32;&#32;{
<anchor xml:id="__core_extension_8cs_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;s.TagColor((colors&#32;??&#32;SkinManager.CurrentColors).GetTextColor(c));
<anchor xml:id="__core_extension_8cs_source_1l00071"/>00071 &#32;&#32;&#32;&#32;}
<anchor xml:id="__core_extension_8cs_source_1l00072"/>00072 
<anchor xml:id="__core_extension_8cs_source_1l00073"/>00073 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06000064&#32;RID:&#32;100&#32;RVA:&#32;0x00003988&#32;File&#32;Offset:&#32;0x00001B88</emphasis>
<anchor xml:id="__core_extension_8cs_source_1l00074"/>00074 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;TagColor(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;text,&#32;Func&lt;bool&gt;&#32;funcGood,&#32;SkinColorProfile&#32;colors&#32;=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__core_extension_8cs_source_1l00075"/>00075 &#32;&#32;&#32;&#32;{
<anchor xml:id="__core_extension_8cs_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SkinColorProfile&#32;skinColorProfile&#32;=&#32;colors&#32;??&#32;SkinManager.CurrentColors;
<anchor xml:id="__core_extension_8cs_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;text.TagColor(funcGood()&#32;?&#32;skinColorProfile.textGood&#32;:&#32;skinColorProfile.textBad);
<anchor xml:id="__core_extension_8cs_source_1l00078"/>00078 &#32;&#32;&#32;&#32;}
<anchor xml:id="__core_extension_8cs_source_1l00079"/>00079 
<anchor xml:id="__core_extension_8cs_source_1l00080"/>00080 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06000065&#32;RID:&#32;101&#32;RVA:&#32;0x000039BC&#32;File&#32;Offset:&#32;0x00001BBC</emphasis>
<anchor xml:id="__core_extension_8cs_source_1l00081"/>00081 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;TagColor(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;text,&#32;Func&lt;bool&gt;&#32;funcGood,&#32;Func&lt;bool&gt;&#32;funcBad,&#32;SkinColorProfile&#32;colors&#32;=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__core_extension_8cs_source_1l00082"/>00082 &#32;&#32;&#32;&#32;{
<anchor xml:id="__core_extension_8cs_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SkinColorProfile&#32;skinColorProfile&#32;=&#32;colors&#32;??&#32;SkinManager.CurrentColors;
<anchor xml:id="__core_extension_8cs_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;text.TagColor(funcGood()&#32;?&#32;skinColorProfile.textGood&#32;:&#32;((funcBad&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;funcBad())&#32;?&#32;skinColorProfile.textBad&#32;:&#32;skinColorProfile.textDefault));
<anchor xml:id="__core_extension_8cs_source_1l00085"/>00085 &#32;&#32;&#32;&#32;}
<anchor xml:id="__core_extension_8cs_source_1l00086"/>00086 }
</programlisting></section>
