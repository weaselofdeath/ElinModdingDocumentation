<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__layer_sleep_8cs_source" xml:lang="en-US">
<title>LayerSleep.cs</title>
<indexterm><primary>Elin/LayerSleep.cs</primary></indexterm>
<programlisting linenumbering="unnumbered"><anchor xml:id="__layer_sleep_8cs_source_1l00001"/>00001 <emphasis role="keyword">using&#32;</emphasis>System;
<anchor xml:id="__layer_sleep_8cs_source_1l00002"/>00002 <emphasis role="keyword">using&#32;</emphasis>UnityEngine;
<anchor xml:id="__layer_sleep_8cs_source_1l00003"/>00003 
<anchor xml:id="__layer_sleep_8cs_source_1l00004"/>00004 <emphasis role="comment">//&#32;Token:&#32;0x020005BF&#32;RID:&#32;1471</emphasis>
<anchor xml:id="__layer_sleep_8cs_source_1l00005"/><link linkend="_class_layer_sleep">00005</link> <emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_layer_sleep">LayerSleep</link>&#32;:&#32;<link linkend="_class_e_layer">ELayer</link>
<anchor xml:id="__layer_sleep_8cs_source_1l00006"/>00006 {
<anchor xml:id="__layer_sleep_8cs_source_1l00007"/>00007 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002855&#32;RID:&#32;10325&#32;RVA:&#32;0x000E4134&#32;File&#32;Offset:&#32;0x000E2334</emphasis>
<anchor xml:id="__layer_sleep_8cs_source_1l00008"/>00008 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnAfterInit()
<anchor xml:id="__layer_sleep_8cs_source_1l00009"/>00009 &#32;&#32;&#32;&#32;{
<anchor xml:id="__layer_sleep_8cs_source_1l00010"/>00010 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_e_layer">ELayer</link>.ui.ShowCover(this.coverShow,&#32;this.coverAlpha,&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keywordflow">default</emphasis>(Color));
<anchor xml:id="__layer_sleep_8cs_source_1l00011"/>00011 &#32;&#32;&#32;&#32;}
<anchor xml:id="__layer_sleep_8cs_source_1l00012"/>00012 
<anchor xml:id="__layer_sleep_8cs_source_1l00013"/>00013 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002856&#32;RID:&#32;10326&#32;RVA:&#32;0x000E4161&#32;File&#32;Offset:&#32;0x000E2361</emphasis>
<anchor xml:id="__layer_sleep_8cs_source_1l00014"/>00014 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_wait">Wait</link>(<emphasis role="keywordtype">float</emphasis>&#32;duration&#32;=&#32;5f)
<anchor xml:id="__layer_sleep_8cs_source_1l00015"/>00015 &#32;&#32;&#32;&#32;{
<anchor xml:id="__layer_sleep_8cs_source_1l00016"/>00016 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_e_layer">ELayer</link>.Sound.Play(<emphasis role="stringliteral">&quot;jingle_sleep&quot;</emphasis>);
<anchor xml:id="__layer_sleep_8cs_source_1l00017"/>00017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TweenUtil.Tween(duration,&#32;<emphasis role="keyword">null</emphasis>,&#32;delegate()
<anchor xml:id="__layer_sleep_8cs_source_1l00018"/>00018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__layer_sleep_8cs_source_1l00019"/>00019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_e_layer">ELayer</link>.ui.HideCover(this.coverHide,&#32;delegate
<anchor xml:id="__layer_sleep_8cs_source_1l00020"/>00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__layer_sleep_8cs_source_1l00021"/>00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.Close();
<anchor xml:id="__layer_sleep_8cs_source_1l00022"/>00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__layer_sleep_8cs_source_1l00023"/>00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__layer_sleep_8cs_source_1l00024"/>00024 &#32;&#32;&#32;&#32;}
<anchor xml:id="__layer_sleep_8cs_source_1l00025"/>00025 
<anchor xml:id="__layer_sleep_8cs_source_1l00026"/>00026 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002857&#32;RID:&#32;10327&#32;RVA:&#32;0x000E4188&#32;File&#32;Offset:&#32;0x000E2388</emphasis>
<anchor xml:id="__layer_sleep_8cs_source_1l00027"/>00027 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Sleep(<emphasis role="keywordtype">int</emphasis>&#32;_hours,&#32;<link linkend="_class_thing">Thing</link>&#32;_bed,&#32;<link linkend="_class_thing">Thing</link>&#32;_pillow&#32;=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__layer_sleep_8cs_source_1l00028"/>00028 &#32;&#32;&#32;&#32;{
<anchor xml:id="__layer_sleep_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_e_layer">ELayer</link>.Sound.Play(<emphasis role="stringliteral">&quot;jingle_sleep&quot;</emphasis>);
<anchor xml:id="__layer_sleep_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.hours&#32;=&#32;_hours;
<anchor xml:id="__layer_sleep_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.bed&#32;=&#32;_bed;
<anchor xml:id="__layer_sleep_8cs_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.pillow&#32;=&#32;_pillow;
<anchor xml:id="__layer_sleep_8cs_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.maxMin&#32;=&#32;this.hours&#32;*&#32;60;
<anchor xml:id="__layer_sleep_8cs_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;base.InvokeRepeating(<emphasis role="stringliteral">&quot;Advance&quot;</emphasis>,&#32;this.repeatRate,&#32;this.repeatRate);
<anchor xml:id="__layer_sleep_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_e_layer">ELayer</link>.pc.faith.Revelation(<emphasis role="stringliteral">&quot;sleep&quot;</emphasis>,&#32;100);
<anchor xml:id="__layer_sleep_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_e_layer">ELayer</link>.player.stats.slept++;
<anchor xml:id="__layer_sleep_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;}
<anchor xml:id="__layer_sleep_8cs_source_1l00038"/>00038 
<anchor xml:id="__layer_sleep_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002858&#32;RID:&#32;10328&#32;RVA:&#32;0x000E4210&#32;File&#32;Offset:&#32;0x000E2410</emphasis>
<anchor xml:id="__layer_sleep_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Advance()
<anchor xml:id="__layer_sleep_8cs_source_1l00041"/>00041 &#32;&#32;&#32;&#32;{
<anchor xml:id="__layer_sleep_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.min&#32;&gt;&#32;this.maxMin)
<anchor xml:id="__layer_sleep_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__layer_sleep_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;base.CancelInvoke();
<anchor xml:id="__layer_sleep_8cs_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_e_layer">ELayer</link>._zone.IsInstance&#32;&amp;&amp;&#32;(<link linkend="_class_e_layer">ELayer</link>._zone.IsPCFaction&#32;||&#32;<link linkend="_class_e_layer">ELayer</link>._zone&#32;is&#32;<link linkend="_class_zone___field">Zone_Field</link>&#32;||&#32;<link linkend="_class_e_layer">ELayer</link>._zone.IsRegion))
<anchor xml:id="__layer_sleep_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__layer_sleep_8cs_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_e_layer">ELayer</link>.player.SimulateFaction();
<anchor xml:id="__layer_sleep_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__layer_sleep_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_chara">Chara</link>&#32;chara&#32;<emphasis role="keywordflow">in</emphasis>&#32;<link linkend="_class_e_layer">ELayer</link>.pc.party.members)
<anchor xml:id="__layer_sleep_8cs_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__layer_sleep_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;chara.OnSleep(this.bed,&#32;1);
<anchor xml:id="__layer_sleep_8cs_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__layer_sleep_8cs_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_msg">Msg</link>.Say(<emphasis role="stringliteral">&quot;slept&quot;</emphasis>,&#32;this.hours.ToString()&#32;??&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>,&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__layer_sleep_8cs_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.pillow&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;this.pillow.trait&#32;is&#32;<link linkend="_class_trait_pillow_opatos">TraitPillowOpatos</link>)
<anchor xml:id="__layer_sleep_8cs_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__layer_sleep_8cs_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_e_layer">ELayer</link>.world.region.RenewRandomSites();
<anchor xml:id="__layer_sleep_8cs_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__layer_sleep_8cs_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_e_layer">ELayer</link>.debug.ignoreAutoSave)
<anchor xml:id="__layer_sleep_8cs_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__layer_sleep_8cs_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_e_layer">ELayer</link>.game.Save(<emphasis role="keyword">false</emphasis>,&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__layer_sleep_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__layer_sleep_8cs_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_e_layer">ELayer</link>._zone.IsRegion)
<anchor xml:id="__layer_sleep_8cs_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__layer_sleep_8cs_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_e_layer">ELayer</link>._zone.Region.UpdateRandomSites();
<anchor xml:id="__layer_sleep_8cs_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__layer_sleep_8cs_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_e_layer">ELayer</link>.ui.ShowCover(0f,&#32;1f,&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keywordflow">default</emphasis>(Color));
<anchor xml:id="__layer_sleep_8cs_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TweenUtil.Delay(this.hideDelay,&#32;delegate
<anchor xml:id="__layer_sleep_8cs_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__layer_sleep_8cs_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_e_layer">ELayer</link>.ui.HideCover(this.coverHide,&#32;delegate
<anchor xml:id="__layer_sleep_8cs_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__layer_sleep_8cs_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.Close();
<anchor xml:id="__layer_sleep_8cs_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__layer_sleep_8cs_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__layer_sleep_8cs_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__layer_sleep_8cs_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__layer_sleep_8cs_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.min&#32;+=&#32;10;
<anchor xml:id="__layer_sleep_8cs_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_e_layer">ELayer</link>.world.date.AdvanceMin(10);
<anchor xml:id="__layer_sleep_8cs_source_1l00078"/>00078 &#32;&#32;&#32;&#32;}
<anchor xml:id="__layer_sleep_8cs_source_1l00079"/>00079 
<anchor xml:id="__layer_sleep_8cs_source_1l00080"/>00080 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x0400167F&#32;RID:&#32;5759</emphasis>
<anchor xml:id="__layer_sleep_8cs_source_1l00081"/>00081 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;repeatRate;
<anchor xml:id="__layer_sleep_8cs_source_1l00082"/>00082 
<anchor xml:id="__layer_sleep_8cs_source_1l00083"/>00083 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04001680&#32;RID:&#32;5760</emphasis>
<anchor xml:id="__layer_sleep_8cs_source_1l00084"/>00084 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;coverAlpha;
<anchor xml:id="__layer_sleep_8cs_source_1l00085"/>00085 
<anchor xml:id="__layer_sleep_8cs_source_1l00086"/>00086 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04001681&#32;RID:&#32;5761</emphasis>
<anchor xml:id="__layer_sleep_8cs_source_1l00087"/>00087 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;coverShow;
<anchor xml:id="__layer_sleep_8cs_source_1l00088"/>00088 
<anchor xml:id="__layer_sleep_8cs_source_1l00089"/>00089 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04001682&#32;RID:&#32;5762</emphasis>
<anchor xml:id="__layer_sleep_8cs_source_1l00090"/>00090 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;coverHide;
<anchor xml:id="__layer_sleep_8cs_source_1l00091"/>00091 
<anchor xml:id="__layer_sleep_8cs_source_1l00092"/>00092 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04001683&#32;RID:&#32;5763</emphasis>
<anchor xml:id="__layer_sleep_8cs_source_1l00093"/>00093 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;hideDelay;
<anchor xml:id="__layer_sleep_8cs_source_1l00094"/>00094 
<anchor xml:id="__layer_sleep_8cs_source_1l00095"/>00095 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04001684&#32;RID:&#32;5764</emphasis>
<anchor xml:id="__layer_sleep_8cs_source_1l00096"/>00096 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;hours;
<anchor xml:id="__layer_sleep_8cs_source_1l00097"/>00097 
<anchor xml:id="__layer_sleep_8cs_source_1l00098"/>00098 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04001685&#32;RID:&#32;5765</emphasis>
<anchor xml:id="__layer_sleep_8cs_source_1l00099"/>00099 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;min;
<anchor xml:id="__layer_sleep_8cs_source_1l00100"/>00100 
<anchor xml:id="__layer_sleep_8cs_source_1l00101"/>00101 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04001686&#32;RID:&#32;5766</emphasis>
<anchor xml:id="__layer_sleep_8cs_source_1l00102"/>00102 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;maxMin;
<anchor xml:id="__layer_sleep_8cs_source_1l00103"/>00103 
<anchor xml:id="__layer_sleep_8cs_source_1l00104"/>00104 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04001687&#32;RID:&#32;5767</emphasis>
<anchor xml:id="__layer_sleep_8cs_source_1l00105"/>00105 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<link linkend="_class_thing">Thing</link>&#32;bed;
<anchor xml:id="__layer_sleep_8cs_source_1l00106"/>00106 
<anchor xml:id="__layer_sleep_8cs_source_1l00107"/>00107 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04001688&#32;RID:&#32;5768</emphasis>
<anchor xml:id="__layer_sleep_8cs_source_1l00108"/>00108 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<link linkend="_class_thing">Thing</link>&#32;pillow;
<anchor xml:id="__layer_sleep_8cs_source_1l00109"/>00109 }
</programlisting></section>
