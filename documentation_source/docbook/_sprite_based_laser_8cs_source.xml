<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__sprite_based_laser_8cs_source" xml:lang="en-US">
<title>SpriteBasedLaser.cs</title>
<indexterm><primary>Elin/SpriteBasedLaser.cs</primary></indexterm>
<programlisting linenumbering="unnumbered"><anchor xml:id="__sprite_based_laser_8cs_source_1l00001"/>00001 <emphasis role="keyword">using&#32;</emphasis>System;
<anchor xml:id="__sprite_based_laser_8cs_source_1l00002"/>00002 <emphasis role="keyword">using&#32;</emphasis>DG.Tweening;
<anchor xml:id="__sprite_based_laser_8cs_source_1l00003"/>00003 <emphasis role="keyword">using&#32;</emphasis>UnityEngine;
<anchor xml:id="__sprite_based_laser_8cs_source_1l00004"/>00004 
<anchor xml:id="__sprite_based_laser_8cs_source_1l00005"/>00005 <emphasis role="comment">//&#32;Token:&#32;0x02000123&#32;RID:&#32;291</emphasis>
<anchor xml:id="__sprite_based_laser_8cs_source_1l00006"/><link linkend="_class_sprite_based_laser">00006</link> <emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_sprite_based_laser">SpriteBasedLaser</link>&#32;:&#32;MonoBehaviour
<anchor xml:id="__sprite_based_laser_8cs_source_1l00007"/>00007 {
<anchor xml:id="__sprite_based_laser_8cs_source_1l00008"/>00008 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x14000001&#32;RID:&#32;1</emphasis>
<anchor xml:id="__sprite_based_laser_8cs_source_1l00009"/>00009 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;(add)&#32;Token:&#32;0x060007DB&#32;RID:&#32;2011&#32;RVA:&#32;0x00032AE8&#32;File&#32;Offset:&#32;0x00030CE8</emphasis>
<anchor xml:id="__sprite_based_laser_8cs_source_1l00010"/>00010 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;(remove)&#32;Token:&#32;0x060007DC&#32;RID:&#32;2012&#32;RVA:&#32;0x00032B20&#32;File&#32;Offset:&#32;0x00030D20</emphasis>
<anchor xml:id="__sprite_based_laser_8cs_source_1l00011"/>00011 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">event</emphasis>&#32;SpriteBasedLaser.LaserHitTriggerHandler&#32;OnLaserHitTriggered;
<anchor xml:id="__sprite_based_laser_8cs_source_1l00012"/>00012 
<anchor xml:id="__sprite_based_laser_8cs_source_1l00013"/>00013 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x060007DD&#32;RID:&#32;2013&#32;RVA:&#32;0x00032B58&#32;File&#32;Offset:&#32;0x00030D58</emphasis>
<anchor xml:id="__sprite_based_laser_8cs_source_1l00014"/>00014 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Play(Vector3&#32;to)
<anchor xml:id="__sprite_based_laser_8cs_source_1l00015"/>00015 &#32;&#32;&#32;&#32;{
<anchor xml:id="__sprite_based_laser_8cs_source_1l00016"/>00016 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;base.transform.position&#32;=&#32;base.transform.position.SetZ(0f);
<anchor xml:id="__sprite_based_laser_8cs_source_1l00017"/>00017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;vector&#32;=&#32;to.SetZ(0f)&#32;+&#32;this.fix&#32;+&#32;<emphasis role="keyword">new</emphasis>&#32;Vector3(0.2f,&#32;0.2f,&#32;0f).Random();
<anchor xml:id="__sprite_based_laser_8cs_source_1l00018"/>00018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.dest&#32;=&#32;vector;
<anchor xml:id="__sprite_based_laser_8cs_source_1l00019"/>00019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.dest2&#32;=&#32;vector;
<anchor xml:id="__sprite_based_laser_8cs_source_1l00020"/>00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.hitSparkEmission&#32;=&#32;this.hitSparkParticleSystem.emission;
<anchor xml:id="__sprite_based_laser_8cs_source_1l00021"/>00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.gameObjectCached&#32;=&#32;base.gameObject;
<anchor xml:id="__sprite_based_laser_8cs_source_1l00022"/>00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.laserLineRendererArc&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__sprite_based_laser_8cs_source_1l00023"/>00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sprite_based_laser_8cs_source_1l00024"/>00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.laserLineRendererArc.SetVertexCount(this.laserArcSegments);
<anchor xml:id="__sprite_based_laser_8cs_source_1l00025"/>00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sprite_based_laser_8cs_source_1l00026"/>00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.startLaserLength&#32;=&#32;this.maxLaserLength;
<anchor xml:id="__sprite_based_laser_8cs_source_1l00027"/>00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.laserOscillationPositionerScript&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__sprite_based_laser_8cs_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sprite_based_laser_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.laserOscillationPositionerScript.radius&#32;=&#32;this.oscillationThreshold;
<anchor xml:id="__sprite_based_laser_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sprite_based_laser_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.Update();
<anchor xml:id="__sprite_based_laser_8cs_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.Update();
<anchor xml:id="__sprite_based_laser_8cs_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.trail.localScale&#32;=&#32;this.middleGoPiece.transform.localScale;
<anchor xml:id="__sprite_based_laser_8cs_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.trail.rotation&#32;=&#32;this.middleGoPiece.transform.rotation;
<anchor xml:id="__sprite_based_laser_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.trail.position&#32;=&#32;this.middleGoPiece.transform.position;
<anchor xml:id="__sprite_based_laser_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DOTweenAnimation[]&#32;array&#32;=&#32;this.anime;
<anchor xml:id="__sprite_based_laser_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;array.Length;&#32;i++)
<anchor xml:id="__sprite_based_laser_8cs_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sprite_based_laser_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;array[i].DOPlay();
<anchor xml:id="__sprite_based_laser_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sprite_based_laser_8cs_source_1l00041"/>00041 &#32;&#32;&#32;&#32;}
<anchor xml:id="__sprite_based_laser_8cs_source_1l00042"/>00042 
<anchor xml:id="__sprite_based_laser_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x060007DE&#32;RID:&#32;2014&#32;RVA:&#32;0x00032CAC&#32;File&#32;Offset:&#32;0x00030EAC</emphasis>
<anchor xml:id="__sprite_based_laser_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OscillateLaserParts(<emphasis role="keywordtype">float</emphasis>&#32;currentLaserDistance)
<anchor xml:id="__sprite_based_laser_8cs_source_1l00045"/>00045 &#32;&#32;&#32;&#32;{
<anchor xml:id="__sprite_based_laser_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.laserOscillationPositionerScript&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__sprite_based_laser_8cs_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sprite_based_laser_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__sprite_based_laser_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sprite_based_laser_8cs_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.lerpYValue&#32;=&#32;Mathf.Lerp(this.middleGoPiece.transform.localPosition.y,&#32;<emphasis role="keyword">this</emphasis>.laserOscillationPositionerScript.randomPointInCircle.y,&#32;Time.deltaTime&#32;*&#32;<emphasis role="keyword">this</emphasis>.oscillationSpeed);
<anchor xml:id="__sprite_based_laser_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.startGoPiece&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;this.middleGoPiece&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__sprite_based_laser_8cs_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sprite_based_laser_8cs_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector2&#32;b&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector2(this.startGoPiece.transform.localPosition.x,&#32;<emphasis role="keyword">this</emphasis>.laserOscillationPositionerScript.randomPointInCircle.y);
<anchor xml:id="__sprite_based_laser_8cs_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector2&#32;v&#32;=&#32;Vector2.Lerp(this.startGoPiece.transform.localPosition,&#32;b,&#32;Time.deltaTime&#32;*&#32;<emphasis role="keyword">this</emphasis>.oscillationSpeed);
<anchor xml:id="__sprite_based_laser_8cs_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.startGoPiece.transform.localPosition&#32;=&#32;v;
<anchor xml:id="__sprite_based_laser_8cs_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector2&#32;v2&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector2(currentLaserDistance&#32;/&#32;2f&#32;+&#32;this.startSpriteWidth&#32;/&#32;4f,&#32;this.lerpYValue);
<anchor xml:id="__sprite_based_laser_8cs_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.middleGoPiece.transform.localPosition&#32;=&#32;v2;
<anchor xml:id="__sprite_based_laser_8cs_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sprite_based_laser_8cs_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.endGoPiece&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__sprite_based_laser_8cs_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sprite_based_laser_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector2&#32;v3&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector2(currentLaserDistance&#32;+&#32;this.startSpriteWidth&#32;/&#32;2f,&#32;this.lerpYValue);
<anchor xml:id="__sprite_based_laser_8cs_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.endGoPiece.transform.localPosition&#32;=&#32;v3;
<anchor xml:id="__sprite_based_laser_8cs_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sprite_based_laser_8cs_source_1l00064"/>00064 &#32;&#32;&#32;&#32;}
<anchor xml:id="__sprite_based_laser_8cs_source_1l00065"/>00065 
<anchor xml:id="__sprite_based_laser_8cs_source_1l00066"/>00066 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x060007DF&#32;RID:&#32;2015&#32;RVA:&#32;0x00032E08&#32;File&#32;Offset:&#32;0x00031008</emphasis>
<anchor xml:id="__sprite_based_laser_8cs_source_1l00067"/>00067 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;SetLaserArcVertices(<emphasis role="keywordtype">float</emphasis>&#32;distancePoint,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;useHitPoint)
<anchor xml:id="__sprite_based_laser_8cs_source_1l00068"/>00068 &#32;&#32;&#32;&#32;{
<anchor xml:id="__sprite_based_laser_8cs_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;1;&#32;i&#32;&lt;&#32;this.laserArcSegments;&#32;i++)
<anchor xml:id="__sprite_based_laser_8cs_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sprite_based_laser_8cs_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;y&#32;=&#32;Mathf.Clamp(Mathf.Sin((<emphasis role="keywordtype">float</emphasis>)i&#32;+&#32;Time.time&#32;*&#32;UnityEngine.Random.Range(0.5f,&#32;1.3f)),&#32;-<emphasis role="keyword">this</emphasis>.laserArcMax&#32;+&#32;UnityEngine.Random.RandomRange(0f,&#32;<emphasis role="keyword">this</emphasis>.laserArcMax&#32;*&#32;0.5f),&#32;<emphasis role="keyword">this</emphasis>.laserArcMax&#32;+&#32;UnityEngine.Random.RandomRange(0f,&#32;<emphasis role="keyword">this</emphasis>.laserArcMax&#32;*&#32;0.5f));
<anchor xml:id="__sprite_based_laser_8cs_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector2&#32;v&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector2((<emphasis role="keywordtype">float</emphasis>)i&#32;*&#32;1.2f&#32;*&#32;this.arcNum2,&#32;y);
<anchor xml:id="__sprite_based_laser_8cs_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(useHitPoint&#32;&amp;&amp;&#32;i&#32;==&#32;this.laserArcSegments&#32;-&#32;1)
<anchor xml:id="__sprite_based_laser_8cs_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sprite_based_laser_8cs_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.laserLineRendererArc.SetPosition(i,&#32;<emphasis role="keyword">new</emphasis>&#32;Vector2(distancePoint,&#32;0f));
<anchor xml:id="__sprite_based_laser_8cs_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sprite_based_laser_8cs_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__sprite_based_laser_8cs_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sprite_based_laser_8cs_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.laserLineRendererArc.SetPosition(i,&#32;v);
<anchor xml:id="__sprite_based_laser_8cs_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sprite_based_laser_8cs_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sprite_based_laser_8cs_source_1l00082"/>00082 &#32;&#32;&#32;&#32;}
<anchor xml:id="__sprite_based_laser_8cs_source_1l00083"/>00083 
<anchor xml:id="__sprite_based_laser_8cs_source_1l00084"/>00084 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x060007E0&#32;RID:&#32;2016&#32;RVA:&#32;0x00032EE0&#32;File&#32;Offset:&#32;0x000310E0</emphasis>
<anchor xml:id="__sprite_based_laser_8cs_source_1l00085"/>00085 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Update()
<anchor xml:id="__sprite_based_laser_8cs_source_1l00086"/>00086 &#32;&#32;&#32;&#32;{
<anchor xml:id="__sprite_based_laser_8cs_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.gameObjectCached&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__sprite_based_laser_8cs_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sprite_based_laser_8cs_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.middleGoPiece.transform.localScale&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector3(this.maxLaserLength&#32;-&#32;this.startSpriteWidth&#32;+&#32;0.2f,&#32;this.middleGoPiece.transform.localScale.y,&#32;<emphasis role="keyword">this</emphasis>.middleGoPiece.transform.localScale.z);
<anchor xml:id="__sprite_based_laser_8cs_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.oscillateLaser)
<anchor xml:id="__sprite_based_laser_8cs_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sprite_based_laser_8cs_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.OscillateLaserParts(this.maxLaserLength);
<anchor xml:id="__sprite_based_laser_8cs_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sprite_based_laser_8cs_source_1l00094"/>00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__sprite_based_laser_8cs_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sprite_based_laser_8cs_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.middleGoPiece&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__sprite_based_laser_8cs_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sprite_based_laser_8cs_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.middleGoPiece.transform.localPosition&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector2(this.maxLaserLength&#32;/&#32;2f&#32;+&#32;this.startSpriteWidth&#32;/&#32;4f,&#32;this.lerpYValue);
<anchor xml:id="__sprite_based_laser_8cs_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sprite_based_laser_8cs_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.endGoPiece&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__sprite_based_laser_8cs_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sprite_based_laser_8cs_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.endGoPiece.transform.localPosition&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector3(this.maxLaserLength&#32;+&#32;this.startSpriteWidth&#32;/&#32;2f,&#32;0f,&#32;0f)&#32;+&#32;this.fixTip;
<anchor xml:id="__sprite_based_laser_8cs_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sprite_based_laser_8cs_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sprite_based_laser_8cs_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.laserRotationEnabled)
<anchor xml:id="__sprite_based_laser_8cs_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sprite_based_laser_8cs_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;vector&#32;=&#32;this.dest2&#32;-&#32;this.gameObjectCached.transform.position;
<anchor xml:id="__sprite_based_laser_8cs_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.laserAngle&#32;=&#32;Mathf.Atan2(vector.y,&#32;vector.x);
<anchor xml:id="__sprite_based_laser_8cs_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.laserAngle&#32;&lt;&#32;0f)
<anchor xml:id="__sprite_based_laser_8cs_source_1l00110"/>00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sprite_based_laser_8cs_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.laserAngle&#32;=&#32;6.2831855f&#32;+&#32;this.laserAngle;
<anchor xml:id="__sprite_based_laser_8cs_source_1l00112"/>00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sprite_based_laser_8cs_source_1l00113"/>00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;angle&#32;=&#32;this.laserAngle&#32;*&#32;57.29578f;
<anchor xml:id="__sprite_based_laser_8cs_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.lerpLaserRotation)
<anchor xml:id="__sprite_based_laser_8cs_source_1l00115"/>00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sprite_based_laser_8cs_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;base.transform.rotation&#32;=&#32;Quaternion.Slerp(base.transform.rotation,&#32;Quaternion.AngleAxis(angle,&#32;base.transform.forward),&#32;Time.deltaTime&#32;*&#32;<emphasis role="keyword">this</emphasis>.turningRate);
<anchor xml:id="__sprite_based_laser_8cs_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sprite_based_laser_8cs_source_1l00118"/>00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__sprite_based_laser_8cs_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sprite_based_laser_8cs_source_1l00120"/>00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;base.transform.rotation&#32;=&#32;Quaternion.AngleAxis(angle,&#32;base.transform.forward);
<anchor xml:id="__sprite_based_laser_8cs_source_1l00121"/>00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sprite_based_laser_8cs_source_1l00122"/>00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sprite_based_laser_8cs_source_1l00123"/>00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.maxLaserLength&#32;=&#32;Vector2.Distance(this.dest,&#32;base.transform.position)&#32;+&#32;this.startSpriteWidth&#32;/&#32;4f&#32;+&#32;this.fix2.x;
<anchor xml:id="__sprite_based_laser_8cs_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.hitSparkParticleSystem&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__sprite_based_laser_8cs_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sprite_based_laser_8cs_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.hitSparkParticleSystem.transform.position&#32;=&#32;this.dest;
<anchor xml:id="__sprite_based_laser_8cs_source_1l00127"/>00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.hitSparkEmission.enabled&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__sprite_based_laser_8cs_source_1l00128"/>00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sprite_based_laser_8cs_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.useArc)
<anchor xml:id="__sprite_based_laser_8cs_source_1l00130"/>00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sprite_based_laser_8cs_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!this.laserLineRendererArc.enabled)
<anchor xml:id="__sprite_based_laser_8cs_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sprite_based_laser_8cs_source_1l00133"/>00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.laserLineRendererArc.enabled&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__sprite_based_laser_8cs_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sprite_based_laser_8cs_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.SetLaserArcVertices(this.maxLaserLength,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__sprite_based_laser_8cs_source_1l00136"/>00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.SetLaserArcSegmentLength();
<anchor xml:id="__sprite_based_laser_8cs_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__sprite_based_laser_8cs_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sprite_based_laser_8cs_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.laserLineRendererArc.enabled)
<anchor xml:id="__sprite_based_laser_8cs_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sprite_based_laser_8cs_source_1l00141"/>00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.laserLineRendererArc.enabled&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__sprite_based_laser_8cs_source_1l00142"/>00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sprite_based_laser_8cs_source_1l00143"/>00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sprite_based_laser_8cs_source_1l00144"/>00144 &#32;&#32;&#32;&#32;}
<anchor xml:id="__sprite_based_laser_8cs_source_1l00145"/>00145 
<anchor xml:id="__sprite_based_laser_8cs_source_1l00146"/>00146 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x060007E1&#32;RID:&#32;2017&#32;RVA:&#32;0x00033180&#32;File&#32;Offset:&#32;0x00031380</emphasis>
<anchor xml:id="__sprite_based_laser_8cs_source_1l00147"/>00147 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;SetLaserArcSegmentLength()
<anchor xml:id="__sprite_based_laser_8cs_source_1l00148"/>00148 &#32;&#32;&#32;&#32;{
<anchor xml:id="__sprite_based_laser_8cs_source_1l00149"/>00149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;vertexCount&#32;=&#32;Mathf.Abs((<emphasis role="keywordtype">int</emphasis>)this.maxLaserLength)&#32;*&#32;(int)this.arcNum;
<anchor xml:id="__sprite_based_laser_8cs_source_1l00150"/>00150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.laserLineRendererArc.SetVertexCount(vertexCount);
<anchor xml:id="__sprite_based_laser_8cs_source_1l00151"/>00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.laserArcSegments&#32;=&#32;vertexCount;
<anchor xml:id="__sprite_based_laser_8cs_source_1l00152"/>00152 &#32;&#32;&#32;&#32;}
<anchor xml:id="__sprite_based_laser_8cs_source_1l00153"/>00153 
<anchor xml:id="__sprite_based_laser_8cs_source_1l00154"/>00154 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x040007EA&#32;RID:&#32;2026</emphasis>
<anchor xml:id="__sprite_based_laser_8cs_source_1l00155"/>00155 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Material&#32;mat;
<anchor xml:id="__sprite_based_laser_8cs_source_1l00156"/>00156 
<anchor xml:id="__sprite_based_laser_8cs_source_1l00157"/>00157 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x040007EB&#32;RID:&#32;2027</emphasis>
<anchor xml:id="__sprite_based_laser_8cs_source_1l00158"/>00158 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Vector3&#32;dest;
<anchor xml:id="__sprite_based_laser_8cs_source_1l00159"/>00159 
<anchor xml:id="__sprite_based_laser_8cs_source_1l00160"/>00160 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x040007EC&#32;RID:&#32;2028</emphasis>
<anchor xml:id="__sprite_based_laser_8cs_source_1l00161"/>00161 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Vector3&#32;fixTip;
<anchor xml:id="__sprite_based_laser_8cs_source_1l00162"/>00162 
<anchor xml:id="__sprite_based_laser_8cs_source_1l00163"/>00163 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x040007ED&#32;RID:&#32;2029</emphasis>
<anchor xml:id="__sprite_based_laser_8cs_source_1l00164"/>00164 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Vector3&#32;dest2;
<anchor xml:id="__sprite_based_laser_8cs_source_1l00165"/>00165 
<anchor xml:id="__sprite_based_laser_8cs_source_1l00166"/>00166 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x040007EE&#32;RID:&#32;2030</emphasis>
<anchor xml:id="__sprite_based_laser_8cs_source_1l00167"/>00167 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Vector3&#32;fix;
<anchor xml:id="__sprite_based_laser_8cs_source_1l00168"/>00168 
<anchor xml:id="__sprite_based_laser_8cs_source_1l00169"/>00169 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x040007EF&#32;RID:&#32;2031</emphasis>
<anchor xml:id="__sprite_based_laser_8cs_source_1l00170"/>00170 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Vector3&#32;fix2;
<anchor xml:id="__sprite_based_laser_8cs_source_1l00171"/>00171 
<anchor xml:id="__sprite_based_laser_8cs_source_1l00172"/>00172 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x040007F0&#32;RID:&#32;2032</emphasis>
<anchor xml:id="__sprite_based_laser_8cs_source_1l00173"/>00173 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;arcNum;
<anchor xml:id="__sprite_based_laser_8cs_source_1l00174"/>00174 
<anchor xml:id="__sprite_based_laser_8cs_source_1l00175"/>00175 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x040007F1&#32;RID:&#32;2033</emphasis>
<anchor xml:id="__sprite_based_laser_8cs_source_1l00176"/>00176 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;arcNum2;
<anchor xml:id="__sprite_based_laser_8cs_source_1l00177"/>00177 
<anchor xml:id="__sprite_based_laser_8cs_source_1l00178"/>00178 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x040007F2&#32;RID:&#32;2034</emphasis>
<anchor xml:id="__sprite_based_laser_8cs_source_1l00179"/>00179 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;DOTweenAnimation[]&#32;anime;
<anchor xml:id="__sprite_based_laser_8cs_source_1l00180"/>00180 
<anchor xml:id="__sprite_based_laser_8cs_source_1l00181"/>00181 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x040007F3&#32;RID:&#32;2035</emphasis>
<anchor xml:id="__sprite_based_laser_8cs_source_1l00182"/>00182 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;LineRenderer&#32;laserLineRendererArc;
<anchor xml:id="__sprite_based_laser_8cs_source_1l00183"/>00183 
<anchor xml:id="__sprite_based_laser_8cs_source_1l00184"/>00184 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x040007F4&#32;RID:&#32;2036</emphasis>
<anchor xml:id="__sprite_based_laser_8cs_source_1l00185"/>00185 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;laserArcSegments&#32;=&#32;20;
<anchor xml:id="__sprite_based_laser_8cs_source_1l00186"/>00186 
<anchor xml:id="__sprite_based_laser_8cs_source_1l00187"/>00187 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x040007F5&#32;RID:&#32;2037</emphasis>
<anchor xml:id="__sprite_based_laser_8cs_source_1l00188"/>00188 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_random_position_mover">RandomPositionMover</link>&#32;laserOscillationPositionerScript;
<anchor xml:id="__sprite_based_laser_8cs_source_1l00189"/>00189 
<anchor xml:id="__sprite_based_laser_8cs_source_1l00190"/>00190 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x040007F6&#32;RID:&#32;2038</emphasis>
<anchor xml:id="__sprite_based_laser_8cs_source_1l00191"/>00191 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;oscillateLaser;
<anchor xml:id="__sprite_based_laser_8cs_source_1l00192"/>00192 
<anchor xml:id="__sprite_based_laser_8cs_source_1l00193"/>00193 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x040007F7&#32;RID:&#32;2039</emphasis>
<anchor xml:id="__sprite_based_laser_8cs_source_1l00194"/>00194 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;maxLaserLength&#32;=&#32;20f;
<anchor xml:id="__sprite_based_laser_8cs_source_1l00195"/>00195 
<anchor xml:id="__sprite_based_laser_8cs_source_1l00196"/>00196 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x040007F8&#32;RID:&#32;2040</emphasis>
<anchor xml:id="__sprite_based_laser_8cs_source_1l00197"/>00197 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;oscillationSpeed&#32;=&#32;1f;
<anchor xml:id="__sprite_based_laser_8cs_source_1l00198"/>00198 
<anchor xml:id="__sprite_based_laser_8cs_source_1l00199"/>00199 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x040007F9&#32;RID:&#32;2041</emphasis>
<anchor xml:id="__sprite_based_laser_8cs_source_1l00200"/>00200 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;GameObject&#32;targetGo;
<anchor xml:id="__sprite_based_laser_8cs_source_1l00201"/>00201 
<anchor xml:id="__sprite_based_laser_8cs_source_1l00202"/>00202 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x040007FA&#32;RID:&#32;2042</emphasis>
<anchor xml:id="__sprite_based_laser_8cs_source_1l00203"/>00203 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;ParticleSystem&#32;hitSparkParticleSystem;
<anchor xml:id="__sprite_based_laser_8cs_source_1l00204"/>00204 
<anchor xml:id="__sprite_based_laser_8cs_source_1l00205"/>00205 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x040007FB&#32;RID:&#32;2043</emphasis>
<anchor xml:id="__sprite_based_laser_8cs_source_1l00206"/>00206 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;laserArcMax;
<anchor xml:id="__sprite_based_laser_8cs_source_1l00207"/>00207 
<anchor xml:id="__sprite_based_laser_8cs_source_1l00208"/>00208 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x040007FC&#32;RID:&#32;2044</emphasis>
<anchor xml:id="__sprite_based_laser_8cs_source_1l00209"/>00209 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;maxLaserRaycastDistance;
<anchor xml:id="__sprite_based_laser_8cs_source_1l00210"/>00210 
<anchor xml:id="__sprite_based_laser_8cs_source_1l00211"/>00211 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x040007FD&#32;RID:&#32;2045</emphasis>
<anchor xml:id="__sprite_based_laser_8cs_source_1l00212"/>00212 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;laserRotationEnabled;
<anchor xml:id="__sprite_based_laser_8cs_source_1l00213"/>00213 
<anchor xml:id="__sprite_based_laser_8cs_source_1l00214"/>00214 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x040007FE&#32;RID:&#32;2046</emphasis>
<anchor xml:id="__sprite_based_laser_8cs_source_1l00215"/>00215 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;lerpLaserRotation;
<anchor xml:id="__sprite_based_laser_8cs_source_1l00216"/>00216 
<anchor xml:id="__sprite_based_laser_8cs_source_1l00217"/>00217 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x040007FF&#32;RID:&#32;2047</emphasis>
<anchor xml:id="__sprite_based_laser_8cs_source_1l00218"/>00218 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;turningRate&#32;=&#32;3f;
<anchor xml:id="__sprite_based_laser_8cs_source_1l00219"/>00219 
<anchor xml:id="__sprite_based_laser_8cs_source_1l00220"/>00220 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04000800&#32;RID:&#32;2048</emphasis>
<anchor xml:id="__sprite_based_laser_8cs_source_1l00221"/>00221 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;collisionTriggerInterval&#32;=&#32;0.25f;
<anchor xml:id="__sprite_based_laser_8cs_source_1l00222"/>00222 
<anchor xml:id="__sprite_based_laser_8cs_source_1l00223"/>00223 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04000801&#32;RID:&#32;2049</emphasis>
<anchor xml:id="__sprite_based_laser_8cs_source_1l00224"/>00224 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;LayerMask&#32;mask;
<anchor xml:id="__sprite_based_laser_8cs_source_1l00225"/>00225 
<anchor xml:id="__sprite_based_laser_8cs_source_1l00226"/>00226 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04000803&#32;RID:&#32;2051</emphasis>
<anchor xml:id="__sprite_based_laser_8cs_source_1l00227"/>00227 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;useArc;
<anchor xml:id="__sprite_based_laser_8cs_source_1l00228"/>00228 
<anchor xml:id="__sprite_based_laser_8cs_source_1l00229"/>00229 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04000804&#32;RID:&#32;2052</emphasis>
<anchor xml:id="__sprite_based_laser_8cs_source_1l00230"/>00230 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;oscillationThreshold&#32;=&#32;0.2f;
<anchor xml:id="__sprite_based_laser_8cs_source_1l00231"/>00231 
<anchor xml:id="__sprite_based_laser_8cs_source_1l00232"/>00232 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04000805&#32;RID:&#32;2053</emphasis>
<anchor xml:id="__sprite_based_laser_8cs_source_1l00233"/>00233 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;GameObject&#32;gameObjectCached;
<anchor xml:id="__sprite_based_laser_8cs_source_1l00234"/>00234 
<anchor xml:id="__sprite_based_laser_8cs_source_1l00235"/>00235 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04000806&#32;RID:&#32;2054</emphasis>
<anchor xml:id="__sprite_based_laser_8cs_source_1l00236"/>00236 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;laserAngle;
<anchor xml:id="__sprite_based_laser_8cs_source_1l00237"/>00237 
<anchor xml:id="__sprite_based_laser_8cs_source_1l00238"/>00238 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04000807&#32;RID:&#32;2055</emphasis>
<anchor xml:id="__sprite_based_laser_8cs_source_1l00239"/>00239 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;lerpYValue;
<anchor xml:id="__sprite_based_laser_8cs_source_1l00240"/>00240 
<anchor xml:id="__sprite_based_laser_8cs_source_1l00241"/>00241 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04000808&#32;RID:&#32;2056</emphasis>
<anchor xml:id="__sprite_based_laser_8cs_source_1l00242"/>00242 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;startLaserLength;
<anchor xml:id="__sprite_based_laser_8cs_source_1l00243"/>00243 
<anchor xml:id="__sprite_based_laser_8cs_source_1l00244"/>00244 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04000809&#32;RID:&#32;2057</emphasis>
<anchor xml:id="__sprite_based_laser_8cs_source_1l00245"/>00245 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Transform&#32;trail;
<anchor xml:id="__sprite_based_laser_8cs_source_1l00246"/>00246 
<anchor xml:id="__sprite_based_laser_8cs_source_1l00247"/>00247 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x0400080A&#32;RID:&#32;2058</emphasis>
<anchor xml:id="__sprite_based_laser_8cs_source_1l00248"/>00248 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;GameObject&#32;startGoPiece;
<anchor xml:id="__sprite_based_laser_8cs_source_1l00249"/>00249 
<anchor xml:id="__sprite_based_laser_8cs_source_1l00250"/>00250 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x0400080B&#32;RID:&#32;2059</emphasis>
<anchor xml:id="__sprite_based_laser_8cs_source_1l00251"/>00251 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;GameObject&#32;middleGoPiece;
<anchor xml:id="__sprite_based_laser_8cs_source_1l00252"/>00252 
<anchor xml:id="__sprite_based_laser_8cs_source_1l00253"/>00253 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x0400080C&#32;RID:&#32;2060</emphasis>
<anchor xml:id="__sprite_based_laser_8cs_source_1l00254"/>00254 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;GameObject&#32;endGoPiece;
<anchor xml:id="__sprite_based_laser_8cs_source_1l00255"/>00255 
<anchor xml:id="__sprite_based_laser_8cs_source_1l00256"/>00256 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x0400080D&#32;RID:&#32;2061</emphasis>
<anchor xml:id="__sprite_based_laser_8cs_source_1l00257"/>00257 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;startSpriteWidth;
<anchor xml:id="__sprite_based_laser_8cs_source_1l00258"/>00258 
<anchor xml:id="__sprite_based_laser_8cs_source_1l00259"/>00259 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x0400080E&#32;RID:&#32;2062</emphasis>
<anchor xml:id="__sprite_based_laser_8cs_source_1l00260"/>00260 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;waitingForTriggerTime;
<anchor xml:id="__sprite_based_laser_8cs_source_1l00261"/>00261 
<anchor xml:id="__sprite_based_laser_8cs_source_1l00262"/>00262 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x0400080F&#32;RID:&#32;2063</emphasis>
<anchor xml:id="__sprite_based_laser_8cs_source_1l00263"/>00263 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;ParticleSystem.EmissionModule&#32;hitSparkEmission;
<anchor xml:id="__sprite_based_laser_8cs_source_1l00264"/>00264 
<anchor xml:id="__sprite_based_laser_8cs_source_1l00265"/>00265 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x02000851&#32;RID:&#32;2129</emphasis>
<anchor xml:id="__sprite_based_laser_8cs_source_1l00266"/>00266 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;(Invoke)&#32;Token:&#32;0x060039EE&#32;RID:&#32;14830</emphasis>
<anchor xml:id="__sprite_based_laser_8cs_source_1l00267"/>00267 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;delegate&#32;<emphasis role="keywordtype">void</emphasis>&#32;LaserHitTriggerHandler(RaycastHit2D&#32;hitInfo);
<anchor xml:id="__sprite_based_laser_8cs_source_1l00268"/>00268 }
</programlisting></section>
