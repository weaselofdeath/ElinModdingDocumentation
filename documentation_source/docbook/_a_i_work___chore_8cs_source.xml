<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__a_i_work___chore_8cs_source" xml:lang="en-US">
<title>AIWork_Chore.cs</title>
<indexterm><primary>Elin/AIWork_Chore.cs</primary></indexterm>
<programlisting linenumbering="unnumbered"><anchor xml:id="__a_i_work___chore_8cs_source_1l00001"/>00001 <emphasis role="keyword">using&#32;</emphasis>System;
<anchor xml:id="__a_i_work___chore_8cs_source_1l00002"/>00002 
<anchor xml:id="__a_i_work___chore_8cs_source_1l00003"/>00003 <emphasis role="comment">//&#32;Token:&#32;0x02000213&#32;RID:&#32;531</emphasis>
<anchor xml:id="__a_i_work___chore_8cs_source_1l00004"/><link linkend="_class_a_i_work___chore">00004</link> <emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_a_i_work___chore">AIWork_Chore</link>&#32;:&#32;<link linkend="_class_a_i_work">AIWork</link>
<anchor xml:id="__a_i_work___chore_8cs_source_1l00005"/>00005 {
<anchor xml:id="__a_i_work___chore_8cs_source_1l00006"/>00006 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06000F23&#32;RID:&#32;3875&#32;RVA:&#32;0x0006EE84&#32;File&#32;Offset:&#32;0x0006D084</emphasis>
<anchor xml:id="__a_i_work___chore_8cs_source_1l00007"/>00007 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;SetDestPos()
<anchor xml:id="__a_i_work___chore_8cs_source_1l00008"/>00008 &#32;&#32;&#32;&#32;{
<anchor xml:id="__a_i_work___chore_8cs_source_1l00009"/>00009 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_e_class">EClass</link>._map.rooms.listRoom.Count&#32;&lt;=&#32;0&#32;||&#32;<link linkend="_class_e_class">EClass</link>.rnd(2)&#32;!=&#32;0)
<anchor xml:id="__a_i_work___chore_8cs_source_1l00010"/>00010 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__a_i_work___chore_8cs_source_1l00011"/>00011 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.destPos&#32;=&#32;<link linkend="_class_e_class">EClass</link>._map.bounds.GetRandomSurface(<emphasis role="keyword">false</emphasis>,&#32;<emphasis role="keyword">true</emphasis>,&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__a_i_work___chore_8cs_source_1l00012"/>00012 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__a_i_work___chore_8cs_source_1l00013"/>00013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__a_i_work___chore_8cs_source_1l00014"/>00014 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_room">Room</link>&#32;room&#32;=&#32;<link linkend="_class_e_class">EClass</link>._map.rooms.listRoom.RandomItem&lt;<link linkend="_class_room">Room</link>&gt;();
<anchor xml:id="__a_i_work___chore_8cs_source_1l00015"/>00015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!room.IsPrivate)
<anchor xml:id="__a_i_work___chore_8cs_source_1l00016"/>00016 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__a_i_work___chore_8cs_source_1l00017"/>00017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.destPos&#32;=&#32;room.GetRandomPoint(<emphasis role="keyword">true</emphasis>,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__a_i_work___chore_8cs_source_1l00018"/>00018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__a_i_work___chore_8cs_source_1l00019"/>00019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__a_i_work___chore_8cs_source_1l00020"/>00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.destPos&#32;=&#32;<link linkend="_class_e_class">EClass</link>._map.bounds.GetRandomSurface(<emphasis role="keyword">false</emphasis>,&#32;<emphasis role="keyword">true</emphasis>,&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__a_i_work___chore_8cs_source_1l00021"/>00021 &#32;&#32;&#32;&#32;}
<anchor xml:id="__a_i_work___chore_8cs_source_1l00022"/>00022 
<anchor xml:id="__a_i_work___chore_8cs_source_1l00023"/>00023 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06000F24&#32;RID:&#32;3876&#32;RVA:&#32;0x0006EF0D&#32;File&#32;Offset:&#32;0x0006D10D</emphasis>
<anchor xml:id="__a_i_work___chore_8cs_source_1l00024"/>00024 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnPerformWork(<emphasis role="keywordtype">bool</emphasis>&#32;realtime)
<anchor xml:id="__a_i_work___chore_8cs_source_1l00025"/>00025 &#32;&#32;&#32;&#32;{
<anchor xml:id="__a_i_work___chore_8cs_source_1l00026"/>00026 &#32;&#32;&#32;&#32;}
<anchor xml:id="__a_i_work___chore_8cs_source_1l00027"/>00027 }
</programlisting></section>
