<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__craft_util_8cs_source" xml:lang="en-US">
<title>CraftUtil.cs</title>
<indexterm><primary>Elin/CraftUtil.cs</primary></indexterm>
<programlisting linenumbering="unnumbered"><anchor xml:id="__craft_util_8cs_source_1l00001"/>00001 <emphasis role="keyword">using&#32;</emphasis>System;
<anchor xml:id="__craft_util_8cs_source_1l00002"/>00002 <emphasis role="keyword">using&#32;</emphasis>System.Collections.Generic;
<anchor xml:id="__craft_util_8cs_source_1l00003"/>00003 <emphasis role="keyword">using&#32;</emphasis>System.Linq;
<anchor xml:id="__craft_util_8cs_source_1l00004"/>00004 <emphasis role="keyword">using&#32;</emphasis>System.Runtime.CompilerServices;
<anchor xml:id="__craft_util_8cs_source_1l00005"/>00005 <emphasis role="keyword">using&#32;</emphasis>UnityEngine;
<anchor xml:id="__craft_util_8cs_source_1l00006"/>00006 
<anchor xml:id="__craft_util_8cs_source_1l00007"/>00007 <emphasis role="comment">//&#32;Token:&#32;0x02000535&#32;RID:&#32;1333</emphasis>
<anchor xml:id="__craft_util_8cs_source_1l00008"/><link linkend="_class_craft_util">00008</link> <emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_craft_util">CraftUtil</link>&#32;:&#32;<link linkend="_class_e_class">EClass</link>
<anchor xml:id="__craft_util_8cs_source_1l00009"/>00009 {
<anchor xml:id="__craft_util_8cs_source_1l00010"/>00010 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x0600241E&#32;RID:&#32;9246&#32;RVA:&#32;0x000CB218&#32;File&#32;Offset:&#32;0x000C9418</emphasis>
<anchor xml:id="__craft_util_8cs_source_1l00011"/>00011 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;ModRandomFoodEnc(<link linkend="_class_thing">Thing</link>&#32;t)
<anchor xml:id="__craft_util_8cs_source_1l00012"/>00012 &#32;&#32;&#32;&#32;{
<anchor xml:id="__craft_util_8cs_source_1l00013"/>00013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;List&lt;Element&gt;&#32;list&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;Element&gt;();
<anchor xml:id="__craft_util_8cs_source_1l00014"/>00014 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_element">Element</link>&#32;element&#32;<emphasis role="keywordflow">in</emphasis>&#32;t.elements.dict.Values)
<anchor xml:id="__craft_util_8cs_source_1l00015"/>00015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__craft_util_8cs_source_1l00016"/>00016 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(element.IsFoodTrait)
<anchor xml:id="__craft_util_8cs_source_1l00017"/>00017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__craft_util_8cs_source_1l00018"/>00018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;list.Add(element);
<anchor xml:id="__craft_util_8cs_source_1l00019"/>00019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__craft_util_8cs_source_1l00020"/>00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__craft_util_8cs_source_1l00021"/>00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(list.Count&#32;==&#32;0)
<anchor xml:id="__craft_util_8cs_source_1l00022"/>00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__craft_util_8cs_source_1l00023"/>00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__craft_util_8cs_source_1l00024"/>00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__craft_util_8cs_source_1l00025"/>00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_element">Element</link>&#32;element2&#32;=&#32;list.RandomItem&lt;<link linkend="_class_element">Element</link>&gt;();
<anchor xml:id="__craft_util_8cs_source_1l00026"/>00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t.elements.ModBase(element2.id,&#32;<link linkend="_class_e_class">EClass</link>.rnd(6)&#32;+&#32;1);
<anchor xml:id="__craft_util_8cs_source_1l00027"/>00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(element2.Value&#32;&gt;&#32;60)
<anchor xml:id="__craft_util_8cs_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__craft_util_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t.elements.SetTo(element2.id,&#32;60);
<anchor xml:id="__craft_util_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__craft_util_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;}
<anchor xml:id="__craft_util_8cs_source_1l00032"/>00032 
<anchor xml:id="__craft_util_8cs_source_1l00033"/>00033 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x0600241F&#32;RID:&#32;9247&#32;RVA:&#32;0x000CB2CC&#32;File&#32;Offset:&#32;0x000C94CC</emphasis>
<anchor xml:id="__craft_util_8cs_source_1l00034"/>00034 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;AddRandomFoodEnc(<link linkend="_class_thing">Thing</link>&#32;t)
<anchor xml:id="__craft_util_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;{
<anchor xml:id="__craft_util_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;List&lt;<link linkend="_class_source_element">SourceElement</link>.<link linkend="_class_source_element_1_1_row">Row</link>&gt;&#32;list&#32;=&#32;(from&#32;e&#32;in&#32;EClass.sources.elements.rows
<anchor xml:id="__craft_util_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;where&#32;e.foodEffect.Length&#32;&gt;&#32;1&#32;&amp;&amp;&#32;<link linkend="_class_craft_util">CraftUtil</link>.ListFoodEffect.Contains(e.foodEffect[0])
<anchor xml:id="__craft_util_8cs_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;select&#32;e).ToList&lt;<link linkend="_class_source_element">SourceElement</link>.<link linkend="_class_source_element_1_1_row">Row</link>&gt;();
<anchor xml:id="__craft_util_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;list.ForeachReverse(delegate(<link linkend="_class_source_element">SourceElement</link>.<link linkend="_class_source_element_1_1_row">Row</link>&#32;e)
<anchor xml:id="__craft_util_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__craft_util_8cs_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(t.elements.dict.ContainsKey(e.id))
<anchor xml:id="__craft_util_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__craft_util_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;list.Remove(e);
<anchor xml:id="__craft_util_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__craft_util_8cs_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__craft_util_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(list.Count&#32;==&#32;0)
<anchor xml:id="__craft_util_8cs_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__craft_util_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__craft_util_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__craft_util_8cs_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_source_element_1_1_row">SourceElement.Row</link>&#32;row&#32;=&#32;list.RandomItemWeighted((<link linkend="_class_source_element">SourceElement</link>.<link linkend="_class_source_element_1_1_row">Row</link>&#32;a)&#32;=&gt;&#32;(<emphasis role="keywordtype">float</emphasis>)a.chance);
<anchor xml:id="__craft_util_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t.elements.SetBase(row.id,&#32;1,&#32;0);
<anchor xml:id="__craft_util_8cs_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t.c_seed&#32;=&#32;row.id;
<anchor xml:id="__craft_util_8cs_source_1l00053"/>00053 &#32;&#32;&#32;&#32;}
<anchor xml:id="__craft_util_8cs_source_1l00054"/>00054 
<anchor xml:id="__craft_util_8cs_source_1l00055"/>00055 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002420&#32;RID:&#32;9248&#32;RVA:&#32;0x000CB3A0&#32;File&#32;Offset:&#32;0x000C95A0</emphasis>
<anchor xml:id="__craft_util_8cs_source_1l00056"/>00056 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;MakeDish(<link linkend="_class_thing">Thing</link>&#32;food,&#32;<emphasis role="keywordtype">int</emphasis>&#32;lv)
<anchor xml:id="__craft_util_8cs_source_1l00057"/>00057 &#32;&#32;&#32;&#32;{
<anchor xml:id="__craft_util_8cs_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_recipe_manager">RecipeManager</link>.BuildList();
<anchor xml:id="__craft_util_8cs_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;List&lt;Thing&gt;&#32;list&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;Thing&gt;();
<anchor xml:id="__craft_util_8cs_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_recipe_source">RecipeSource</link>&#32;recipeSource&#32;=&#32;<link linkend="_class_recipe_manager">RecipeManager</link>.Get(food.id);
<anchor xml:id="__craft_util_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Debug.Log(recipeSource);
<anchor xml:id="__craft_util_8cs_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(recipeSource&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__craft_util_8cs_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__craft_util_8cs_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__craft_util_8cs_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__craft_util_8cs_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;num&#32;=&#32;Mathf.Min(<link linkend="_class_e_class">EClass</link>.rnd(lv),&#32;50);
<anchor xml:id="__craft_util_8cs_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_recipe">Recipe</link>.<link linkend="_class_recipe_1_1_ingredient">Ingredient</link>&#32;ingredient&#32;in&#32;recipeSource.GetIngredients())
<anchor xml:id="__craft_util_8cs_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__craft_util_8cs_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_thing">Thing</link>&#32;thing&#32;=&#32;<link linkend="_class_thing_gen">ThingGen</link>.Create(ingredient.id,&#32;-1,&#32;-1);
<anchor xml:id="__craft_util_8cs_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_trait_seed">TraitSeed</link>.LevelSeed(thing,&#32;<emphasis role="keyword">null</emphasis>,&#32;<link linkend="_class_e_class">EClass</link>.rnd(lv&#32;/&#32;4)&#32;+&#32;1);
<anchor xml:id="__craft_util_8cs_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;thing.SetEncLv(thing.encLV&#32;/&#32;2);
<anchor xml:id="__craft_util_8cs_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(num&#32;&gt;&#32;0&#32;&amp;&amp;&#32;<link linkend="_class_e_class">EClass</link>.rnd(3)&#32;==&#32;0)
<anchor xml:id="__craft_util_8cs_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__craft_util_8cs_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;thing.elements.SetBase(2,&#32;num,&#32;0);
<anchor xml:id="__craft_util_8cs_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__craft_util_8cs_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;list.Add(thing);
<anchor xml:id="__craft_util_8cs_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__craft_util_8cs_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_craft_util">CraftUtil</link>.MakeDish(food,&#32;list,&#32;num);
<anchor xml:id="__craft_util_8cs_source_1l00079"/>00079 &#32;&#32;&#32;&#32;}
<anchor xml:id="__craft_util_8cs_source_1l00080"/>00080 
<anchor xml:id="__craft_util_8cs_source_1l00081"/>00081 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002421&#32;RID:&#32;9249&#32;RVA:&#32;0x000CB478&#32;File&#32;Offset:&#32;0x000C9678</emphasis>
<anchor xml:id="__craft_util_8cs_source_1l00082"/>00082 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;MakeDish(<link linkend="_class_card">Card</link>&#32;food,&#32;List&lt;Thing&gt;&#32;ings,&#32;<emphasis role="keywordtype">int</emphasis>&#32;qualityBonus)
<anchor xml:id="__craft_util_8cs_source_1l00083"/>00083 &#32;&#32;&#32;&#32;{
<anchor xml:id="__craft_util_8cs_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;List&lt;Thing&gt;&#32;list&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;Thing&gt;();
<anchor xml:id="__craft_util_8cs_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;flag&#32;=&#32;food.sourceCard.vals.Contains(<emphasis role="stringliteral">&quot;fixed&quot;</emphasis>);
<anchor xml:id="__craft_util_8cs_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;ings.Count;&#32;i++)
<anchor xml:id="__craft_util_8cs_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__craft_util_8cs_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_thing">Thing</link>&#32;thing&#32;=&#32;ings[i];
<anchor xml:id="__craft_util_8cs_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(flag)
<anchor xml:id="__craft_util_8cs_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__craft_util_8cs_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;list.Add(thing);
<anchor xml:id="__craft_util_8cs_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__craft_util_8cs_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__craft_util_8cs_source_1l00094"/>00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_craft_util">CraftUtil</link>.&lt;MakeDish&gt;g__IsIgnoreName|5_0(thing))
<anchor xml:id="__craft_util_8cs_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__craft_util_8cs_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;list.Add(thing);
<anchor xml:id="__craft_util_8cs_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__craft_util_8cs_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__craft_util_8cs_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(list.Count&#32;&gt;&#32;0)
<anchor xml:id="__craft_util_8cs_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__craft_util_8cs_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_thing">Thing</link>&#32;thing2&#32;=&#32;list.RandomItem&lt;<link linkend="_class_thing">Thing</link>&gt;();
<anchor xml:id="__craft_util_8cs_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(thing2&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__craft_util_8cs_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__craft_util_8cs_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;food.MakeRefFrom(thing2,&#32;<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__craft_util_8cs_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(thing2.c_idRefCard&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__craft_util_8cs_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__craft_util_8cs_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;food.c_idRefCard&#32;=&#32;thing2.c_idRefCard;
<anchor xml:id="__craft_util_8cs_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;food.c_altName&#32;=&#32;food.TryGetFoodName(thing2);
<anchor xml:id="__craft_util_8cs_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(thing2.id&#32;==&#32;<emphasis role="stringliteral">&quot;_egg&quot;</emphasis>&#32;||&#32;thing2.id&#32;==&#32;<emphasis role="stringliteral">&quot;egg_fertilized&quot;</emphasis>)
<anchor xml:id="__craft_util_8cs_source_1l00110"/>00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__craft_util_8cs_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;food.c_altName&#32;=&#32;<emphasis role="stringliteral">&quot;_egg&quot;</emphasis>.lang(food.c_altName,&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__craft_util_8cs_source_1l00112"/>00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__craft_util_8cs_source_1l00113"/>00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__craft_util_8cs_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__craft_util_8cs_source_1l00115"/>00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__craft_util_8cs_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_craft_util">CraftUtil</link>.MixIngredients(food,&#32;ings,&#32;<link linkend="_class_craft_util">CraftUtil</link>.MixType.Food,&#32;qualityBonus);
<anchor xml:id="__craft_util_8cs_source_1l00117"/>00117 &#32;&#32;&#32;&#32;}
<anchor xml:id="__craft_util_8cs_source_1l00118"/>00118 
<anchor xml:id="__craft_util_8cs_source_1l00119"/>00119 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002422&#32;RID:&#32;9250&#32;RVA:&#32;0x000CB564&#32;File&#32;Offset:&#32;0x000C9764</emphasis>
<anchor xml:id="__craft_util_8cs_source_1l00120"/>00120 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class_thing">Thing</link>&#32;MixIngredients(<emphasis role="keywordtype">string</emphasis>&#32;idProduct,&#32;List&lt;Thing&gt;&#32;ings,&#32;<link linkend="_class_craft_util">CraftUtil</link>.MixType&#32;type,&#32;<emphasis role="keywordtype">int</emphasis>&#32;idMat&#32;=&#32;0)
<anchor xml:id="__craft_util_8cs_source_1l00121"/>00121 &#32;&#32;&#32;&#32;{
<anchor xml:id="__craft_util_8cs_source_1l00122"/>00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_thing">Thing</link>&#32;thing&#32;=&#32;<link linkend="_class_thing_gen">ThingGen</link>.Create(idProduct,&#32;-1,&#32;-1);
<anchor xml:id="__craft_util_8cs_source_1l00123"/>00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(idMat&#32;!=&#32;0)
<anchor xml:id="__craft_util_8cs_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__craft_util_8cs_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;thing.ChangeMaterial(idMat);
<anchor xml:id="__craft_util_8cs_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__craft_util_8cs_source_1l00127"/>00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_craft_util">CraftUtil</link>.MixIngredients(thing,&#32;ings,&#32;type,&#32;999);
<anchor xml:id="__craft_util_8cs_source_1l00128"/>00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;thing;
<anchor xml:id="__craft_util_8cs_source_1l00129"/>00129 &#32;&#32;&#32;&#32;}
<anchor xml:id="__craft_util_8cs_source_1l00130"/>00130 
<anchor xml:id="__craft_util_8cs_source_1l00131"/>00131 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002423&#32;RID:&#32;9251&#32;RVA:&#32;0x000CB594&#32;File&#32;Offset:&#32;0x000C9794</emphasis>
<anchor xml:id="__craft_util_8cs_source_1l00132"/>00132 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class_card">Card</link>&#32;MixIngredients(<link linkend="_class_card">Card</link>&#32;product,&#32;List&lt;Thing&gt;&#32;ings,&#32;<link linkend="_class_craft_util">CraftUtil</link>.MixType&#32;type,&#32;<emphasis role="keywordtype">int</emphasis>&#32;maxQuality)
<anchor xml:id="__craft_util_8cs_source_1l00133"/>00133 &#32;&#32;&#32;&#32;{
<anchor xml:id="__craft_util_8cs_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_craft_util">CraftUtil</link>.&lt;&gt;c__DisplayClass7_0&#32;CS$&lt;&gt;8__locals1;
<anchor xml:id="__craft_util_8cs_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CS$&lt;&gt;8__locals1.type&#32;=&#32;type;
<anchor xml:id="__craft_util_8cs_source_1l00136"/>00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CS$&lt;&gt;8__locals1.product&#32;=&#32;product;
<anchor xml:id="__craft_util_8cs_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CS$&lt;&gt;8__locals1.isFood&#32;=&#32;(CS$&lt;&gt;8__locals1.type&#32;==&#32;<link linkend="_class_craft_util">CraftUtil</link>.MixType.Food);
<anchor xml:id="__craft_util_8cs_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_element">Element</link>&#32;element&#32;<emphasis role="keywordflow">in</emphasis>&#32;CS$&lt;&gt;8__locals1.product.elements.dict.Values)
<anchor xml:id="__craft_util_8cs_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__craft_util_8cs_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<emphasis role="keywordtype">id</emphasis>&#32;=&#32;element.id;
<anchor xml:id="__craft_util_8cs_source_1l00141"/>00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<emphasis role="keywordtype">id</emphasis>&#32;-&#32;914&#32;&gt;&#32;1&#32;&amp;&amp;&#32;element.Value&#32;&gt;=&#32;0&#32;&amp;&amp;&#32;<link linkend="_class_craft_util">CraftUtil</link>.&lt;MixIngredients&gt;g__IsValidTrait|7_0(element,&#32;ref&#32;CS$&lt;&gt;8__locals1))
<anchor xml:id="__craft_util_8cs_source_1l00142"/>00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__craft_util_8cs_source_1l00143"/>00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CS$&lt;&gt;8__locals1.product.elements.SetTo(element.id,&#32;0);
<anchor xml:id="__craft_util_8cs_source_1l00144"/>00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__craft_util_8cs_source_1l00145"/>00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__craft_util_8cs_source_1l00146"/>00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(CS$&lt;&gt;8__locals1.isFood)
<anchor xml:id="__craft_util_8cs_source_1l00147"/>00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__craft_util_8cs_source_1l00148"/>00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CS$&lt;&gt;8__locals1.product.elements.SetTo(10,&#32;5);
<anchor xml:id="__craft_util_8cs_source_1l00149"/>00149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__craft_util_8cs_source_1l00150"/>00150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;num&#32;=&#32;0;
<anchor xml:id="__craft_util_8cs_source_1l00151"/>00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;num2&#32;=&#32;0;
<anchor xml:id="__craft_util_8cs_source_1l00152"/>00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_thing">Thing</link>&#32;thing&#32;<emphasis role="keywordflow">in</emphasis>&#32;ings)
<anchor xml:id="__craft_util_8cs_source_1l00153"/>00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__craft_util_8cs_source_1l00154"/>00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(thing&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__craft_util_8cs_source_1l00155"/>00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__craft_util_8cs_source_1l00156"/>00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_craft_util">CraftUtil</link>.&lt;MixIngredients&gt;g__MixElements|7_1(thing,&#32;ref&#32;CS$&lt;&gt;8__locals1);
<anchor xml:id="__craft_util_8cs_source_1l00157"/>00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(CS$&lt;&gt;8__locals1.isFood)
<anchor xml:id="__craft_util_8cs_source_1l00158"/>00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__craft_util_8cs_source_1l00159"/>00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num&#32;+=&#32;Mathf.Clamp(thing.SelfWeight&#32;*&#32;80&#32;/&#32;100,&#32;50,&#32;400&#32;+&#32;thing.SelfWeight&#32;/&#32;20);
<anchor xml:id="__craft_util_8cs_source_1l00160"/>00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;value&#32;=&#32;thing.GetValue(<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__craft_util_8cs_source_1l00161"/>00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num2&#32;+=&#32;value;
<anchor xml:id="__craft_util_8cs_source_1l00162"/>00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__craft_util_8cs_source_1l00163"/>00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__craft_util_8cs_source_1l00164"/>00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__craft_util_8cs_source_1l00165"/>00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(CS$&lt;&gt;8__locals1.isFood)
<anchor xml:id="__craft_util_8cs_source_1l00166"/>00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__craft_util_8cs_source_1l00167"/>00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CS$&lt;&gt;8__locals1.product.isWeightChanged&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__craft_util_8cs_source_1l00168"/>00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CS$&lt;&gt;8__locals1.product.c_weight&#32;=&#32;num;
<anchor xml:id="__craft_util_8cs_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CS$&lt;&gt;8__locals1.product.c_priceAdd&#32;=&#32;num2;
<anchor xml:id="__craft_util_8cs_source_1l00170"/>00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__craft_util_8cs_source_1l00171"/>00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(CS$&lt;&gt;8__locals1.product.elements.Value(2)&#32;&gt;&#32;maxQuality)
<anchor xml:id="__craft_util_8cs_source_1l00172"/>00172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__craft_util_8cs_source_1l00173"/>00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CS$&lt;&gt;8__locals1.product.elements.SetTo(2,&#32;maxQuality);
<anchor xml:id="__craft_util_8cs_source_1l00174"/>00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__craft_util_8cs_source_1l00175"/>00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;CS$&lt;&gt;8__locals1.product;
<anchor xml:id="__craft_util_8cs_source_1l00176"/>00176 &#32;&#32;&#32;&#32;}
<anchor xml:id="__craft_util_8cs_source_1l00177"/>00177 
<anchor xml:id="__craft_util_8cs_source_1l00178"/>00178 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002426&#32;RID:&#32;9254&#32;RVA:&#32;0x000CB774&#32;File&#32;Offset:&#32;0x000C9974</emphasis>
<anchor xml:id="__craft_util_8cs_source_1l00179"/>00179 &#32;&#32;&#32;&#32;[CompilerGenerated]
<anchor xml:id="__craft_util_8cs_source_1l00180"/>00180 &#32;&#32;&#32;&#32;<emphasis role="keyword">internal</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;bool&#32;&lt;MakeDish&gt;g__IsIgnoreName|5_0(<link linkend="_class_card">Card</link>&#32;t)
<anchor xml:id="__craft_util_8cs_source_1l00181"/>00181 &#32;&#32;&#32;&#32;{
<anchor xml:id="__craft_util_8cs_source_1l00182"/>00182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(t&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__craft_util_8cs_source_1l00183"/>00183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__craft_util_8cs_source_1l00184"/>00184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__craft_util_8cs_source_1l00185"/>00185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__craft_util_8cs_source_1l00186"/>00186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;origin&#32;=&#32;t.sourceCard._origin;
<anchor xml:id="__craft_util_8cs_source_1l00187"/>00187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;origin&#32;==&#32;<emphasis role="stringliteral">&quot;dough&quot;</emphasis>&#32;||&#32;origin&#32;==&#32;<emphasis role="stringliteral">&quot;dish&quot;</emphasis>&#32;||&#32;origin&#32;==&#32;<emphasis role="stringliteral">&quot;dish_lunch&quot;</emphasis>;
<anchor xml:id="__craft_util_8cs_source_1l00188"/>00188 &#32;&#32;&#32;&#32;}
<anchor xml:id="__craft_util_8cs_source_1l00189"/>00189 
<anchor xml:id="__craft_util_8cs_source_1l00190"/>00190 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002427&#32;RID:&#32;9255&#32;RVA:&#32;0x000CB7BC&#32;File&#32;Offset:&#32;0x000C99BC</emphasis>
<anchor xml:id="__craft_util_8cs_source_1l00191"/>00191 &#32;&#32;&#32;&#32;[CompilerGenerated]
<anchor xml:id="__craft_util_8cs_source_1l00192"/>00192 &#32;&#32;&#32;&#32;<emphasis role="keyword">internal</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;bool&#32;&lt;MixIngredients&gt;g__IsValidTrait|7_0(<link linkend="_class_element">Element</link>&#32;e,&#32;ref&#32;<link linkend="_class_craft_util">CraftUtil</link>.&lt;&gt;c__DisplayClass7_0&#32;A_1)
<anchor xml:id="__craft_util_8cs_source_1l00193"/>00193 &#32;&#32;&#32;&#32;{
<anchor xml:id="__craft_util_8cs_source_1l00194"/>00194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CraftUtil.MixType&#32;type&#32;=&#32;A_1.type;
<anchor xml:id="__craft_util_8cs_source_1l00195"/>00195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(type&#32;!=&#32;<link linkend="_class_craft_util">CraftUtil</link>.MixType.General)
<anchor xml:id="__craft_util_8cs_source_1l00196"/>00196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__craft_util_8cs_source_1l00197"/>00197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(type&#32;==&#32;<link linkend="_class_craft_util">CraftUtil</link>.MixType.Food)
<anchor xml:id="__craft_util_8cs_source_1l00198"/>00198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__craft_util_8cs_source_1l00199"/>00199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(e.IsFoodTrait&#32;||&#32;e.IsTrait&#32;||&#32;e.id&#32;==&#32;2)
<anchor xml:id="__craft_util_8cs_source_1l00200"/>00200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__craft_util_8cs_source_1l00201"/>00201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__craft_util_8cs_source_1l00202"/>00202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__craft_util_8cs_source_1l00203"/>00203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__craft_util_8cs_source_1l00204"/>00204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__craft_util_8cs_source_1l00205"/>00205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__craft_util_8cs_source_1l00206"/>00206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__craft_util_8cs_source_1l00207"/>00207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(e.IsTrait)
<anchor xml:id="__craft_util_8cs_source_1l00208"/>00208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__craft_util_8cs_source_1l00209"/>00209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__craft_util_8cs_source_1l00210"/>00210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__craft_util_8cs_source_1l00211"/>00211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(e.IsFoodTrait)
<anchor xml:id="__craft_util_8cs_source_1l00212"/>00212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__craft_util_8cs_source_1l00213"/>00213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;A_1.product.ShowFoodEnc;
<anchor xml:id="__craft_util_8cs_source_1l00214"/>00214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__craft_util_8cs_source_1l00215"/>00215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__craft_util_8cs_source_1l00216"/>00216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__craft_util_8cs_source_1l00217"/>00217 &#32;&#32;&#32;&#32;}
<anchor xml:id="__craft_util_8cs_source_1l00218"/>00218 
<anchor xml:id="__craft_util_8cs_source_1l00219"/>00219 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06002428&#32;RID:&#32;9256&#32;RVA:&#32;0x000CB814&#32;File&#32;Offset:&#32;0x000C9A14</emphasis>
<anchor xml:id="__craft_util_8cs_source_1l00220"/>00220 &#32;&#32;&#32;&#32;[CompilerGenerated]
<anchor xml:id="__craft_util_8cs_source_1l00221"/>00221 &#32;&#32;&#32;&#32;<emphasis role="keyword">internal</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;void&#32;&lt;MixIngredients&gt;g__MixElements|7_1(<link linkend="_class_card">Card</link>&#32;t,&#32;ref&#32;<link linkend="_class_craft_util">CraftUtil</link>.&lt;&gt;c__DisplayClass7_0&#32;A_1)
<anchor xml:id="__craft_util_8cs_source_1l00222"/>00222 &#32;&#32;&#32;&#32;{
<anchor xml:id="__craft_util_8cs_source_1l00223"/>00223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(t&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__craft_util_8cs_source_1l00224"/>00224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__craft_util_8cs_source_1l00225"/>00225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__craft_util_8cs_source_1l00226"/>00226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__craft_util_8cs_source_1l00227"/>00227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_element">Element</link>&#32;element&#32;<emphasis role="keywordflow">in</emphasis>&#32;t.elements.dict.Values)
<anchor xml:id="__craft_util_8cs_source_1l00228"/>00228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__craft_util_8cs_source_1l00229"/>00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_craft_util">CraftUtil</link>.&lt;MixIngredients&gt;g__IsValidTrait|7_0(element,&#32;ref&#32;A_1))
<anchor xml:id="__craft_util_8cs_source_1l00230"/>00230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__craft_util_8cs_source_1l00231"/>00231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(A_1.isFood&#32;&amp;&amp;&#32;element.IsFoodTraitMain)
<anchor xml:id="__craft_util_8cs_source_1l00232"/>00232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__craft_util_8cs_source_1l00233"/>00233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;A_1.product.elements.ModBase(element.id,&#32;element.Value);
<anchor xml:id="__craft_util_8cs_source_1l00234"/>00234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__craft_util_8cs_source_1l00235"/>00235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__craft_util_8cs_source_1l00236"/>00236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__craft_util_8cs_source_1l00237"/>00237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;num&#32;=&#32;A_1.product.elements.Base(element.id);
<anchor xml:id="__craft_util_8cs_source_1l00238"/>00238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((num&#32;&lt;=&#32;0&#32;&amp;&amp;&#32;element.Value&#32;&lt;&#32;0&#32;&amp;&amp;&#32;element.Value&#32;&lt;&#32;num)&#32;||&#32;(element.Value&#32;&gt;&#32;0&#32;&amp;&amp;&#32;element.Value&#32;&gt;&#32;num))
<anchor xml:id="__craft_util_8cs_source_1l00239"/>00239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__craft_util_8cs_source_1l00240"/>00240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;A_1.product.elements.SetTo(element.id,&#32;element.Value);
<anchor xml:id="__craft_util_8cs_source_1l00241"/>00241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__craft_util_8cs_source_1l00242"/>00242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__craft_util_8cs_source_1l00243"/>00243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__craft_util_8cs_source_1l00244"/>00244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__craft_util_8cs_source_1l00245"/>00245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(A_1.isFood)
<anchor xml:id="__craft_util_8cs_source_1l00246"/>00246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__craft_util_8cs_source_1l00247"/>00247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;A_1.product.elements.ModBase(10,&#32;t.Evalue(10));
<anchor xml:id="__craft_util_8cs_source_1l00248"/>00248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__craft_util_8cs_source_1l00249"/>00249 &#32;&#32;&#32;&#32;}
<anchor xml:id="__craft_util_8cs_source_1l00250"/>00250 
<anchor xml:id="__craft_util_8cs_source_1l00251"/>00251 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04001394&#32;RID:&#32;5012</emphasis>
<anchor xml:id="__craft_util_8cs_source_1l00252"/>00252 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>[]&#32;ListFoodEffect&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>[]
<anchor xml:id="__craft_util_8cs_source_1l00253"/>00253 &#32;&#32;&#32;&#32;{
<anchor xml:id="__craft_util_8cs_source_1l00254"/>00254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;exp&quot;</emphasis>,
<anchor xml:id="__craft_util_8cs_source_1l00255"/>00255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;pot&quot;</emphasis>
<anchor xml:id="__craft_util_8cs_source_1l00256"/>00256 &#32;&#32;&#32;&#32;};
<anchor xml:id="__craft_util_8cs_source_1l00257"/>00257 
<anchor xml:id="__craft_util_8cs_source_1l00258"/>00258 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x02000A46&#32;RID:&#32;2630</emphasis>
<anchor xml:id="__craft_util_8cs_source_1l00259"/>00259 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">enum</emphasis>&#32;MixType
<anchor xml:id="__craft_util_8cs_source_1l00260"/>00260 &#32;&#32;&#32;&#32;{
<anchor xml:id="__craft_util_8cs_source_1l00261"/>00261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04002A49&#32;RID:&#32;10825</emphasis>
<anchor xml:id="__craft_util_8cs_source_1l00262"/>00262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;General,
<anchor xml:id="__craft_util_8cs_source_1l00263"/>00263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04002A4A&#32;RID:&#32;10826</emphasis>
<anchor xml:id="__craft_util_8cs_source_1l00264"/>00264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Food
<anchor xml:id="__craft_util_8cs_source_1l00265"/>00265 &#32;&#32;&#32;&#32;}
<anchor xml:id="__craft_util_8cs_source_1l00266"/>00266 }
</programlisting></section>
