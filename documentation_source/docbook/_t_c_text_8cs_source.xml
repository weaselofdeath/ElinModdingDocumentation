<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__t_c_text_8cs_source" xml:lang="en-US">
<title>TCText.cs</title>
<indexterm><primary>Elin/TCText.cs</primary></indexterm>
<programlisting linenumbering="unnumbered"><anchor xml:id="__t_c_text_8cs_source_1l00001"/>00001 <emphasis role="keyword">using&#32;</emphasis>System;
<anchor xml:id="__t_c_text_8cs_source_1l00002"/>00002 <emphasis role="keyword">using&#32;</emphasis>UnityEngine;
<anchor xml:id="__t_c_text_8cs_source_1l00003"/>00003 <emphasis role="keyword">using&#32;</emphasis>UnityEngine.UI;
<anchor xml:id="__t_c_text_8cs_source_1l00004"/>00004 
<anchor xml:id="__t_c_text_8cs_source_1l00005"/>00005 <emphasis role="comment">//&#32;Token:&#32;0x02000183&#32;RID:&#32;387</emphasis>
<anchor xml:id="__t_c_text_8cs_source_1l00006"/><link linkend="_class_t_c_text">00006</link> <emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_t_c_text">TCText</link>&#32;:&#32;<link linkend="_class_t_c_u_i">TCUI</link>
<anchor xml:id="__t_c_text_8cs_source_1l00007"/>00007 {
<anchor xml:id="__t_c_text_8cs_source_1l00008"/>00008 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x170002C0&#32;RID:&#32;704</emphasis>
<anchor xml:id="__t_c_text_8cs_source_1l00009"/>00009 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;(get)&#32;Token:&#32;0x06000B1E&#32;RID:&#32;2846&#32;RVA:&#32;0x0004541C&#32;File&#32;Offset:&#32;0x0004361C</emphasis>
<anchor xml:id="__t_c_text_8cs_source_1l00010"/>00010 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;Vector3&#32;FixPos
<anchor xml:id="__t_c_text_8cs_source_1l00011"/>00011 &#32;&#32;&#32;&#32;{
<anchor xml:id="__t_c_text_8cs_source_1l00012"/>00012 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
<anchor xml:id="__t_c_text_8cs_source_1l00013"/>00013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__t_c_text_8cs_source_1l00014"/>00014 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_t_c">TC</link>._setting.textPos;
<anchor xml:id="__t_c_text_8cs_source_1l00015"/>00015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__t_c_text_8cs_source_1l00016"/>00016 &#32;&#32;&#32;&#32;}
<anchor xml:id="__t_c_text_8cs_source_1l00017"/>00017 
<anchor xml:id="__t_c_text_8cs_source_1l00018"/>00018 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06000B1F&#32;RID:&#32;2847&#32;RVA:&#32;0x00045428&#32;File&#32;Offset:&#32;0x00043628</emphasis>
<anchor xml:id="__t_c_text_8cs_source_1l00019"/>00019 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Say(<emphasis role="keywordtype">string</emphasis>&#32;s,&#32;<emphasis role="keywordtype">float</emphasis>&#32;duration&#32;=&#32;0f)
<anchor xml:id="__t_c_text_8cs_source_1l00020"/>00020 &#32;&#32;&#32;&#32;{
<anchor xml:id="__t_c_text_8cs_source_1l00021"/>00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;c&#32;=&#32;s[0];
<anchor xml:id="__t_c_text_8cs_source_1l00022"/>00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PopItem&#32;p;
<anchor xml:id="__t_c_text_8cs_source_1l00023"/>00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(c&#32;&lt;=&#32;<emphasis role="charliteral">&apos;*&apos;</emphasis>)
<anchor xml:id="__t_c_text_8cs_source_1l00024"/>00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__t_c_text_8cs_source_1l00025"/>00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(c&#32;==&#32;<emphasis role="charliteral">&apos;(&apos;</emphasis>)
<anchor xml:id="__t_c_text_8cs_source_1l00026"/>00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__t_c_text_8cs_source_1l00027"/>00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p&#32;=&#32;this.pop.PopText(s,&#32;<emphasis role="keyword">null</emphasis>,&#32;<link linkend="_class_e_mono">EMono</link>.core.config.ui.balloonBG&#32;?&#32;<emphasis role="stringliteral">&quot;PopText_alt&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;PopTextThinking&quot;</emphasis>,&#32;<emphasis role="keywordflow">default</emphasis>(Color),&#32;<emphasis role="keywordflow">default</emphasis>(Vector3),&#32;duration);
<anchor xml:id="__t_c_text_8cs_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">goto</emphasis>&#32;IL_17F;
<anchor xml:id="__t_c_text_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__t_c_text_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(c&#32;==&#32;<emphasis role="charliteral">&apos;*&apos;</emphasis>)
<anchor xml:id="__t_c_text_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__t_c_text_8cs_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p&#32;=&#32;this.pop.PopText(s,&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="stringliteral">&quot;PopTextOno&quot;</emphasis>,&#32;<emphasis role="keywordflow">default</emphasis>(Color),&#32;<emphasis role="keywordflow">default</emphasis>(Vector3),&#32;duration);
<anchor xml:id="__t_c_text_8cs_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">goto</emphasis>&#32;IL_17F;
<anchor xml:id="__t_c_text_8cs_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__t_c_text_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__t_c_text_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__t_c_text_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__t_c_text_8cs_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(c&#32;==&#32;<emphasis role="charliteral">&apos;@&apos;</emphasis>)
<anchor xml:id="__t_c_text_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__t_c_text_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;num&#32;=&#32;<emphasis role="keywordtype">int</emphasis>.Parse(s[1].ToString());
<anchor xml:id="__t_c_text_8cs_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p&#32;=&#32;this.pop.PopText(s.Substring(2),&#32;<emphasis role="keyword">null</emphasis>,&#32;<link linkend="_class_t_c_text">TCText</link>.popIDs[num],&#32;<emphasis role="keywordflow">default</emphasis>(Color),&#32;<emphasis role="keywordflow">default</emphasis>(Vector3),&#32;duration);
<anchor xml:id="__t_c_text_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">goto</emphasis>&#32;IL_17F;
<anchor xml:id="__t_c_text_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__t_c_text_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(c&#32;==&#32;<emphasis role="charliteral">&apos;^&apos;</emphasis>)
<anchor xml:id="__t_c_text_8cs_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__t_c_text_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p&#32;=&#32;this.pop.PopText(s.Substring(1),&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="stringliteral">&quot;PopTextBroadcast&quot;</emphasis>,&#32;<emphasis role="keywordflow">default</emphasis>(Color),&#32;<emphasis role="keywordflow">default</emphasis>(Vector3),&#32;duration);
<anchor xml:id="__t_c_text_8cs_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">goto</emphasis>&#32;IL_17F;
<anchor xml:id="__t_c_text_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__t_c_text_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__t_c_text_8cs_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p&#32;=&#32;this.pop.PopText(s,&#32;<emphasis role="keyword">null</emphasis>,&#32;<link linkend="_class_e_mono">EMono</link>.core.config.ui.balloonBG&#32;?&#32;<emphasis role="stringliteral">&quot;PopText_alt&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;PopText&quot;</emphasis>,&#32;<emphasis role="keywordflow">default</emphasis>(Color),&#32;<emphasis role="keywordflow">default</emphasis>(Vector3),&#32;duration);
<anchor xml:id="__t_c_text_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;IL_17F:
<anchor xml:id="__t_c_text_8cs_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(p)
<anchor xml:id="__t_c_text_8cs_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__t_c_text_8cs_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_e_mono">EMono</link>.core.actionsNextFrame.Add(delegate
<anchor xml:id="__t_c_text_8cs_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__t_c_text_8cs_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(p&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;p.gameObject&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__t_c_text_8cs_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__t_c_text_8cs_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p.RebuildLayout(<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__t_c_text_8cs_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ContentSizeFitter[]&#32;componentsInChildren&#32;=&#32;p.GetComponentsInChildren&lt;ContentSizeFitter&gt;();
<anchor xml:id="__t_c_text_8cs_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;componentsInChildren.Length;&#32;i++)
<anchor xml:id="__t_c_text_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__t_c_text_8cs_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;componentsInChildren[i].enabled&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__t_c_text_8cs_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__t_c_text_8cs_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LayoutGroup[]&#32;componentsInChildren2&#32;=&#32;p.GetComponentsInChildren&lt;LayoutGroup&gt;();
<anchor xml:id="__t_c_text_8cs_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;componentsInChildren2.Length;&#32;i++)
<anchor xml:id="__t_c_text_8cs_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__t_c_text_8cs_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;componentsInChildren2[i].enabled&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__t_c_text_8cs_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__t_c_text_8cs_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__t_c_text_8cs_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__t_c_text_8cs_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__t_c_text_8cs_source_1l00072"/>00072 &#32;&#32;&#32;&#32;}
<anchor xml:id="__t_c_text_8cs_source_1l00073"/>00073 
<anchor xml:id="__t_c_text_8cs_source_1l00074"/>00074 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06000B20&#32;RID:&#32;2848&#32;RVA:&#32;0x000455DC&#32;File&#32;Offset:&#32;0x000437DC</emphasis>
<anchor xml:id="__t_c_text_8cs_source_1l00075"/>00075 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;ShowEmo(Emo&#32;emo,&#32;<emphasis role="keywordtype">float</emphasis>&#32;duration)
<anchor xml:id="__t_c_text_8cs_source_1l00076"/>00076 &#32;&#32;&#32;&#32;{
<anchor xml:id="__t_c_text_8cs_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Sprite&#32;sprite&#32;=&#32;SpriteSheet.Get(<emphasis role="stringliteral">&quot;Media/Graphics/Icon/icons_32&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;emo_&quot;</emphasis>&#32;+&#32;emo.ToString());
<anchor xml:id="__t_c_text_8cs_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.lastEmo&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__t_c_text_8cs_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__t_c_text_8cs_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.pop.Kill(this.lastEmo,&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__t_c_text_8cs_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__t_c_text_8cs_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.lastEmo&#32;=&#32;this.pop.PopText(<emphasis role="stringliteral">&quot;&quot;</emphasis>,&#32;sprite,&#32;<emphasis role="stringliteral">&quot;PopTextEmo&quot;</emphasis>,&#32;<emphasis role="keywordflow">default</emphasis>(Color),&#32;<emphasis role="keywordflow">default</emphasis>(Vector3),&#32;duration);
<anchor xml:id="__t_c_text_8cs_source_1l00083"/>00083 &#32;&#32;&#32;&#32;}
<anchor xml:id="__t_c_text_8cs_source_1l00084"/>00084 
<anchor xml:id="__t_c_text_8cs_source_1l00085"/>00085 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06000B21&#32;RID:&#32;2849&#32;RVA:&#32;0x0004565C&#32;File&#32;Offset:&#32;0x0004385C</emphasis>
<anchor xml:id="__t_c_text_8cs_source_1l00086"/>00086 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnDraw(ref&#32;Vector3&#32;pos)
<anchor xml:id="__t_c_text_8cs_source_1l00087"/>00087 &#32;&#32;&#32;&#32;{
<anchor xml:id="__t_c_text_8cs_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!this.pop.enabled)
<anchor xml:id="__t_c_text_8cs_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__t_c_text_8cs_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.render.RemoveTC(<emphasis role="keyword">this</emphasis>);
<anchor xml:id="__t_c_text_8cs_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__t_c_text_8cs_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__t_c_text_8cs_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;vector&#32;=&#32;pos;
<anchor xml:id="__t_c_text_8cs_source_1l00094"/>00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.lastPos&#32;=&#32;pos;
<anchor xml:id="__t_c_text_8cs_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;base.OnDraw(ref&#32;vector);
<anchor xml:id="__t_c_text_8cs_source_1l00096"/>00096 &#32;&#32;&#32;&#32;}
<anchor xml:id="__t_c_text_8cs_source_1l00097"/>00097 
<anchor xml:id="__t_c_text_8cs_source_1l00098"/>00098 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x06000B22&#32;RID:&#32;2850&#32;RVA:&#32;0x0004569E&#32;File&#32;Offset:&#32;0x0004389E</emphasis>
<anchor xml:id="__t_c_text_8cs_source_1l00099"/>00099 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnKill()
<anchor xml:id="__t_c_text_8cs_source_1l00100"/>00100 &#32;&#32;&#32;&#32;{
<anchor xml:id="__t_c_text_8cs_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;base.DrawImmediate(ref&#32;this.lastPos);
<anchor xml:id="__t_c_text_8cs_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.pop.CopyAll(<link linkend="_class_e_mono">EMono</link>.ui.rectDynamic);
<anchor xml:id="__t_c_text_8cs_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.pop.KillAll(<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__t_c_text_8cs_source_1l00104"/>00104 &#32;&#32;&#32;&#32;}
<anchor xml:id="__t_c_text_8cs_source_1l00105"/>00105 
<anchor xml:id="__t_c_text_8cs_source_1l00106"/>00106 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04000A32&#32;RID:&#32;2610</emphasis>
<anchor xml:id="__t_c_text_8cs_source_1l00107"/>00107 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>[]&#32;popIDs&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>[]
<anchor xml:id="__t_c_text_8cs_source_1l00108"/>00108 &#32;&#32;&#32;&#32;{
<anchor xml:id="__t_c_text_8cs_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;PopTextSys&quot;</emphasis>,
<anchor xml:id="__t_c_text_8cs_source_1l00110"/>00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;PopTextGod&quot;</emphasis>
<anchor xml:id="__t_c_text_8cs_source_1l00111"/>00111 &#32;&#32;&#32;&#32;};
<anchor xml:id="__t_c_text_8cs_source_1l00112"/>00112 
<anchor xml:id="__t_c_text_8cs_source_1l00113"/>00113 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04000A33&#32;RID:&#32;2611</emphasis>
<anchor xml:id="__t_c_text_8cs_source_1l00114"/>00114 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;PopManager&#32;pop;
<anchor xml:id="__t_c_text_8cs_source_1l00115"/>00115 
<anchor xml:id="__t_c_text_8cs_source_1l00116"/>00116 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04000A34&#32;RID:&#32;2612</emphasis>
<anchor xml:id="__t_c_text_8cs_source_1l00117"/>00117 &#32;&#32;&#32;&#32;[NonSerialized]
<anchor xml:id="__t_c_text_8cs_source_1l00118"/>00118 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;PopItemText&#32;lastEmo;
<anchor xml:id="__t_c_text_8cs_source_1l00119"/>00119 }
</programlisting></section>
