<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__task_mine_8cs_source" xml:lang="en-US">
<title>TaskMine.cs</title>
<indexterm><primary>Elin/TaskMine.cs</primary></indexterm>
<programlisting linenumbering="unnumbered"><anchor xml:id="__task_mine_8cs_source_1l00001"/>00001 <emphasis role="keyword">using&#32;</emphasis>System;
<anchor xml:id="__task_mine_8cs_source_1l00002"/>00002 
<anchor xml:id="__task_mine_8cs_source_1l00003"/>00003 <emphasis role="comment">//&#32;Token:&#32;0x02000256&#32;RID:&#32;598</emphasis>
<anchor xml:id="__task_mine_8cs_source_1l00004"/><link linkend="_class_task_mine">00004</link> <emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_task_mine">TaskMine</link>&#32;:&#32;<link linkend="_class_base_task_harvest">BaseTaskHarvest</link>
<anchor xml:id="__task_mine_8cs_source_1l00005"/>00005 {
<anchor xml:id="__task_mine_8cs_source_1l00006"/>00006 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x17000470&#32;RID:&#32;1136</emphasis>
<anchor xml:id="__task_mine_8cs_source_1l00007"/>00007 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;(get)&#32;Token:&#32;0x060010AD&#32;RID:&#32;4269&#32;RVA:&#32;0x0007415A&#32;File&#32;Offset:&#32;0x0007235A</emphasis>
<anchor xml:id="__task_mine_8cs_source_1l00008"/>00008 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;BaseTaskHarvest.HarvestType&#32;harvestType
<anchor xml:id="__task_mine_8cs_source_1l00009"/>00009 &#32;&#32;&#32;&#32;{
<anchor xml:id="__task_mine_8cs_source_1l00010"/>00010 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
<anchor xml:id="__task_mine_8cs_source_1l00011"/>00011 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__task_mine_8cs_source_1l00012"/>00012 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_base_task_harvest">BaseTaskHarvest</link>.HarvestType.Block;
<anchor xml:id="__task_mine_8cs_source_1l00013"/>00013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__task_mine_8cs_source_1l00014"/>00014 &#32;&#32;&#32;&#32;}
<anchor xml:id="__task_mine_8cs_source_1l00015"/>00015 
<anchor xml:id="__task_mine_8cs_source_1l00016"/>00016 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x17000471&#32;RID:&#32;1137</emphasis>
<anchor xml:id="__task_mine_8cs_source_1l00017"/>00017 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;(get)&#32;Token:&#32;0x060010AE&#32;RID:&#32;4270&#32;RVA:&#32;0x0007415D&#32;File&#32;Offset:&#32;0x0007235D</emphasis>
<anchor xml:id="__task_mine_8cs_source_1l00018"/>00018 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;destDist
<anchor xml:id="__task_mine_8cs_source_1l00019"/>00019 &#32;&#32;&#32;&#32;{
<anchor xml:id="__task_mine_8cs_source_1l00020"/>00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
<anchor xml:id="__task_mine_8cs_source_1l00021"/>00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__task_mine_8cs_source_1l00022"/>00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
<anchor xml:id="__task_mine_8cs_source_1l00023"/>00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__task_mine_8cs_source_1l00024"/>00024 &#32;&#32;&#32;&#32;}
<anchor xml:id="__task_mine_8cs_source_1l00025"/>00025 
<anchor xml:id="__task_mine_8cs_source_1l00026"/>00026 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x17000472&#32;RID:&#32;1138</emphasis>
<anchor xml:id="__task_mine_8cs_source_1l00027"/>00027 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;(get)&#32;Token:&#32;0x060010AF&#32;RID:&#32;4271&#32;RVA:&#32;0x00074160&#32;File&#32;Offset:&#32;0x00072360</emphasis>
<anchor xml:id="__task_mine_8cs_source_1l00028"/>00028 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isBlock
<anchor xml:id="__task_mine_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;{
<anchor xml:id="__task_mine_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
<anchor xml:id="__task_mine_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__task_mine_8cs_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__task_mine_8cs_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__task_mine_8cs_source_1l00034"/>00034 &#32;&#32;&#32;&#32;}
<anchor xml:id="__task_mine_8cs_source_1l00035"/>00035 
<anchor xml:id="__task_mine_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x17000473&#32;RID:&#32;1139</emphasis>
<anchor xml:id="__task_mine_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;(get)&#32;Token:&#32;0x060010B0&#32;RID:&#32;4272&#32;RVA:&#32;0x00074163&#32;File&#32;Offset:&#32;0x00072363</emphasis>
<anchor xml:id="__task_mine_8cs_source_1l00038"/>00038 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;RightHand
<anchor xml:id="__task_mine_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;{
<anchor xml:id="__task_mine_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
<anchor xml:id="__task_mine_8cs_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__task_mine_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1004;
<anchor xml:id="__task_mine_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__task_mine_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;}
<anchor xml:id="__task_mine_8cs_source_1l00045"/>00045 
<anchor xml:id="__task_mine_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x17000474&#32;RID:&#32;1140</emphasis>
<anchor xml:id="__task_mine_8cs_source_1l00047"/>00047 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;(get)&#32;Token:&#32;0x060010B1&#32;RID:&#32;4273&#32;RVA:&#32;0x0007416A&#32;File&#32;Offset:&#32;0x0007236A</emphasis>
<anchor xml:id="__task_mine_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;destIgnoreConnection
<anchor xml:id="__task_mine_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;{
<anchor xml:id="__task_mine_8cs_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
<anchor xml:id="__task_mine_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__task_mine_8cs_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__task_mine_8cs_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__task_mine_8cs_source_1l00054"/>00054 &#32;&#32;&#32;&#32;}
<anchor xml:id="__task_mine_8cs_source_1l00055"/>00055 
<anchor xml:id="__task_mine_8cs_source_1l00056"/>00056 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x17000475&#32;RID:&#32;1141</emphasis>
<anchor xml:id="__task_mine_8cs_source_1l00057"/>00057 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;(get)&#32;Token:&#32;0x060010B2&#32;RID:&#32;4274&#32;RVA:&#32;0x0007416D&#32;File&#32;Offset:&#32;0x0007236D</emphasis>
<anchor xml:id="__task_mine_8cs_source_1l00058"/>00058 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;ShowMapHighlightBlock
<anchor xml:id="__task_mine_8cs_source_1l00059"/>00059 &#32;&#32;&#32;&#32;{
<anchor xml:id="__task_mine_8cs_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
<anchor xml:id="__task_mine_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__task_mine_8cs_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__task_mine_8cs_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__task_mine_8cs_source_1l00064"/>00064 &#32;&#32;&#32;&#32;}
<anchor xml:id="__task_mine_8cs_source_1l00065"/>00065 
<anchor xml:id="__task_mine_8cs_source_1l00066"/>00066 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x17000476&#32;RID:&#32;1142</emphasis>
<anchor xml:id="__task_mine_8cs_source_1l00067"/>00067 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;(get)&#32;Token:&#32;0x060010B3&#32;RID:&#32;4275&#32;RVA:&#32;0x00074170&#32;File&#32;Offset:&#32;0x00072370</emphasis>
<anchor xml:id="__task_mine_8cs_source_1l00068"/>00068 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;CursorInfo&#32;CursorIcon
<anchor xml:id="__task_mine_8cs_source_1l00069"/>00069 &#32;&#32;&#32;&#32;{
<anchor xml:id="__task_mine_8cs_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
<anchor xml:id="__task_mine_8cs_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__task_mine_8cs_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;CursorSystem.Mine;
<anchor xml:id="__task_mine_8cs_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__task_mine_8cs_source_1l00074"/>00074 &#32;&#32;&#32;&#32;}
<anchor xml:id="__task_mine_8cs_source_1l00075"/>00075 
<anchor xml:id="__task_mine_8cs_source_1l00076"/>00076 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x17000477&#32;RID:&#32;1143</emphasis>
<anchor xml:id="__task_mine_8cs_source_1l00077"/>00077 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;(get)&#32;Token:&#32;0x060010B4&#32;RID:&#32;4276&#32;RVA:&#32;0x00074177&#32;File&#32;Offset:&#32;0x00072377</emphasis>
<anchor xml:id="__task_mine_8cs_source_1l00078"/>00078 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;IsHostileAct
<anchor xml:id="__task_mine_8cs_source_1l00079"/>00079 &#32;&#32;&#32;&#32;{
<anchor xml:id="__task_mine_8cs_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
<anchor xml:id="__task_mine_8cs_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__task_mine_8cs_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__task_mine_8cs_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__task_mine_8cs_source_1l00084"/>00084 &#32;&#32;&#32;&#32;}
<anchor xml:id="__task_mine_8cs_source_1l00085"/>00085 
<anchor xml:id="__task_mine_8cs_source_1l00086"/>00086 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x060010B5&#32;RID:&#32;4277&#32;RVA:&#32;0x0007417C&#32;File&#32;Offset:&#32;0x0007237C</emphasis>
<anchor xml:id="__task_mine_8cs_source_1l00087"/>00087 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;CanMine(<link linkend="_class_point">Point</link>&#32;pos,&#32;<link linkend="_class_card">Card</link>&#32;t)
<anchor xml:id="__task_mine_8cs_source_1l00088"/>00088 &#32;&#32;&#32;&#32;{
<anchor xml:id="__task_mine_8cs_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(t&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;pos.HasBlock&#32;&amp;&amp;&#32;(!pos.HasObj&#32;||&#32;!pos.sourceObj.tileType.IsBlockMount))
<anchor xml:id="__task_mine_8cs_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__task_mine_8cs_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(t.HasElement(220,&#32;1))
<anchor xml:id="__task_mine_8cs_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__task_mine_8cs_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__task_mine_8cs_source_1l00094"/>00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__task_mine_8cs_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((pos.matBlock.category&#32;==&#32;<emphasis role="stringliteral">&quot;wood&quot;</emphasis>&#32;||&#32;pos.matBlock.category&#32;==&#32;<emphasis role="stringliteral">&quot;grass&quot;</emphasis>)&#32;&amp;&amp;&#32;t.HasElement(225,&#32;1))
<anchor xml:id="__task_mine_8cs_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__task_mine_8cs_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__task_mine_8cs_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__task_mine_8cs_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__task_mine_8cs_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__task_mine_8cs_source_1l00101"/>00101 &#32;&#32;&#32;&#32;}
<anchor xml:id="__task_mine_8cs_source_1l00102"/>00102 
<anchor xml:id="__task_mine_8cs_source_1l00103"/>00103 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x060010B6&#32;RID:&#32;4278&#32;RVA:&#32;0x000741FD&#32;File&#32;Offset:&#32;0x000723FD</emphasis>
<anchor xml:id="__task_mine_8cs_source_1l00104"/>00104 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;GetTextSmall(<link linkend="_class_card">Card</link>&#32;c)
<anchor xml:id="__task_mine_8cs_source_1l00105"/>00105 &#32;&#32;&#32;&#32;{
<anchor xml:id="__task_mine_8cs_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!this.pos.cell.HasBlock)
<anchor xml:id="__task_mine_8cs_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__task_mine_8cs_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this.pos.cell.GetFloorName();
<anchor xml:id="__task_mine_8cs_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__task_mine_8cs_source_1l00110"/>00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this.pos.cell.GetBlockName();
<anchor xml:id="__task_mine_8cs_source_1l00111"/>00111 &#32;&#32;&#32;&#32;}
<anchor xml:id="__task_mine_8cs_source_1l00112"/>00112 
<anchor xml:id="__task_mine_8cs_source_1l00113"/>00113 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x060010B7&#32;RID:&#32;4279&#32;RVA:&#32;0x00074234&#32;File&#32;Offset:&#32;0x00072434</emphasis>
<anchor xml:id="__task_mine_8cs_source_1l00114"/>00114 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnCreateProgress(<link linkend="_class_progress___custom">Progress_Custom</link>&#32;p)
<anchor xml:id="__task_mine_8cs_source_1l00115"/>00115 &#32;&#32;&#32;&#32;{
<anchor xml:id="__task_mine_8cs_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;base.SetTarget(this.owner,&#32;<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__task_mine_8cs_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p.textHint&#32;=&#32;this.pos.cell.GetBlockName();
<anchor xml:id="__task_mine_8cs_source_1l00118"/>00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p.maxProgress&#32;=&#32;this.maxProgress;
<anchor xml:id="__task_mine_8cs_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p.onProgressBegin&#32;=&#32;delegate()
<anchor xml:id="__task_mine_8cs_source_1l00120"/>00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__task_mine_8cs_source_1l00121"/>00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_task_mine">TaskMine</link>.CanMine(<emphasis role="keyword">this</emphasis>.pos,&#32;<emphasis role="keyword">this</emphasis>.owner.Tool))
<anchor xml:id="__task_mine_8cs_source_1l00122"/>00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__task_mine_8cs_source_1l00123"/>00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p.Cancel();
<anchor xml:id="__task_mine_8cs_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__task_mine_8cs_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__task_mine_8cs_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.IsTooHard)
<anchor xml:id="__task_mine_8cs_source_1l00127"/>00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__task_mine_8cs_source_1l00128"/>00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.owner.Say(<emphasis role="stringliteral">&quot;tooHardToMine&quot;</emphasis>,&#32;this.owner,&#32;this.pos.cell.GetBlockName(),&#32;<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__task_mine_8cs_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p.Cancel();
<anchor xml:id="__task_mine_8cs_source_1l00130"/>00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__task_mine_8cs_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__task_mine_8cs_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.owner.Tool&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__task_mine_8cs_source_1l00133"/>00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__task_mine_8cs_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.owner.Say(<emphasis role="stringliteral">&quot;mine_start&quot;</emphasis>,&#32;this.owner,&#32;this.owner.Tool,&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__task_mine_8cs_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__task_mine_8cs_source_1l00136"/>00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__task_mine_8cs_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p.onProgress&#32;=&#32;delegate(<link linkend="_class_progress___custom">Progress_Custom</link>&#32;_p)
<anchor xml:id="__task_mine_8cs_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__task_mine_8cs_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.owner.LookAt(this.pos);
<anchor xml:id="__task_mine_8cs_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.owner.PlaySound(this.pos.matBlock.GetSoundImpact(<emphasis role="keyword">null</emphasis>),&#32;1f,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__task_mine_8cs_source_1l00141"/>00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.pos.Animate(AnimeID.HitObj,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__task_mine_8cs_source_1l00142"/>00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.pos.matBlock.PlayHitEffect(this.pos);
<anchor xml:id="__task_mine_8cs_source_1l00143"/>00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.pos.matBlock.AddBlood(this.pos,&#32;1);
<anchor xml:id="__task_mine_8cs_source_1l00144"/>00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.owner.renderer.NextFrame();
<anchor xml:id="__task_mine_8cs_source_1l00145"/>00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.owner.elements.ModExp(220,&#32;5,&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__task_mine_8cs_source_1l00146"/>00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_e_class">EClass</link>._zone.IsCrime(<emphasis role="keyword">this</emphasis>.owner,&#32;<emphasis role="keyword">this</emphasis>))
<anchor xml:id="__task_mine_8cs_source_1l00147"/>00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__task_mine_8cs_source_1l00148"/>00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.owner.pos.TryWitnessCrime(this.owner,&#32;<emphasis role="keyword">null</emphasis>,&#32;4,&#32;<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__task_mine_8cs_source_1l00149"/>00149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__task_mine_8cs_source_1l00150"/>00150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__task_mine_8cs_source_1l00151"/>00151 &#32;&#32;&#32;&#32;}
<anchor xml:id="__task_mine_8cs_source_1l00152"/>00152 
<anchor xml:id="__task_mine_8cs_source_1l00153"/>00153 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x060010B8&#32;RID:&#32;4280&#32;RVA:&#32;0x000742BC&#32;File&#32;Offset:&#32;0x000724BC</emphasis>
<anchor xml:id="__task_mine_8cs_source_1l00154"/>00154 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;DrawMarker(<emphasis role="keywordtype">int</emphasis>&#32;x,&#32;<emphasis role="keywordtype">int</emphasis>&#32;z,&#32;<link linkend="_class_render_param">RenderParam</link>&#32;p)
<anchor xml:id="__task_mine_8cs_source_1l00155"/>00155 &#32;&#32;&#32;&#32;{
<anchor xml:id="__task_mine_8cs_source_1l00156"/>00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_action_mode">ActionMode</link>.Mine.IsRoofEditMode(<emphasis role="keyword">null</emphasis>)&#32;&amp;&amp;&#32;<emphasis role="keyword">this</emphasis>.pos.HasWallOrFence)
<anchor xml:id="__task_mine_8cs_source_1l00157"/>00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__task_mine_8cs_source_1l00158"/>00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_e_class">EClass</link>.screen.guide.DrawWall(this.pos,&#32;this.Working&#32;?&#32;<link linkend="_class_e_class">EClass</link>.Colors.blockColors.ActiveOpacity&#32;:&#32;<link linkend="_class_e_class">EClass</link>.Colors.blockColors.InactiveOpacity,&#32;<emphasis role="keyword">false</emphasis>,&#32;0f);
<anchor xml:id="__task_mine_8cs_source_1l00159"/>00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__task_mine_8cs_source_1l00160"/>00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__task_mine_8cs_source_1l00161"/>00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;base.DrawMarker(x,&#32;z,&#32;p);
<anchor xml:id="__task_mine_8cs_source_1l00162"/>00162 &#32;&#32;&#32;&#32;}
<anchor xml:id="__task_mine_8cs_source_1l00163"/>00163 
<anchor xml:id="__task_mine_8cs_source_1l00164"/>00164 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x060010B9&#32;RID:&#32;4281&#32;RVA:&#32;0x00074330&#32;File&#32;Offset:&#32;0x00072530</emphasis>
<anchor xml:id="__task_mine_8cs_source_1l00165"/>00165 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;HitResult&#32;GetHitResult()
<anchor xml:id="__task_mine_8cs_source_1l00166"/>00166 &#32;&#32;&#32;&#32;{
<anchor xml:id="__task_mine_8cs_source_1l00167"/>00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_action_mode">ActionMode</link>.Mine.IsRoofEditMode(<emphasis role="keyword">null</emphasis>))
<anchor xml:id="__task_mine_8cs_source_1l00168"/>00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__task_mine_8cs_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.pos.cell._roofBlock&#32;==&#32;0)
<anchor xml:id="__task_mine_8cs_source_1l00170"/>00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__task_mine_8cs_source_1l00171"/>00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;HitResult.Default;
<anchor xml:id="__task_mine_8cs_source_1l00172"/>00172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__task_mine_8cs_source_1l00173"/>00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;HitResult.Valid;
<anchor xml:id="__task_mine_8cs_source_1l00174"/>00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__task_mine_8cs_source_1l00175"/>00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.pos.cell.HasBlock&#32;||&#32;!<emphasis role="keyword">this</emphasis>.pos.cell.isSeen)
<anchor xml:id="__task_mine_8cs_source_1l00176"/>00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__task_mine_8cs_source_1l00177"/>00177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.pos.sourceBlock.tileType.Invisible&#32;&amp;&amp;&#32;!<link linkend="_class_action_mode">ActionMode</link>.Mine.IsActive)
<anchor xml:id="__task_mine_8cs_source_1l00178"/>00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__task_mine_8cs_source_1l00179"/>00179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;HitResult.Default;
<anchor xml:id="__task_mine_8cs_source_1l00180"/>00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__task_mine_8cs_source_1l00181"/>00181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.mode&#32;==&#32;<link linkend="_class_task_mine">TaskMine</link>.Mode.Ramp&#32;&amp;&amp;&#32;(<emphasis role="keyword">this</emphasis>.pos.cell.HasRamp&#32;||&#32;<link linkend="_class_e_class">EClass</link>._map.GetRampDir(<emphasis role="keyword">this</emphasis>.pos.x,&#32;<emphasis role="keyword">this</emphasis>.pos.z,&#32;<link linkend="_class_e_class">EClass</link>.sources.blocks.rows[<emphasis role="keyword">this</emphasis>.ramp].tileType)&#32;==&#32;-1))
<anchor xml:id="__task_mine_8cs_source_1l00182"/>00182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__task_mine_8cs_source_1l00183"/>00183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;HitResult.Default;
<anchor xml:id="__task_mine_8cs_source_1l00184"/>00184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__task_mine_8cs_source_1l00185"/>00185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;HitResult.Valid;
<anchor xml:id="__task_mine_8cs_source_1l00186"/>00186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__task_mine_8cs_source_1l00187"/>00187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__task_mine_8cs_source_1l00188"/>00188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__task_mine_8cs_source_1l00189"/>00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!this.mined&#32;&amp;&amp;&#32;!this.pos.HasObj&#32;&amp;&amp;&#32;<emphasis role="keyword">this</emphasis>.owner&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;!<emphasis role="keyword">this</emphasis>.owner.IsAgent&#32;&amp;&amp;&#32;<emphasis role="keyword">this</emphasis>.pos.Equals(<emphasis role="keyword">this</emphasis>.owner.pos)&#32;&amp;&amp;&#32;<emphasis role="keyword">this</emphasis>.pos.Installed&#32;==&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;<link linkend="_class_e_class">EClass</link>._zone.CanDigUnderground)
<anchor xml:id="__task_mine_8cs_source_1l00190"/>00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__task_mine_8cs_source_1l00191"/>00191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;HitResult.Valid;
<anchor xml:id="__task_mine_8cs_source_1l00192"/>00192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__task_mine_8cs_source_1l00193"/>00193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;HitResult.Default;
<anchor xml:id="__task_mine_8cs_source_1l00194"/>00194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__task_mine_8cs_source_1l00195"/>00195 &#32;&#32;&#32;&#32;}
<anchor xml:id="__task_mine_8cs_source_1l00196"/>00196 
<anchor xml:id="__task_mine_8cs_source_1l00197"/>00197 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x060010BA&#32;RID:&#32;4282&#32;RVA:&#32;0x0007446C&#32;File&#32;Offset:&#32;0x0007266C</emphasis>
<anchor xml:id="__task_mine_8cs_source_1l00198"/>00198 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnProgressComplete()
<anchor xml:id="__task_mine_8cs_source_1l00199"/>00199 &#32;&#32;&#32;&#32;{
<anchor xml:id="__task_mine_8cs_source_1l00200"/>00200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;recipeID&#32;=&#32;this.pos.sourceBlock.RecipeID;
<anchor xml:id="__task_mine_8cs_source_1l00201"/>00201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TaskMine.Mode&#32;mode&#32;=&#32;this.mode;
<anchor xml:id="__task_mine_8cs_source_1l00202"/>00202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(mode&#32;!=&#32;<link linkend="_class_task_mine">TaskMine</link>.Mode.Default)
<anchor xml:id="__task_mine_8cs_source_1l00203"/>00203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__task_mine_8cs_source_1l00204"/>00204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(mode&#32;==&#32;<link linkend="_class_task_mine">TaskMine</link>.Mode.Ramp)
<anchor xml:id="__task_mine_8cs_source_1l00205"/>00205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__task_mine_8cs_source_1l00206"/>00206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_e_class">EClass</link>._map.MineRamp(this.pos,&#32;(this.ramp&#32;==&#32;3)&#32;?&#32;this.pos.matBlock.ramp&#32;:&#32;<emphasis role="keyword">this</emphasis>.ramp,&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__task_mine_8cs_source_1l00207"/>00207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__task_mine_8cs_source_1l00208"/>00208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__task_mine_8cs_source_1l00209"/>00209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.pos.HasBlock&#32;||&#32;<link linkend="_class_action_mode">ActionMode</link>.Mine.IsRoofEditMode(<emphasis role="keyword">null</emphasis>))
<anchor xml:id="__task_mine_8cs_source_1l00210"/>00210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__task_mine_8cs_source_1l00211"/>00211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.owner.IsPC)
<anchor xml:id="__task_mine_8cs_source_1l00212"/>00212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__task_mine_8cs_source_1l00213"/>00213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_e_class">EClass</link>.player.stats.digs++;
<anchor xml:id="__task_mine_8cs_source_1l00214"/>00214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__task_mine_8cs_source_1l00215"/>00215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_e_class">EClass</link>._map.MineBlock(this.pos,&#32;<emphasis role="keyword">false</emphasis>,&#32;this.owner);
<anchor xml:id="__task_mine_8cs_source_1l00216"/>00216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__task_mine_8cs_source_1l00217"/>00217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.pos.Installed&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__task_mine_8cs_source_1l00218"/>00218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__task_mine_8cs_source_1l00219"/>00219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_e_class">EClass</link>._zone.AddThing(<emphasis role="stringliteral">&quot;stairsDown_cave&quot;</emphasis>,&#32;this.pos.x,&#32;<emphasis role="keyword">this</emphasis>.pos.z).Install();
<anchor xml:id="__task_mine_8cs_source_1l00220"/>00220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__task_mine_8cs_source_1l00221"/>00221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__task_mine_8cs_source_1l00222"/>00222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!this.owner.IsAgent)
<anchor xml:id="__task_mine_8cs_source_1l00223"/>00223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__task_mine_8cs_source_1l00224"/>00224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.owner.elements.ModExp(220,&#32;50,&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__task_mine_8cs_source_1l00225"/>00225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_e_class">EClass</link>.rnd(10)&#32;==&#32;0)
<anchor xml:id="__task_mine_8cs_source_1l00226"/>00226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__task_mine_8cs_source_1l00227"/>00227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_e_class">EClass</link>._map.TrySmoothPick(this.pos,&#32;<link linkend="_class_thing_gen">ThingGen</link>.Create(<emphasis role="stringliteral">&quot;pebble&quot;</emphasis>,&#32;-1,&#32;-1),&#32;<emphasis role="keyword">this</emphasis>.owner);
<anchor xml:id="__task_mine_8cs_source_1l00228"/>00228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__task_mine_8cs_source_1l00229"/>00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_e_class">EClass</link>.rnd(10)&#32;==&#32;0)
<anchor xml:id="__task_mine_8cs_source_1l00230"/>00230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__task_mine_8cs_source_1l00231"/>00231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_e_class">EClass</link>._map.TrySmoothPick(this.pos,&#32;<link linkend="_class_thing_gen">ThingGen</link>.Create(<emphasis role="stringliteral">&quot;stone&quot;</emphasis>,&#32;-1,&#32;-1),&#32;<emphasis role="keyword">this</emphasis>.owner);
<anchor xml:id="__task_mine_8cs_source_1l00232"/>00232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__task_mine_8cs_source_1l00233"/>00233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_e_class">EClass</link>._zone.IsCrime(<emphasis role="keyword">this</emphasis>.owner,&#32;<emphasis role="keyword">this</emphasis>))
<anchor xml:id="__task_mine_8cs_source_1l00234"/>00234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__task_mine_8cs_source_1l00235"/>00235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_e_class">EClass</link>.player.ModKarma(-1);
<anchor xml:id="__task_mine_8cs_source_1l00236"/>00236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__task_mine_8cs_source_1l00237"/>00237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_e_class">EClass</link>.rnd(2)&#32;==&#32;0)
<anchor xml:id="__task_mine_8cs_source_1l00238"/>00238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__task_mine_8cs_source_1l00239"/>00239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.owner.stamina.Mod(-1);
<anchor xml:id="__task_mine_8cs_source_1l00240"/>00240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__task_mine_8cs_source_1l00241"/>00241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__task_mine_8cs_source_1l00242"/>00242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.owner&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;this.owner.IsPC)
<anchor xml:id="__task_mine_8cs_source_1l00243"/>00243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__task_mine_8cs_source_1l00244"/>00244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_e_class">EClass</link>.player.recipes.ComeUpWithRecipe(recipeID,&#32;30);
<anchor xml:id="__task_mine_8cs_source_1l00245"/>00245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__task_mine_8cs_source_1l00246"/>00246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.mined&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__task_mine_8cs_source_1l00247"/>00247 &#32;&#32;&#32;&#32;}
<anchor xml:id="__task_mine_8cs_source_1l00248"/>00248 
<anchor xml:id="__task_mine_8cs_source_1l00249"/>00249 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04000DC8&#32;RID:&#32;3528</emphasis>
<anchor xml:id="__task_mine_8cs_source_1l00250"/>00250 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;TaskMine.Mode&#32;mode;
<anchor xml:id="__task_mine_8cs_source_1l00251"/>00251 
<anchor xml:id="__task_mine_8cs_source_1l00252"/>00252 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04000DC9&#32;RID:&#32;3529</emphasis>
<anchor xml:id="__task_mine_8cs_source_1l00253"/>00253 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;ramp&#32;=&#32;3;
<anchor xml:id="__task_mine_8cs_source_1l00254"/>00254 
<anchor xml:id="__task_mine_8cs_source_1l00255"/>00255 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x04000DCA&#32;RID:&#32;3530</emphasis>
<anchor xml:id="__task_mine_8cs_source_1l00256"/>00256 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;mined;
<anchor xml:id="__task_mine_8cs_source_1l00257"/>00257 
<anchor xml:id="__task_mine_8cs_source_1l00258"/>00258 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x0200092F&#32;RID:&#32;2351</emphasis>
<anchor xml:id="__task_mine_8cs_source_1l00259"/>00259 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">enum</emphasis>&#32;Mode
<anchor xml:id="__task_mine_8cs_source_1l00260"/>00260 &#32;&#32;&#32;&#32;{
<anchor xml:id="__task_mine_8cs_source_1l00261"/>00261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x040026D5&#32;RID:&#32;9941</emphasis>
<anchor xml:id="__task_mine_8cs_source_1l00262"/>00262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Default,
<anchor xml:id="__task_mine_8cs_source_1l00263"/>00263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Token:&#32;0x040026D6&#32;RID:&#32;9942</emphasis>
<anchor xml:id="__task_mine_8cs_source_1l00264"/>00264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Ramp
<anchor xml:id="__task_mine_8cs_source_1l00265"/>00265 &#32;&#32;&#32;&#32;}
<anchor xml:id="__task_mine_8cs_source_1l00266"/>00266 }
</programlisting></section>
